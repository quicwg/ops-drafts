{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2021-11-28T01:10:04.919187+00:00",
  "repo": "quicwg/ops-drafts",
  "labels": [
    {
      "name": "-manageability",
      "description": null,
      "color": "fbca04"
    },
    {
      "name": "-applicability",
      "description": null,
      "color": "fbca04"
    },
    {
      "name": "editorial",
      "description": null,
      "color": "0e8a16"
    },
    {
      "name": "editor-ready",
      "description": null,
      "color": "0e8a16"
    },
    {
      "name": "technical",
      "description": null,
      "color": "0052cc"
    },
    {
      "name": "scope-content",
      "description": null,
      "color": "b60205"
    },
    {
      "name": "needs-author",
      "description": "",
      "color": "c2e0c6"
    },
    {
      "name": "-interface?",
      "description": "",
      "color": "fef2c0"
    },
    {
      "name": "final check",
      "description": "",
      "color": "6977f4"
    },
    {
      "name": "has PR",
      "description": "",
      "color": "52dbdd"
    },
    {
      "name": "meeting-agenda",
      "description": "Items for discussion in a WG meeting",
      "color": "F9D0C4"
    },
    {
      "name": "ready-to-merge",
      "description": "",
      "color": "C26203"
    },
    {
      "name": "next revision",
      "description": "",
      "color": "4A0A92"
    },
    {
      "name": "NAT section",
      "description": "",
      "color": "A70369"
    },
    {
      "name": "UDP Filtering",
      "description": "",
      "color": "A70369"
    },
    {
      "name": "check-on-list",
      "description": "",
      "color": "F9D0C4"
    },
    {
      "name": "proposed-to-not-merge",
      "description": "",
      "color": "570E09"
    },
    {
      "name": "close without action?",
      "description": "",
      "color": "EF0A83"
    }
  ],
  "issues": [
    {
      "number": 3,
      "id": "MDU6SXNzdWUyMzY4MDQ1ODI=",
      "title": "Setup CI",
      "url": "https://github.com/quicwg/ops-drafts/issues/3",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Someone with ownership rights needs to hit the button on [circle](https://circleci.com/dashboard) (not travis).",
      "createdAt": "2017-06-19T07:40:56Z",
      "updatedAt": "2017-10-20T15:15:05Z",
      "closedAt": "2017-10-20T15:15:05Z",
      "comments": [
        {
          "author": "mnot",
          "authorAssociation": "MEMBER",
          "body": "I think I pressed the right button...",
          "createdAt": "2017-06-19T07:43:11Z",
          "updatedAt": "2017-06-19T07:43:11Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "The first build was clean.  To get the editors' drafts, we need someone to put a token in an environment variable called GH_TOKEN.",
          "createdAt": "2017-06-19T07:47:41Z",
          "updatedAt": "2017-06-19T07:47:41Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Not seeing anything running for my latest PR.  That's probably a misconfiguration.  Is Circle configured to build pull requests?  It should be.",
          "createdAt": "2017-06-21T03:31:54Z",
          "updatedAt": "2017-06-21T03:31:54Z"
        },
        {
          "author": "mnot",
          "authorAssociation": "MEMBER",
          "body": "\"Build forked pull requests\", right?\r\n\r\n![screen shot 2017-06-21 at 1 34 44 pm](https://user-images.githubusercontent.com/74384/27365950-6e69f1e8-5686-11e7-976c-f4d51e98f170.png)\r\n",
          "createdAt": "2017-06-21T03:35:27Z",
          "updatedAt": "2017-06-21T03:35:27Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Yep.",
          "createdAt": "2017-06-21T03:50:10Z",
          "updatedAt": "2017-06-21T03:50:10Z"
        },
        {
          "author": "mnot",
          "authorAssociation": "MEMBER",
          "body": "Done.",
          "createdAt": "2017-06-21T03:59:23Z",
          "updatedAt": "2017-06-21T03:59:23Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "this seems to work now; closable?",
          "createdAt": "2017-06-30T14:52:12Z",
          "updatedAt": "2017-06-30T14:52:12Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "It doesn't look like gh-pages is being updated automatically, which means that the issues aren't being saved either.\r\n\r\n@britram, are you manually updating gh-pages?  Are you happy continuing to do that?  If so, I will close this.",
          "createdAt": "2017-06-30T17:41:03Z",
          "updatedAt": "2017-06-30T17:41:03Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think I found the issue here; needed to make setup-ghissues...\r\n",
          "createdAt": "2017-07-03T08:02:08Z",
          "updatedAt": "2017-07-03T08:02:08Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "CI seems to work for PRs now, at least.",
          "createdAt": "2017-07-03T08:18:41Z",
          "updatedAt": "2017-07-03T08:18:41Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "MDU6SXNzdWUyMzg4NjQxNjQ=",
      "title": "Write subsection \"Thinking in zero RTT\"",
      "url": "https://github.com/quicwg/ops-drafts/issues/5",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [],
      "body": "Jana noted at the interim in Paris that we should point out\r\nthat applications need to be re-thought slightly to get the benefits of zero\r\nRTT. Add a little text to discuss this and why it's worth the effort,\r\nbefore we go straight into the dragons.",
      "createdAt": "2017-06-27T14:09:18Z",
      "updatedAt": "2017-07-03T08:17:36Z",
      "closedAt": "2017-07-03T08:17:36Z",
      "comments": []
    },
    {
      "number": 6,
      "id": "MDU6SXNzdWUyMzg4NjU2OTc=",
      "title": "Write subsection \"Session resumption versus keep-alive\"",
      "url": "https://github.com/quicwg/ops-drafts/issues/6",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "scope-content"
      ],
      "body": "Add text to section on tradeoffs for using 0-RTT session resumption rather then sending keep-alives. This was discussed at the interim in Paris, and it turns out that this might not be a great idea; tracking the open editor's note in the doc.",
      "createdAt": "2017-06-27T14:13:54Z",
      "updatedAt": "2018-10-17T15:24:18Z",
      "closedAt": "2018-10-17T15:24:18Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "let's defer this to -01.",
          "createdAt": "2017-06-30T14:51:44Z",
          "updatedAt": "2017-06-30T14:51:44Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "see also PR #744 for base-drafts",
          "createdAt": "2017-08-22T16:15:21Z",
          "updatedAt": "2017-08-22T16:15:21Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Addressed by PR #41 ",
          "createdAt": "2018-10-17T15:24:18Z",
          "updatedAt": "2018-10-17T15:24:18Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "MDU6SXNzdWUyNDAxMTIwNTQ=",
      "title": "Write subsection \"Initial Handshake and PMTUD\"",
      "url": "https://github.com/quicwg/ops-drafts/issues/8",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "scope-content"
      ],
      "body": "Section 2.5 needs content.",
      "createdAt": "2017-07-03T09:14:01Z",
      "updatedAt": "2018-07-02T10:40:31Z",
      "closedAt": "2018-07-02T10:40:31Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This actually seems to be superceded by \u00a78.4 in transport-13",
          "createdAt": "2018-07-02T10:39:40Z",
          "updatedAt": "2018-07-02T10:39:40Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "MDU6SXNzdWUyNDAxMTg5NDE=",
      "title": "Track changes in server stateless reject",
      "url": "https://github.com/quicwg/ops-drafts/issues/9",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "technical"
      ],
      "body": "Ensure that the description of redirection via server stateless reject accurately reflects the present state of the transport draft.",
      "createdAt": "2017-07-03T09:40:12Z",
      "updatedAt": "2018-07-02T10:21:36Z",
      "closedAt": "2018-07-02T10:21:36Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This seems to have been OBE.",
          "createdAt": "2018-07-02T10:21:36Z",
          "updatedAt": "2018-07-02T10:21:36Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "MDU6SXNzdWUyNDAxMTkzNDQ=",
      "title": "Server port number selection",
      "url": "https://github.com/quicwg/ops-drafts/issues/10",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "scope-content"
      ],
      "body": "The applicability statement should provide / point to guidelines for application protocol port selection for QUIC. See the [related issue](https://github.com/quicwg/base-drafts/issues/495) on the base drafts.",
      "createdAt": "2017-07-03T09:41:53Z",
      "updatedAt": "2018-02-06T21:41:40Z",
      "closedAt": "2018-02-06T21:41:40Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "see #26 ",
          "createdAt": "2018-02-06T21:41:40Z",
          "updatedAt": "2018-02-06T21:41:40Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "MDU6SXNzdWUyNDAxMzc5NTM=",
      "title": "Server-Generated Connection ID should include a cryptographic MAC",
      "url": "https://github.com/quicwg/ops-drafts/issues/11",
      "state": "CLOSED",
      "author": "ThomasSwindells",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The guidance recommend that server generated connection IDs should include a crytographic MAC when being used for load balancing. This sounds like a good suggestion in principal, but the Connection ID is 64bits in size, I'm not a cryptographer but I don't see how this is possible - if it is possible then it perhaps would be good to include guidance within the documents?\r\n\r\nMy logic is as follows (hopefully I've made a mistake/misunderstood the concept somewhere)\r\n\r\nAs a CDN operator I'd probably want to segment the connection ID into 4 spaces:\r\nPOP id|machine id|unique connection|MAC\r\n\r\nYou could combine your POP id and machine ID into a single space but it is likely to be beneficial to have two tiers, the POP routes the request to the right general location and the machine id then identifies a machine within that space. Other ways to split this are also possible.\r\n\r\nIf 12 bits are used for POP id that would give 4096 distinct locations. Trends to deploy deeper into networks (particularly within mobile/cell base stations) doesn't make this number totally infeasible .\r\nIf 8 bits are then used for a machine id within a POP that gives 256 possible machines. \r\n\r\nThis means 20 bits might be used for load balancing purposes. This gives a bit (lot?) of room for flexibility and it is unlikely all million combinations are used but it is probably the right order of magnitude for a large widely distributed CDN (even if we drop down to 16 bits it doesn't significantly impact the analysis below).\r\n\r\nThe actual unique connection pool needs to be large enough to avoid repeating too quickly - even if you have a lot of clients taking advantage of 0RTT to aggressively close/re-open connections. There also presumably needs to be some randomization of the ids so that they aren't created sequentially. I've assumed 24 bits (which is only 16 million unique ids per server).\r\n\r\nThis only leaves 20 bits left for the MAC, that is about 1 million possible values. As I've said I'm not a cryptographer but to me this looks small enough that a brute force attack guided by some valid inputs might be feasible even on relatively low power machines? \r\n\r\nFor that matter isn't a simple replay attack feasible? The MAC can't be based upon the full 5-tuple as we need to support connection mobility. You could embed a timestamp into the id somewhere to protect against this but that would use up even more bits, otherwise you could slowly gather up valid (but presumably closed) connection ids and then aggressively replay them all in a short time period.",
      "createdAt": "2017-07-03T10:56:37Z",
      "updatedAt": "2019-07-04T14:53:54Z",
      "closedAt": "2019-07-04T14:53:53Z",
      "comments": [
        {
          "author": "igorlord",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> This only leaves 20 bits left for the MAC, that is about 1 million possible values. As I've said I'm not a cryptographer but to me this looks small enough that a brute force attack guided by some valid inputs might be feasible even on relatively low power machines?\r\n\r\nThe goal of the MAC is not make a brute force attacker unable to generate a \"valid\" Connection ID but to make it a relatively low-probability event.  The only reason I see to have a MAC at all is to make it harder for an attacker to mount an effective attack on a single backend using your routing infrastructure for steering.  QUIC as a protocol is resilient to man-on-a-side attack vector (except during handshake), so attackers guessing valid connection IDs is not a big deal.\r\n\r\nThe key is to have enough entropy (\"unique connection\" size) so you do not accidentally create duplicate connection IDs.\r\n\r\nYou may also want to include at least a bit that identifies the key used (since you'll want to do key rotation).",
          "createdAt": "2018-10-17T19:43:36Z",
          "updatedAt": "2018-10-17T19:44:44Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closed now. Please send PR if you think more text is needed.",
          "createdAt": "2019-07-04T14:53:53Z",
          "updatedAt": "2019-07-04T14:53:53Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "MDU6SXNzdWUyNDkyNzUxODA=",
      "title": "Use of multiple quic connection on the same port/5-tuple",
      "url": "https://github.com/quicwg/ops-drafts/issues/12",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "Write section to provide guidance; maybe in the same section than guidance in port selection in general",
      "createdAt": "2017-08-10T08:47:52Z",
      "updatedAt": "2018-10-22T13:54:18Z",
      "closedAt": "2018-10-22T13:54:18Z",
      "comments": []
    },
    {
      "number": 13,
      "id": "MDU6SXNzdWUyNTczNTAxOTI=",
      "title": "How to handle rejected 0-RTT data",
      "url": "https://github.com/quicwg/ops-drafts/issues/13",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "Probably needs some API for the app to indicate if 0-RTT should be retransmitted or withdrawn after a rejection.",
      "createdAt": "2017-09-13T11:42:15Z",
      "updatedAt": "2019-07-04T14:53:12Z",
      "closedAt": "2019-07-04T14:53:12Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "fixed by #77 ",
          "createdAt": "2019-07-04T14:53:12Z",
          "updatedAt": "2019-07-04T14:53:12Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "MDU6SXNzdWUyNjM4MzQxMDY=",
      "title": "Add text on error handling for application-visible errors",
      "url": "https://github.com/quicwg/ops-drafts/issues/14",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "",
      "createdAt": "2017-10-09T09:35:45Z",
      "updatedAt": "2019-07-04T14:17:19Z",
      "closedAt": "2019-07-04T14:17:18Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See also PR #78 ",
          "createdAt": "2019-07-04T13:23:23Z",
          "updatedAt": "2019-07-04T13:23:23Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "merged",
          "createdAt": "2019-07-04T14:17:18Z",
          "updatedAt": "2019-07-04T14:17:18Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "MDU6SXNzdWUyNjM4NDUzNjI=",
      "title": "Explain emulation of partial reliability with one message per stream?",
      "url": "https://github.com/quicwg/ops-drafts/issues/15",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "",
      "createdAt": "2017-10-09T10:17:26Z",
      "updatedAt": "2019-07-02T14:49:30Z",
      "closedAt": "2019-07-02T14:49:30Z",
      "comments": [
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think explaining how reset can create partial reliability would be useful.  I think that's orthogonal to whether it's a bidirectional stream model or a message model, though.  One could use partial reliability in both cases.",
          "createdAt": "2017-10-09T14:04:45Z",
          "updatedAt": "2017-10-09T14:04:45Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Phrased as guidance on the use of resetting streams, this is useful. I don't think we're blocking on this, though, and in any case I wouldn't want whatever advice we give here to conflict with whatever partial reliability approach ends up in V2.",
          "createdAt": "2018-10-31T09:46:14Z",
          "updatedAt": "2018-10-31T09:46:14Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussion in BKK seems to have converged on \"don't do this for v1 applicability statement; applicability of PR and different PR strategies belongs in a document discussing PR as an extension\". closing for now.",
          "createdAt": "2018-11-06T07:50:20Z",
          "updatedAt": "2018-11-06T07:50:20Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "oops, going to leave this open to track discussion. note that #54 covers an alternate view of this.",
          "createdAt": "2018-11-06T08:10:15Z",
          "updatedAt": "2018-11-06T08:10:15Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "there's a line of text in the working copy on this now: \"If one message is\r\nmapped on a single stream, resetting the stream if the message is not needed\r\nanymore can be used to emulate partial reliability on a message basis.\" This is probably sufficient.",
          "createdAt": "2019-07-02T14:49:30Z",
          "updatedAt": "2019-07-02T14:49:30Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "MDU6SXNzdWUyNzYyNDQzNzU=",
      "title": "Connection IDs and ICMP Error messages (for PMTU discovery)",
      "url": "https://github.com/quicwg/ops-drafts/issues/23",
      "state": "CLOSED",
      "author": "igorlord",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "Any endpoint that identifies connections using a Connection ID requires that Connection ID in packets, including ICMP Error packets. Hence, that endpoint will not only request the peer to send Connection IDs but will also include Connection IDs on outgoing packets (in case they result in an ICMP Error packet). Such ICMP Error packets are required for PMTU discovery, among other things.\r\n\r\nSuch Connection IDs will be sent even if the peer gave its permission to omit Connection IDs using Transport Parameter omit_connection_id.   See https://github.com/quicwg/base-drafts/issues/953 for more.",
      "createdAt": "2017-11-23T01:12:15Z",
      "updatedAt": "2019-07-04T14:35:26Z",
      "closedAt": "2019-07-04T14:35:26Z",
      "comments": []
    },
    {
      "number": 25,
      "id": "MDU6SXNzdWUyOTAyNDU5NzM=",
      "title": "GQUIC -> QUIC migration",
      "url": "https://github.com/quicwg/ops-drafts/issues/25",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "ianswett"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "From @martinduke in quicwg/base-drafts#1006:\r\n\r\n> We're pretty close to settling on a wire image, I think. It would be useful for the transport draft (and eventually the RFC) to have an appendix covering issues with simultaneous support of GQUIC versions and QUIC v1.\r\n>\r\n> I believe all the entities actually trying to support GQUIC are heavily involved in the working group. However, I imagine there are quite a lot of middleboxes out there doing some basic ID/classification (if not more) on GQUIC today, and will need some guide on how to simultaneously handle two packet header formats, etc.\r\n>\r\n> If people are opposed to an appendix, I suppose a short-lived internet draft would also get the job done. In any case, I'd like to see a placeholder sooner rather than later.",
      "createdAt": "2018-01-21T04:23:51Z",
      "updatedAt": "2019-07-04T13:57:16Z",
      "closedAt": "2019-07-04T13:57:16Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is this related to issue #25 or can both things be addressed in the same section?",
          "createdAt": "2018-10-17T16:38:04Z",
          "updatedAt": "2018-10-17T16:38:04Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm not clear what the goal here is.  A this point, gQUIC is on the verge of being deprecated.  I would not want to encourage anyone who doesn't already support both IETF QUIC and gQUIC to add support for gQUIC.  Adding text about this might make people think this is desirable, which it definitely is not.",
          "createdAt": "2018-11-03T02:36:30Z",
          "updatedAt": "2018-11-03T02:36:30Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Rereading @martinduke original comment, I guess this was more about handling of different versions in the network and therefore should go into the manageability draft, if at all. Would it make sense to say something more general about handling of different versions (and just take gQUIC as the deployed example)...? Not sure what though...",
          "createdAt": "2018-11-03T10:11:32Z",
          "updatedAt": "2018-11-03T10:11:32Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Well, if things like the spin bit are adopted, then a future version could drop support for it?  I'm not sure what else is worth saying?",
          "createdAt": "2018-11-03T11:40:20Z",
          "updatedAt": "2018-11-03T11:40:20Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Do we already have this in the new version upgrade text?",
          "createdAt": "2018-11-04T02:01:02Z",
          "updatedAt": "2018-11-04T02:01:02Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I guess we don't have anything in the manageability draft though...",
          "createdAt": "2018-11-04T03:27:08Z",
          "updatedAt": "2018-11-04T03:27:08Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ianswett Given the current state of GQUIC/QUIC deployment and transition, is this still relevant or OBE for -manageability?",
          "createdAt": "2019-07-02T14:22:01Z",
          "updatedAt": "2019-07-02T14:22:01Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "By the time the RFC is shipped, it's almost certain any text about this will be obsolete.\r\n\r\nMost GQUIC traffic is already using the invariant header and draft 20 long packet types, so it should already look very similar to IETF QUIC from a middlebox perspective.",
          "createdAt": "2019-07-02T14:49:39Z",
          "updatedAt": "2019-07-02T14:49:39Z"
        },
        {
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "body": "> Most GQUIC traffic is already using the invariant header and draft 20 long packet types\r\n\r\nIs that so?  Chrome Stable (as of 75.0.3770.100) uses Q043, which has the \"classic\" GQUIC headers.",
          "createdAt": "2019-07-02T15:04:50Z",
          "updatedAt": "2019-07-02T15:04:50Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "A small fraction of users in Chrome are still on v43(or even TCP) as a holdback, but the majority of users should be on v46, and v46 is default enabled in the code itself, but probably not until m76.",
          "createdAt": "2019-07-02T22:15:58Z",
          "updatedAt": "2019-07-02T22:15:58Z"
        },
        {
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "body": "I see what happened: my \"enable QUIC\" flag was \"Yes.\"  Switching it to \"Default\" made Chrome use Q046.  I stand corrected.",
          "createdAt": "2019-07-03T00:06:30Z",
          "updatedAt": "2019-07-03T00:06:30Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, that's an unfortunate consequence of forcing it on at the moment.\nThere may be a way to ensure that flag does what you'd expect(ie: enable\nv46).\n\nOn Tue, Jul 2, 2019 at 8:06 PM Dmitri Tikhonov <notifications@github.com>\nwrote:\n\n> I see what happened: my \"enable QUIC\" flag was \"Yes.\" Switching it to\n> \"Default\" made Chrome use Q046. I stand corrected.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/quicwg/ops-drafts/issues/25?email_source=notifications&email_token=AEZES4K3JZH3JTWMVJW7TMLP5PUQPA5CNFSM4EMWYS42YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODZC4EBQ#issuecomment-507888134>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AEZES4LBXSAIAIBQMVLFWN3P5PUQPANCNFSM4EMWYS4Q>\n> .\n>\n",
          "createdAt": "2019-07-03T00:08:04Z",
          "updatedAt": "2019-07-03T00:08:04Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think we can close this specific issue. However, is there any general guidance that could/should be given when supporting multiple versions/transitioning to a new version?",
          "createdAt": "2019-07-04T12:08:29Z",
          "updatedAt": "2019-07-04T12:08:29Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Actually we already have a section on \"Enabling New Versions\". If you think anything is still missing there please provide an PR. Other than that I will close the issue now.",
          "createdAt": "2019-07-04T13:57:16Z",
          "updatedAt": "2019-07-04T13:57:16Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "MDU6SXNzdWUyOTQ4ODI4ODg=",
      "title": "Guidance for port number use",
      "url": "https://github.com/quicwg/ops-drafts/issues/26",
      "state": "CLOSED",
      "author": "MikeBishop",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "-applicability",
        "-manageability"
      ],
      "body": "Copying from https://github.com/quicwg/base-drafts/issues/495\r\n\r\nThere's no requirement that servers use a particular UDP port for HTTP/QUIC or any other QUIC traffic. Using Alt-Svc, the server is able to pick and advertise any port number and a compliant client will handle it just fine. That's already the case, and isn't part of this issue. #424 updates the HTTP draft to highlight this, increasing the odds that implementations will test and support that case.\r\n\r\nThis issue is to track that it might actually be desirable from a privacy standpoint for servers to pick arbitrary port numbers and perhaps even rotate them periodically (though that requires coordination with their Alt-Svc advertisements and lifetimes, which could be challenging) in order to make it more difficult for a network observer to classify traffic (and therefore more difficult to ossify).\r\n\r\nOn the other hand, as we're wrestling with in each of these privacy/manageability debates, removing easy network visibility into the likely protocol by using arbitrary port numbers means that middleboxes will probably resort to other means of attempting to identify protocols and potentially doing it badly, which could result in even worse ossification. (E.g. indexing into the TLS ClientHello to find the ALPN list, then panicking on a different handshake protocol.)\r\n\r\nThere's further discussion on the original issue, but this belongs in the ops drafts, not the protocol drafts.",
      "createdAt": "2018-02-06T19:24:50Z",
      "updatedAt": "2019-07-04T13:27:07Z",
      "closedAt": "2019-07-04T13:27:07Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "this kind-of-but-not-really-duplicates #10, which I'll go ahead and close.",
          "createdAt": "2018-02-06T21:41:29Z",
          "updatedAt": "2018-02-06T21:41:29Z"
        },
        {
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "body": "Actually, it's an exact duplicate, given that it points to the same issue.  ;-)  My bad.",
          "createdAt": "2018-02-06T22:18:14Z",
          "updatedAt": "2018-02-06T22:18:14Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@MikeBishop can you check if PR #43 addresses this issue sufficiently? At least for the applicability doc...",
          "createdAt": "2018-10-17T16:23:15Z",
          "updatedAt": "2018-10-17T16:23:52Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Now also PR #44 for the manageability statement.",
          "createdAt": "2018-10-17T16:34:11Z",
          "updatedAt": "2018-10-17T16:34:11Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "#43 and #44 are a (ready for -03) treatment of this; however, we should consider if we want to say more, e.g. such as general guidance / recommendations for using ALPN in QUIC mappings, for instance? Keeping this open to track.",
          "createdAt": "2018-10-22T14:41:01Z",
          "updatedAt": "2018-10-22T14:41:01Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "created new issue #79 for ALPN",
          "createdAt": "2019-07-04T13:27:07Z",
          "updatedAt": "2019-07-04T13:27:07Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "MDU6SXNzdWUzMDM3Nzk4NjQ=",
      "title": "Provide further text on how to construct a connection ID in manageability statement",
      "url": "https://github.com/quicwg/ops-drafts/issues/27",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Of course update text on connection ID first when PR on symmetric IDs is landed.",
      "createdAt": "2018-03-09T09:41:11Z",
      "updatedAt": "2018-07-02T10:30:57Z",
      "closedAt": "2018-07-02T10:30:57Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note that this is a generalization of #11",
          "createdAt": "2018-07-02T10:29:40Z",
          "updatedAt": "2018-07-02T10:29:40Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "and a duplicate of #29",
          "createdAt": "2018-07-02T10:30:57Z",
          "updatedAt": "2018-07-02T10:30:57Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "MDU6SXNzdWUzMDQ4MzE3MDI=",
      "title": "Document how a server cluster might be upgraded and rolled back",
      "url": "https://github.com/quicwg/ops-drafts/issues/28",
      "state": "CLOSED",
      "author": "janaiyengar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "Moving this from quicwg/base-drafts#504 to here.",
      "createdAt": "2018-03-13T16:10:04Z",
      "updatedAt": "2018-10-31T09:36:06Z",
      "closedAt": "2018-10-31T09:36:06Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@janaiyengar @ianswett can one of you maybe provide some text?",
          "createdAt": "2018-10-17T16:37:03Z",
          "updatedAt": "2018-10-17T16:37:03Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "[This](https://github.com/quicwg/base-drafts/pull/1901#discussion_r228354726) is probably exactly what needs to be said for this issue.",
          "createdAt": "2018-10-25T23:35:01Z",
          "updatedAt": "2018-10-25T23:35:01Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "MDU6SXNzdWUzMDQ4MzM5NjU=",
      "title": "Describe how and why a server might choose connection IDs",
      "url": "https://github.com/quicwg/ops-drafts/issues/29",
      "state": "CLOSED",
      "author": "janaiyengar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "janaiyengar",
        "martinduke"
      ],
      "labels": [
        "-applicability",
        "needs-author"
      ],
      "body": "Moving https://github.com/quicwg/base-drafts/issues/514 to the ops repo.",
      "createdAt": "2018-03-13T16:15:29Z",
      "updatedAt": "2019-07-02T14:17:58Z",
      "closedAt": "2019-07-02T14:17:58Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "see also #11 -- in any case the text that is there now is not great.",
          "createdAt": "2018-07-02T10:31:19Z",
          "updatedAt": "2018-07-02T10:31:19Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@janaiyengar can you please review the existing text (orginially provided by @igorlord) and state what else is needed? Please have also a look at issue #11 ",
          "createdAt": "2018-10-17T16:36:26Z",
          "updatedAt": "2018-10-17T16:41:33Z"
        },
        {
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is a bit OBE, but I think there might still be value in discussing how a server implementer should think about connection IDs. Fortunately, @martinduke has been doing a bunch of work on this in his load balancer draft. I would suggest that we leave this issue open, and either point to the LB draft or use text from it.",
          "createdAt": "2018-11-03T06:19:04Z",
          "updatedAt": "2018-11-03T06:19:04Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "#51 fixed this",
          "createdAt": "2019-07-02T14:17:58Z",
          "updatedAt": "2019-07-02T14:17:58Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "MDU6SXNzdWUzMDk3MTQ3NjI=",
      "title": "Provide interface for fixed-size packets for analysis resistance?",
      "url": "https://github.com/quicwg/ops-drafts/issues/30",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "quic could offer an appliaction interface to specify the use of fixed length packets as input for an algorithm that handles padding to enable concealment of application characteristics based on packet length",
      "createdAt": "2018-03-29T11:14:32Z",
      "updatedAt": "2019-07-04T14:25:03Z",
      "closedAt": "2019-07-04T14:25:03Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "see PR #80 ",
          "createdAt": "2019-07-04T13:45:32Z",
          "updatedAt": "2019-07-04T13:45:32Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "merged",
          "createdAt": "2019-07-04T14:25:03Z",
          "updatedAt": "2019-07-04T14:25:03Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "MDU6SXNzdWUzMjA2OTA3NDc=",
      "title": "Operational guidelines for reducing timing-linkability across CID migration",
      "url": "https://github.com/quicwg/ops-drafts/issues/31",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram",
        "chris-wood"
      ],
      "labels": [],
      "body": "Linkability across CID changes is in the common case so trivial that protocol features to defeat linkability through other means risk being useless.\r\n\r\n\"Find CID _y_ where delay < _d_ between last packet for CID _x_ and first packet for CID _y_ on 2-tuple _{a,p}_, given _{x,a,p}_\" is an operation which requires zero additional state and a simple O(kn log n) search for any large on-path (passive surveillance) device that's halfway smart about keeping per-flow state -- i.e., it's basically a free operation, and its utility is baked into the physics of CIDs -- after all, this is what CIDs are **for**.  \r\n\r\nThe ease of this analysis can only be mitigated by increasing the size of the anonymity set: ensuring that for any given delay window _d_, a minimum number of CIDs _x_ transition on any given {a,p}. This seems like good operational advice for servers with enough traffic to build such anonymity sets (should they have interest in preventing client linkability, of course) -- small servers are probably out of luck though.\r\n\r\nApplicability should call this out as a problem, manageability should suggest a solution space.",
      "createdAt": "2018-05-07T06:41:38Z",
      "updatedAt": "2018-10-19T10:14:05Z",
      "closedAt": "2018-10-19T10:14:05Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "-quic-transport section 6.11.5. begins to address this now, but aside from the following...\r\n\r\n> ...[t]his eliminates the use of the connection ID for linking activity from the same connection on different networks. Protection of packet numbers ensures that packet numbers cannot be used to correlate activity. This does not prevent other properties of packets, such as timing and size, from being used to correlate activity...\r\n\r\n...it still seems to pretend that coordinated CID migration is sufficient to fix linkability. So I still think we need something in -applicability. Will throw together a PR today.",
          "createdAt": "2018-10-18T07:44:04Z",
          "updatedAt": "2018-10-18T07:44:04Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addressed in #45 ",
          "createdAt": "2018-10-19T10:14:05Z",
          "updatedAt": "2018-10-19T10:14:05Z"
        }
      ]
    },
    {
      "number": 34,
      "id": "MDU6SXNzdWUzMzc0Nzg5NDQ=",
      "title": "unbreak circleci",
      "url": "https://github.com/quicwg/ops-drafts/issues/34",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2018-07-02T11:25:58Z",
      "updatedAt": "2018-10-18T08:38:37Z",
      "closedAt": "2018-10-18T08:38:37Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "...either i did this or it did itself? still need to move to circleci 2.0, but I think this is an upstream question for the i-d-template...",
          "createdAt": "2018-10-18T08:38:37Z",
          "updatedAt": "2018-10-18T08:38:37Z"
        }
      ]
    },
    {
      "number": 35,
      "id": "MDU6SXNzdWUzNDIzNzUwNjA=",
      "title": "Handshake Illustration",
      "url": "https://github.com/quicwg/ops-drafts/issues/35",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "The manageability document should illustrate all the various packet sequences in a handshake, preferably with pretty pictures.",
      "createdAt": "2018-07-18T15:18:15Z",
      "updatedAt": "2018-10-19T13:07:31Z",
      "closedAt": "2018-10-19T13:07:31Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Now the transport draft has these illustrations as well. However, I think we should still at them in manageability as well. Actually I would like to try the SVG format here. Anybody in for that?",
          "createdAt": "2018-10-17T15:33:54Z",
          "updatedAt": "2018-10-17T15:33:54Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The handshake illustrations here should only concern themselves with the wire image, unlike those in the transport draft, but yes we should derive them from the transport draft. Happy to do these in ASCII as well as SVG.",
          "createdAt": "2018-10-18T10:41:18Z",
          "updatedAt": "2018-10-18T10:41:18Z"
        }
      ]
    },
    {
      "number": 37,
      "id": "MDU6SXNzdWUzNTA0NDE2NjA=",
      "title": "Provide guidance on use of PING",
      "url": "https://github.com/quicwg/ops-drafts/issues/37",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "The transport draft says:\r\n\r\n\"The PING frame can be used to keep a connection alive when an application or application protocol wishes to prevent the connection from timing out. An application protocol SHOULD provide guidance about the conditions under which generating a PING is recommended. This guidance SHOULD indicate whether it is the client or the server that is expected to send the PING. Having both endpoints send PING frames without coordination can produce an excessive number of packets and poor performance.\"\r\n\r\nProbably we should state this in the applicability statement as well...",
      "createdAt": "2018-08-14T14:00:33Z",
      "updatedAt": "2018-10-30T12:04:44Z",
      "closedAt": "2018-10-30T12:04:44Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The transport draft also provides guidance on on the ping interval: \r\n\r\n\"A connection will time out if no packets are sent or received for a period longer than the time specified in the idle_timeout transport parameter (see {{termination}}). However, state in middleboxes might time out earlier than that. Though REQ-5 in {{?RFC4787}} recommends a 2 minute timeout interval, experience shows that sending packets every 15 to 30 seconds is necessary to prevent the majority of middleboxes from losing state for UDP flows.\"",
          "createdAt": "2018-08-14T14:01:56Z",
          "updatedAt": "2018-08-14T14:01:56Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "That is not intended as guidance, but a caution.  This is something that firmly fits in the application space.  For instance, in HTTP, sending PING frames to keep the connection alive might be appropriate when a request is outstanding, but it shouldn't be used otherwise.",
          "createdAt": "2018-08-14T23:00:02Z",
          "updatedAt": "2018-08-14T23:00:02Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinthomson I added a bit of text in PR #41. Can you have a look at it?",
          "createdAt": "2018-10-17T15:32:19Z",
          "updatedAt": "2018-10-17T15:32:19Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Resolved by PR #50 ",
          "createdAt": "2018-10-30T12:04:44Z",
          "updatedAt": "2018-10-30T12:04:44Z"
        }
      ]
    },
    {
      "number": 38,
      "id": "MDU6SXNzdWUzNTA0NjY0MDE=",
      "title": "Provide reference to respective section in transport draft on \"Packetization and latency\"",
      "url": "https://github.com/quicwg/ops-drafts/issues/38",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-08-14T14:57:10Z",
      "updatedAt": "2018-10-17T15:30:42Z",
      "closedAt": "2018-10-17T15:30:42Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addressed by PR #42 ",
          "createdAt": "2018-10-17T15:30:42Z",
          "updatedAt": "2018-10-17T15:30:42Z"
        }
      ]
    },
    {
      "number": 39,
      "id": "MDU6SXNzdWUzNTA0OTI2Njc=",
      "title": "Maybe say something about in-order delivery (in streams)",
      "url": "https://github.com/quicwg/ops-drafts/issues/39",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "See also section on Streams in transport draft:\r\n\"Stream offsets allow for the octets on a stream to be placed in order. An endpoint MUST be capable of delivering data received on a stream in order. Implementations MAY choose to offer the ability to deliver data out of order. There is no means of ensuring ordering between octets on different streams.\"",
      "createdAt": "2018-08-14T15:58:41Z",
      "updatedAt": "2019-07-23T15:54:50Z",
      "closedAt": "2019-07-23T15:54:50Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See PR #84 ",
          "createdAt": "2019-07-04T15:14:39Z",
          "updatedAt": "2019-07-04T15:14:39Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "MDU6SXNzdWUzNTEyODM3MTI=",
      "title": "Reference load balancer draft for retry service and give recommendations for address validation token",
      "url": "https://github.com/quicwg/ops-drafts/issues/40",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram",
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "... in the applicability statement? I mean one example mechanism maybe...",
      "createdAt": "2018-08-16T16:42:16Z",
      "updatedAt": "2020-08-17T11:51:22Z",
      "closedAt": "2020-08-17T11:51:22Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Can anybody help with that?",
          "createdAt": "2018-10-17T15:34:42Z",
          "updatedAt": "2018-10-17T15:34:42Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "https://tools.ietf.org/html/rfc5077#section-4",
          "createdAt": "2018-10-17T22:54:51Z",
          "updatedAt": "2018-10-17T22:54:51Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "NONE",
          "body": "The 5077 construction is pretty outdated (it's not even AEAD), unfortunately.\r\n",
          "createdAt": "2018-11-06T07:53:25Z",
          "updatedAt": "2018-11-06T07:53:25Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ekr is there somewhere else we should look for current best practice, or do we need to invent something new here?\r\n",
          "createdAt": "2018-11-06T08:21:06Z",
          "updatedAt": "2018-11-06T08:21:06Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'll find a stuckee for up-to-date crypto language here at the Zurich interim.",
          "createdAt": "2020-01-13T10:07:05Z",
          "updatedAt": "2020-01-13T10:07:05Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "closing for now, couldn't find any takers.",
          "createdAt": "2020-07-06T14:53:18Z",
          "updatedAt": "2020-07-06T14:53:18Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "...actually, it's in the LB draft. Reference it.",
          "createdAt": "2020-07-06T14:54:36Z",
          "updatedAt": "2020-07-06T14:54:36Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #104 proposed to address this issue...",
          "createdAt": "2020-07-07T16:27:25Z",
          "updatedAt": "2020-07-07T16:27:25Z"
        }
      ]
    },
    {
      "number": 54,
      "id": "MDU6SXNzdWUzNzc3Mjk4Mzk=",
      "title": "Streams as message-framing",
      "url": "https://github.com/quicwg/ops-drafts/issues/54",
      "state": "CLOSED",
      "author": "janaiyengar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "It's useful to talk about the use of streams as messages, since they're designed to be lightweight. This is a feature of QUIC, and it's worth articulating.",
      "createdAt": "2018-11-06T07:57:40Z",
      "updatedAt": "2019-07-04T13:46:48Z",
      "closedAt": "2019-07-04T13:46:48Z",
      "comments": [
        {
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "body": "> streams [are] designed to be lightweight\r\n\r\nThe Working Group does not believe that to be true: using many streams was used by the majority to argue against the design of the original (@MikeBishop's pre-QCRAM) QPACK.",
          "createdAt": "2018-11-06T17:25:37Z",
          "updatedAt": "2018-11-06T17:25:37Z"
        },
        {
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@dtikhonov: I don't want to litigate how QPACK ought to have been done here, but streams are defined to be usable in this manner. See [transport draft](https://quicwg.org/base-drafts/draft-ietf-quic-transport.html#rfc.section.2): \"Streams in QUIC provide a lightweight, ordered byte-stream abstraction to an application. An alternative view of QUIC streams is as an elastic \u201cmessage\u201d abstraction.\"",
          "createdAt": "2018-11-07T02:29:19Z",
          "updatedAt": "2018-11-07T02:29:19Z"
        },
        {
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "body": "My point is about the \"lightweightedness\" of QUIC streams, not about QPACK.",
          "createdAt": "2018-11-07T04:07:52Z",
          "updatedAt": "2018-11-07T04:07:52Z"
        },
        {
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Since that's not an objectively-defined term, I think every use-case will\nhave to decide whether a QUIC stream is lightweight enough. That said, it's\nstill reasonable as a message abstraction, but maybe not _all_ use cases.\n\nOn Wed, Nov 7, 2018 at 11:07 AM Dmitri Tikhonov <notifications@github.com>\nwrote:\n\n> My point is about the \"lightweightedness\" of QUIC streams, not about QPACK.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/quicwg/ops-drafts/issues/54#issuecomment-436498195>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AKjg1JGNrAYJogKMQBoMGiQNTLAupCoMks5uslyZgaJpZM4YP7G_>\n> .\n>\n",
          "createdAt": "2018-11-07T12:17:53Z",
          "updatedAt": "2018-11-07T12:17:53Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "note that this is a partial dupe of #15 (which implicitly uses streams for message framing in order to make them variably-reliable). \r\n\r\nIMO, at least some language on this (if we want to do this, which I personally do) belongs in -transport, because while it is not _technically_ necessary to call out there for interoperability purposes, the fact that streams-as-messages is obvious enough in the shadows of the design to have occurred to multiple people mapping multiple different application protocols and APIs to QUIC means at least a pointer to the idea should be there (so as not to surprise people to whom it has not yet occurred).",
          "createdAt": "2019-04-18T07:13:20Z",
          "updatedAt": "2019-04-18T07:13:20Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hm, I think this was discussed as some QUIC meeting a couple of IETFs ago and we agreed to have it (only) in manageability.",
          "createdAt": "2019-04-18T08:11:03Z",
          "updatedAt": "2019-04-18T08:11:03Z"
        },
        {
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "body": "IIRC, the thought was that we'd rather have people use DATAGRAM for this purpose, once it's available.  Personally, I disagree with that stance, because streams-as-messages means you can have a message-based protocol that's not limited to the path MTU, which I find quite compelling.",
          "createdAt": "2019-04-18T18:43:18Z",
          "updatedAt": "2019-04-18T18:43:18Z"
        },
        {
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree with @MikeBishop on the value, but I had thought that this really belonged in the applicability document. It is about how QUIC's abstractions may be used, which seems like an applicability point.",
          "createdAt": "2019-04-18T22:45:41Z",
          "updatedAt": "2019-04-18T22:45:41Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is what is already in the doc: \r\n\"If there is a logical grouping of those data chunks or messages, stream can be reused, or a new stream can be opened for each chunk/message.\"\r\n\r\nI think that is sufficient. Can we close the issue?\r\n",
          "createdAt": "2019-07-02T14:39:36Z",
          "updatedAt": "2019-07-02T14:39:36Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "+1 to closing this.",
          "createdAt": "2019-07-02T14:40:29Z",
          "updatedAt": "2019-07-02T14:40:29Z"
        }
      ]
    },
    {
      "number": 56,
      "id": "MDU6SXNzdWUzODUzNDU1ODU=",
      "title": "Further discussion on connection identification at stateful firewalls",
      "url": "https://github.com/quicwg/ops-drafts/issues/56",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "See [Toma's email](https://mailarchive.ietf.org/arch/msg/quic/ZqPF68ouXg3U0Y2hsvTX0QTLyuk).\r\n\r\n",
      "createdAt": "2018-11-28T16:16:17Z",
      "updatedAt": "2019-07-04T16:27:04Z",
      "closedAt": "2019-07-04T16:27:04Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "ISTM that this might also be an applicability thing as the \"easy\" solution involves the firewall to share state with the LB/frontend (with all the scalability impact that entails).",
          "createdAt": "2019-04-18T07:07:54Z",
          "updatedAt": "2019-04-18T07:07:54Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #83 add a little more text here. Please provide another PR if you think more text is needed!",
          "createdAt": "2019-07-04T15:04:07Z",
          "updatedAt": "2019-07-04T15:04:07Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR merged",
          "createdAt": "2019-07-04T16:27:04Z",
          "updatedAt": "2019-07-04T16:27:04Z"
        }
      ]
    },
    {
      "number": 57,
      "id": "MDU6SXNzdWUzOTcyODk1OTk=",
      "title": "update -manageability for changes to packet headers",
      "url": "https://github.com/quicwg/ops-drafts/issues/57",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "Review the text of the -manageability draft to ensure that changes to headers in the latest version of -transport are correctly tracked.",
      "createdAt": "2019-01-09T09:49:17Z",
      "updatedAt": "2019-01-24T09:11:15Z",
      "closedAt": "2019-01-24T09:11:15Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "on review CIDs are mostly okay but there are other header changes to track.",
          "createdAt": "2019-01-09T12:00:24Z",
          "updatedAt": "2019-01-09T12:00:24Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "MDU6SXNzdWUzOTczMDEzODg=",
      "title": "update -manageability for BKK spin bit consensus",
      "url": "https://github.com/quicwg/ops-drafts/issues/58",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "Review and update text in -manageability to reflect BKK spin bit consensus:\r\n\r\n- single spin bit is in the protocol spec now\r\n- endpoints may opt out (discuss why; this is for any reason, not just proxies as suggested in #55),\r\n- endpoints should probabilistically out out to provide cover for endpoints opting out",
      "createdAt": "2019-01-09T10:18:09Z",
      "updatedAt": "2019-04-23T15:16:54Z",
      "closedAt": "2019-04-23T15:16:53Z",
      "comments": [
        {
          "author": "loganaden",
          "authorAssociation": "NONE",
          "body": "I am working on this.",
          "createdAt": "2019-01-09T10:45:08Z",
          "updatedAt": "2019-01-09T10:45:08Z"
        },
        {
          "author": "loganaden",
          "authorAssociation": "NONE",
          "body": "@britram what about having a privacy consideration section ? ",
          "createdAt": "2019-01-24T18:28:33Z",
          "updatedAt": "2019-01-24T18:28:33Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm not sure this fits in the scope of the document: can you say more about what you propose to be in this section? The -manageability document is meant to be an independent user's guide to the wire image, so information on the spin bit here will be more about how to measure it, not additional guidelines on how to generate it and when not to (though such text might belong in -applicability)\r\n\r\nPlease coordinate with @ihlar, who will also be proposing text on spin measurement to bring over from draft-ietf-quic-spin-exp.\r\n\r\n",
          "createdAt": "2019-01-24T22:41:06Z",
          "updatedAt": "2019-01-24T22:41:06Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "see PR #66 ",
          "createdAt": "2019-04-17T12:32:47Z",
          "updatedAt": "2019-04-17T12:32:47Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "closed by merge of #66 and #67",
          "createdAt": "2019-04-23T15:16:53Z",
          "updatedAt": "2019-04-23T15:16:53Z"
        }
      ]
    },
    {
      "number": 61,
      "id": "MDU6SXNzdWU0MjU0NDAwNTg=",
      "title": "Note about small packets",
      "url": "https://github.com/quicwg/ops-drafts/issues/61",
      "state": "CLOSED",
      "author": "janaiyengar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [],
      "body": "Middlebox vendors (and others as well) used to TCP want to assume that the smallest packet might be ack packets. This is not true in QUIC, and manageabiity draft may want to say something about it.",
      "createdAt": "2019-03-26T14:07:39Z",
      "updatedAt": "2019-04-18T07:14:08Z",
      "closedAt": "2019-04-18T07:14:08Z",
      "comments": []
    },
    {
      "number": 62,
      "id": "MDU6SXNzdWU0MjU4MjM4Nzk=",
      "title": "Discuss counter-measures to version ossification",
      "url": "https://github.com/quicwg/ops-drafts/issues/62",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See also issue quicwg/base-drafts#2496",
      "createdAt": "2019-03-27T08:30:13Z",
      "updatedAt": "2020-01-13T10:03:44Z",
      "closedAt": "2020-01-13T10:03:43Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Good Strategy probably is to move quickly to new version and/or deploy draft versions in order to keep the version number field as dynamic as possible. However, if there will be ossification there is probably still a possibility to implement some kind of alternate version negotiation in the encrypted part of the packet and pretend on the outside to use the supported version (similar as TLS1.3 does); of course there is a performance/overhead trade-off.\r\n\r\nWith the uncertainty about what will happen in respect to ossification, it might not be worth is to try and solve the problem now and pay the complexity up front.",
          "createdAt": "2019-03-27T08:38:45Z",
          "updatedAt": "2019-03-27T08:49:29Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "does not appear as though the discussion on the list has converged yet; will wait to see at happens in the base drafts before addressing this one in ops.",
          "createdAt": "2019-04-18T06:49:30Z",
          "updatedAt": "2019-04-18T06:49:30Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Consensus to handle \"weak\" version ossification via a mechanism in the transport; holding this issue open until that converges, but probably not useful to have text in manageability.",
          "createdAt": "2019-08-20T13:14:49Z",
          "updatedAt": "2019-08-20T13:14:49Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This converged in Singapore to no-action in v1.",
          "createdAt": "2019-12-09T20:00:14Z",
          "updatedAt": "2019-12-09T20:00:14Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed by #89 ",
          "createdAt": "2020-01-13T10:03:43Z",
          "updatedAt": "2020-01-13T10:03:43Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "MDU6SXNzdWU0MjkwNjcwOTY=",
      "title": "Point out how troubleshooting gets easier",
      "url": "https://github.com/quicwg/ops-drafts/issues/63",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The section on \"Passive network performance measurement and troubleshooting\" is probably a bit too pessimistic.\r\n\r\nIt's probably worth pointing out that one part of network troubleshooting -- \"find out which box to blame\" -- is substantially easier. Thanks to integrity protection, most middleboxes, can drop, delay/rate limit, and corrupt, and that's about it. These are fairly easy behaviors to diagnose.\r\n\r\nI've had some conversations with customers afraid of not having their TCP headers anymore, and I believe this fear is largely misguided.\r\n\r\nIf people agree this belongs in the draft, I can file a PR.",
      "createdAt": "2019-04-04T03:31:44Z",
      "updatedAt": "2019-04-17T14:32:15Z",
      "closedAt": "2019-04-17T14:32:15Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree the wording is very pessimistic. However, I don't think your observation belongs in this section because it's about measurement of performance metrics.\r\n\r\nThere is a sentence in the introduction:\r\n\r\n\"Given QUIC is an end-to-end transport protocol, all information in the protocol header, even that which can be inspected, is is not meant to be mutable by the network, and is therefore integrity-protected to the extent possible.\"\r\n\r\nMaybe it makes sense to add another sentence right there to also emphasis the positive effect of that, like: \r\n\r\n\"While more limited information compared to TCP is visible to the network, integrity protection can also make troubleshooting easier as none of the nodes on the network path can modify the transport layer information.\"",
          "createdAt": "2019-04-04T09:08:01Z",
          "updatedAt": "2019-04-04T09:08:01Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "closed by #64 ",
          "createdAt": "2019-04-17T14:32:15Z",
          "updatedAt": "2019-04-17T14:32:15Z"
        }
      ]
    },
    {
      "number": 68,
      "id": "MDU6SXNzdWU0MzYzMDk1NzA=",
      "title": "Connection migration strategies",
      "url": "https://github.com/quicwg/ops-drafts/issues/68",
      "state": "CLOSED",
      "author": "rpaulo",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "I think the applicability draft may benefit from exploring connection migration strategies as described in:\r\n\r\n- https://tools.ietf.org/html/draft-paulo-quic-migration-00#section-2",
      "createdAt": "2019-04-23T17:40:58Z",
      "updatedAt": "2019-07-04T15:40:29Z",
      "closedAt": "2019-07-04T14:32:10Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Do we also need to say anything about use of 0-byte CID? See quicwg/base-drafts#2441",
          "createdAt": "2019-05-22T13:59:35Z",
          "updatedAt": "2019-05-22T13:59:35Z"
        },
        {
          "author": "rpaulo",
          "authorAssociation": "NONE",
          "body": "The transport draft already says:\r\n\r\n>  an endpoint MUST NOT initiate migration if its peer supplies a zero-length connection ID",
          "createdAt": "2019-05-22T15:07:00Z",
          "updatedAt": "2019-05-22T15:07:00Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addressed by PR #80 and one more sentence",
          "createdAt": "2019-07-04T14:32:10Z",
          "updatedAt": "2019-07-04T14:32:10Z"
        },
        {
          "author": "rpaulo",
          "authorAssociation": "NONE",
          "body": "I don\u2019t see any text related to connection migration on that PR. ",
          "createdAt": "2019-07-04T15:16:00Z",
          "updatedAt": "2019-07-04T15:16:00Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "sorry wrong PR; should be #81 and is already merged",
          "createdAt": "2019-07-04T15:40:29Z",
          "updatedAt": "2019-07-04T15:40:29Z"
        }
      ]
    },
    {
      "number": 71,
      "id": "MDU6SXNzdWU0NDcxNDM4OTU=",
      "title": "Maybe provide guidance on use of advertised idle timeout",
      "url": "https://github.com/quicwg/ops-drafts/issues/71",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "This is related to quicwg/base-drafts#2602 and depends on the outcome there.",
      "createdAt": "2019-05-22T13:40:53Z",
      "updatedAt": "2020-08-17T11:51:00Z",
      "closedAt": "2020-08-17T11:51:00Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #78 now indicated that the idle timeout could be exposed to the application. However, we should probably say a bit more what to do with it. I guess the minimum would be to say that the keep-alive frequency needs to be clearly smaller than the idle timeout, e.g. half the timeout. Is there anything more we could say?\r\n\r\n@janaiyengar @MikeBishop any thoughts? Or text you can provide?\r\n",
          "createdAt": "2019-07-04T13:52:19Z",
          "updatedAt": "2019-07-04T13:52:19Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #102 provides some more guidance now but it still doesn't discuss suitable value or ranges. What values are used in current implementations? Should we say more?",
          "createdAt": "2020-07-07T15:53:07Z",
          "updatedAt": "2020-07-07T15:53:07Z"
        }
      ]
    },
    {
      "number": 72,
      "id": "MDU6SXNzdWU0NDcxNDUyOTA=",
      "title": "Do we want to provide any advise on use of coalesced packets?",
      "url": "https://github.com/quicwg/ops-drafts/issues/72",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "Related to quicwg/base-drafts#2308 as a comment came up in the discussion that the transport draft does not explain why anybody would use coalesced packets. Do we want to elaborate some use cases and provide more guidance?",
      "createdAt": "2019-05-22T13:43:20Z",
      "updatedAt": "2019-07-04T14:43:53Z",
      "closedAt": "2019-07-04T14:43:53Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "IMO, no.",
          "createdAt": "2019-07-04T14:43:25Z",
          "updatedAt": "2019-07-04T14:43:25Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Probably an application shouldn't worries about this... so closing.",
          "createdAt": "2019-07-04T14:43:53Z",
          "updatedAt": "2019-07-04T14:43:53Z"
        }
      ]
    },
    {
      "number": 75,
      "id": "MDU6SXNzdWU0NTk5Njg0NTA=",
      "title": "Document how SNI from QUIC handshakes is presented",
      "url": "https://github.com/quicwg/ops-drafts/issues/75",
      "state": "CLOSED",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "SNI is currently mentioned in the Manageability document, but you'd have to read a substantial chunk of the transport and tls drafts to understand how to extract it.\r\n\r\nI'd suggest a short section that describes how it's presented on the wire with references to the appropriate sections on transport and tls.\r\n\r\nCurrently, the section on client Initial says: \"The Client Hello datagram exposes version number, source and destination connection IDs, and information in the TLS Client Hello message, including any TLS Server Name Indication (SNI) present, in the clear.\"\r\n\r\nI think saying the SNI is in the clear is a bit misleading to a casual observer.",
      "createdAt": "2019-06-24T15:50:31Z",
      "updatedAt": "2020-10-12T14:00:12Z",
      "closedAt": "2020-10-12T14:00:12Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ianswett  can you maybe provide some text?",
          "createdAt": "2019-07-04T12:09:28Z",
          "updatedAt": "2019-07-04T14:36:08Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It'll likely be a large PR, but yes, I'm happy to.",
          "createdAt": "2019-07-05T19:49:37Z",
          "updatedAt": "2019-07-05T19:49:37Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks!",
          "createdAt": "2019-07-08T10:02:27Z",
          "updatedAt": "2019-07-08T10:02:27Z"
        },
        {
          "author": "nharper",
          "authorAssociation": "NONE",
          "body": "The algorithm for parsing SNI from a QUIC initial packet is specific to v1. (Future versions will change the key; they could also change the algorithm for encrypting/obfuscating initial packets, and could make other changes to the crypto handshake.) Should it be mentioned \"this only works for QUICv1\" with the re-written SNI bits, or somewhere else to cover more broadly \"anything you do that involves decrypting packets protected by initial keys is v1 specific\"?",
          "createdAt": "2019-07-29T20:03:42Z",
          "updatedAt": "2019-07-29T20:03:42Z"
        },
        {
          "author": "igorlord",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> \"anything you do that involves decrypting packets protected by initial keys is v1 specific\"?\r\n\r\nI think the entire draft can be prefaced by \"anything you do that involves using QUIC protocol properties not explicitly specified in Invariant is v1 specific\". This applies to the discussion of connection IDs, spin bit, initial keys, etc.",
          "createdAt": "2020-05-29T20:09:24Z",
          "updatedAt": "2020-05-29T20:09:24Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I opened a separate issue for that (#95). ",
          "createdAt": "2020-06-02T10:45:36Z",
          "updatedAt": "2020-06-02T10:45:36Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Note that this needs to recognize the possibility of Encrypted ClientHello.",
          "createdAt": "2020-07-29T12:14:36Z",
          "updatedAt": "2020-07-29T12:14:36Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It also needs to recognize that connection migration may break assumptions about the stability of SNI information.",
          "createdAt": "2020-07-29T12:15:59Z",
          "updatedAt": "2020-07-29T12:15:59Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "And NAT rebinding. And mention CIDs aren't stable, particularly when the path changes.",
          "createdAt": "2020-07-29T12:20:51Z",
          "updatedAt": "2020-07-29T12:20:51Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "another reference to potentially integrate: https://www.chromium.org/quic/parse-client-hello",
          "createdAt": "2020-07-29T12:43:10Z",
          "updatedAt": "2020-07-29T12:43:10Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Having read that document, it would need to be framed to avoid condoning it.  It advocates a strategy that is not compliant with QUIC invariants.  It's very much rooted in 2020, including parsing rules for Google QUIC, so it might not be a good basis for an RFC.",
          "createdAt": "2020-07-29T13:04:56Z",
          "updatedAt": "2020-07-29T13:04:56Z"
        }
      ]
    },
    {
      "number": 76,
      "id": "MDU6SXNzdWU0NjM0MjA1NDE=",
      "title": "Document the challenges of creating a 'transparent' QUIC MITM",
      "url": "https://github.com/quicwg/ops-drafts/issues/76",
      "state": "CLOSED",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "Feel free to close this if it's out of scope, but creating a proxy that attempts to passively observe QUIC is much more complex and potentially problematic than TLS over TCP.\r\n\r\nFor example, all major OS's have mature TCP implementations, whereas a MITM would have to pull in its own QUIC implementation.  If it does so, it would be important that's it's both conformant to IETF specifications and have good performance.  This is the full L7 termination case, which is possible, but a lot of work, and we should heavily encourage anyone doing this to use an existing(\"good\") implementation.\r\n\r\nA potential MITM option is to attempt to terminate the handshake, but then only observe ApplicationData packets.  However, this could go wrong in many ways, so I believe it should be strongly discouraged.  QUIC is designed as an end-to-end protocol and efforts to change that are likely to end very poorly.\r\n\r\nFor example, if the length of the CID changes, then the offset of the header changes and a middlebox who doesn't track all CIDs both peers may be unable to decrypt packets.  I'm sure there are more gotchas, particularly with the introduction of extensions.  It may also be worth pointing out that QUIC frames are not TLV, so any frames(ie: extensions) that are not understood cause all other frames to be unparseable.\r\n\r\nThanks to @DavidSchinazi for the specific examples of ways this could fail.",
      "createdAt": "2019-07-02T20:27:30Z",
      "updatedAt": "2019-07-04T20:06:42Z",
      "closedAt": "2019-07-04T20:06:42Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Still trying to figure out what my thinking is her, but it sounds a bit like you propose something like \"If you want to implement a QUIC MITM, please terminate the whole connection up to L7 and use an existing library.\" Note sure that is actually giving quite there right message....",
          "createdAt": "2019-07-04T12:47:54Z",
          "updatedAt": "2019-07-04T12:47:54Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As a user's guide to the wire image, one of the base assumptions we make is that access to the wire image is read only. We should definitely be more explicit about this. We also need an explicit statement that MITM is out of scope for *this* doc and if you want to, terminate at L7 and congrats, now everything in -transport and -tls (and, realisitically, -http) applies.",
          "createdAt": "2019-07-04T14:41:01Z",
          "updatedAt": "2019-07-04T14:41:01Z"
        }
      ]
    },
    {
      "number": 79,
      "id": "MDU6SXNzdWU0NjQyNjY2Mzk=",
      "title": "recommendations for using ALPN in QUIC mappings",
      "url": "https://github.com/quicwg/ops-drafts/issues/79",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "Both documents provide limited guidance on use of ports, however, there was an open question if the applicability statement should maybe say more and e.g. also talk about ALPN.",
      "createdAt": "2019-07-04T13:26:31Z",
      "updatedAt": "2020-07-08T09:02:30Z",
      "closedAt": "2020-07-08T09:02:30Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "pending consensus on use of ALPN in -transport ",
          "createdAt": "2019-12-09T14:47:00Z",
          "updatedAt": "2019-12-09T14:47:00Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "We already have consensus to require ALPN.  Unless you meant to refer to https://github.com/quicwg/base-drafts/issues/3117.  In that case, yes, you might want to explain how this works for HTTP/3 specifically.  That is, the HTTP/3 ALPN refers to QUICv1.  For now.  We have apparently reserved the right to revise that when we define QUICv2.\r\n\r\nIf you start to explain the controversial aspects of this (does ALPN refer to the layer or the stack as a whole) then you will soon find that you don't have any concrete answers.",
          "createdAt": "2019-12-10T05:31:13Z",
          "updatedAt": "2019-12-10T05:31:13Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yep, I meant quicwg/base-drafts#3117.\r\n\r\nThis document should provide some advice to application mappings other than HTTP on how/whether to use ALPN, but that advice really will depend on the larger discussion of what ALPN means (is is app-only, a stack designator, or something in between). \r\n\r\nHaving that discussion in this draft is probably not the right thing to do, so holding this issue open until it converges in TLS/HTTP/QUIC.",
          "createdAt": "2020-01-13T10:02:48Z",
          "updatedAt": "2020-01-13T10:02:48Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Probably it would be good to have a more general section on service discovery and point to the HTTP/3 doc as one example.",
          "createdAt": "2020-04-22T12:00:18Z",
          "updatedAt": "2020-04-22T12:00:18Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Create a new section in applicability, and reference the -http draft section 3.1 as an example.",
          "createdAt": "2020-07-06T14:57:19Z",
          "updatedAt": "2020-07-06T14:57:19Z"
        }
      ]
    },
    {
      "number": 85,
      "id": "MDU6SXNzdWU0NjQzMTkwNDM=",
      "title": "Double check use of normative language",
      "url": "https://github.com/quicwg/ops-drafts/issues/85",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "-manageability",
        "final check"
      ],
      "body": "Not clear if these documents should use normative language at all. The applicability statement also sometimes uses normative language to recommend the implementation of certain interfaces; I don't think this is the right document for that but as we also don't have another document, we should decide if we want to do that or not!",
      "createdAt": "2019-07-04T15:23:00Z",
      "updatedAt": "2020-12-07T13:37:30Z",
      "closedAt": "2020-12-07T13:37:30Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Manageability is a user's guide to the wire image, as such there's no sense to normative language (though I suppose some might like to add MUST NOT observe packets).\r\n\r\nSince applicability is in part a set of recommendations to application designers, normative language might make sense there... but the document is informational, so normative language here has to reference or be trivially derived from normative language in one of the base drafts.\r\n\r\nTo simplify things, I'd just scrub all the SHOULDs, MAYs, and MUSTs.",
          "createdAt": "2020-11-18T06:02:50Z",
          "updatedAt": "2020-11-18T06:02:50Z"
        }
      ]
    },
    {
      "number": 86,
      "id": "MDU6SXNzdWU0OTYzOTI3NTk=",
      "title": "Update to invariants -07",
      "url": "https://github.com/quicwg/ops-drafts/issues/86",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "",
      "createdAt": "2019-09-20T14:44:55Z",
      "updatedAt": "2020-07-08T08:43:16Z",
      "closedAt": "2020-07-08T08:43:16Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Also call out invariants (esp. in header structure and handshake) explicitly: v2 may/will break functionality outside the invariants.",
          "createdAt": "2019-09-20T14:46:42Z",
          "updatedAt": "2019-09-20T14:46:42Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Document is currently in in with final invariants; do one last pass to make sure everything documented in Section 17 as expose information appears here (which is basically the same check).",
          "createdAt": "2020-07-06T14:52:13Z",
          "updatedAt": "2020-07-06T14:52:13Z"
        }
      ]
    },
    {
      "number": 87,
      "id": "MDU6SXNzdWU1MjM3ODI4NjE=",
      "title": "Considerations for NATs",
      "url": "https://github.com/quicwg/ops-drafts/issues/87",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The manageability draft should talk a little bit about NATS for QUIC.\r\n\r\nThe laziest thing to do is just continue to have NAT mapping be by 4-tuple, as it is today. This is actually fine.\r\n\r\nHowever, someone might attempt to be clever and use the CID as well. For example, client A and client B could share the same serverside address and port and the NAT can initially distinguish between the two because they have different CIDs. This appears to save address space,  but doesn't actually work because the server could switch to a new client connection ID. In this case, the NAT won't be able to determine which client to route to.",
      "createdAt": "2019-11-16T03:25:44Z",
      "updatedAt": "2020-01-13T09:34:49Z",
      "closedAt": "2020-01-13T09:34:49Z",
      "comments": [
        {
          "author": "erickinnear",
          "authorAssociation": "NONE",
          "body": "I think it's also worth mentioning that using just the CID only is similarly broken, the fundamental underlying concept here is that subsequent CIDs are exchanged in a manner that the NAT cannot see -- the only time it's okay to use CIDs is if you're colluding with one of the endpoints, as in QUIC LB.",
          "createdAt": "2019-11-16T12:24:15Z",
          "updatedAt": "2019-11-16T12:24:15Z"
        },
        {
          "author": "larseggert",
          "authorAssociation": "MEMBER",
          "body": "At least recommend to use longer binding lifetimes for identified QUIC connections?",
          "createdAt": "2019-11-17T07:05:41Z",
          "updatedAt": "2019-11-17T07:05:41Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See PR #88 ",
          "createdAt": "2019-12-09T14:44:49Z",
          "updatedAt": "2019-12-09T14:44:49Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed in this doc by #88",
          "createdAt": "2020-01-13T09:34:49Z",
          "updatedAt": "2020-01-13T09:34:49Z"
        }
      ]
    },
    {
      "number": 91,
      "id": "MDU6SXNzdWU1NDg4MTgxNDY=",
      "title": "Advice on network state idle timeouts",
      "url": "https://github.com/quicwg/ops-drafts/issues/91",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "For discussion: should the manageability draft advise that idle timeouts should be longer for flows inferred/detected to be QUIC flows?\r\n\r\nI think the answer here is \"it depends\": for NATs, yes, state at the edge is not all that scarce anymore. For firewalls? Maybe not so much. Are there other applications to consider here, and is there any generalized advice this document could give?\r\n\r\nIf so, is there any generalized advice for how long the timeout should be?",
      "createdAt": "2020-01-13T09:55:52Z",
      "updatedAt": "2020-07-08T08:38:29Z",
      "closedAt": "2020-07-08T08:38:29Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #103 is an attempt to address this issue but doesn't provide much concrete guidance... ",
          "createdAt": "2020-07-07T16:13:50Z",
          "updatedAt": "2020-07-07T16:13:50Z"
        }
      ]
    },
    {
      "number": 92,
      "id": "MDU6SXNzdWU1NTE0OTIyMzY=",
      "title": "CID and length",
      "url": "https://github.com/quicwg/ops-drafts/issues/92",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "Note in section about CID that as the server chooses the CIDs, it could use some own scheme to embed the length of the CID in the CID itself, instead remembering it, e.g. use the first few bits to indicate which of the sizes that are support was chosen.",
      "createdAt": "2020-01-17T15:52:27Z",
      "updatedAt": "2020-08-17T11:50:49Z",
      "closedAt": "2020-08-17T11:50:49Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "can be done together with #40, referencing the LB draft",
          "createdAt": "2020-07-06T15:01:44Z",
          "updatedAt": "2020-07-06T15:01:44Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #105 to address this and reference to load balancer draft",
          "createdAt": "2020-07-07T16:40:56Z",
          "updatedAt": "2020-07-07T16:40:56Z"
        }
      ]
    },
    {
      "number": 93,
      "id": "MDU6SXNzdWU2MDc0OTA5ODc=",
      "title": "Improve and generalize text on DoS detection and mitigation",
      "url": "https://github.com/quicwg/ops-drafts/issues/93",
      "state": "CLOSED",
      "author": "ximaera",
      "authorAssociation": "NONE",
      "assignees": [
        "britram"
      ],
      "labels": [],
      "body": "> Current practices in detection and mitigation of Distributed Denial of Service (DDoS) attacks generally involve passive measurement using network flow data {{?RFC7011}}, classification of traffic into \"good\" (productive) and \"bad\" (DoS) flows, and filtering of these bad flows in a \"scrubbing\" environment\r\n\r\nThis is not how it works. A few examples:\r\n - https://en.wikipedia.org/wiki/SYN_cookies\r\n - https://www.researchgate.net/publication/220027076_Mitigating_denial_of_service_attack_using_CAPTCHA_mechanism",
      "createdAt": "2020-04-27T12:02:13Z",
      "updatedAt": "2021-02-26T16:52:27Z",
      "closedAt": "2020-07-08T08:48:25Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm not sure I see support for \"this is not how it works\" in your examples: SYN cookies on their own are a 1990s technique for end-system DoS prevention, which, while useful at transport-terminating front ends as part of a larger DoS prevention strategy, aren't really usable on their own at scale. The paper you link to here (from ICWET, and itself a decade old) primarily deals with the separation of good from bad flows at layer 7, not necessarily how the front-end handles these flows once classified. But you're definitely right that this is not *only* how it works: the DoS mitigation landscape is wide and varied (even if at the end of the day the only strategy we have found to work at scale is \"eat the DoS\".\r\n\r\nThat said, this text could be improved: it discounts detection and classification mechanisms other than based on flow designators derived from passive measurement, does not mention protocols other than IPFIX and the flow model that comes along with it when classifying traffic, etc. \r\n\r\nThe text should also be more applicable to UDP reflection DoS, which is a primary concern in wire image differentiation in QUIC (and which also isn't otherwise addressed in the document or in this issue). Adding a path-observable SYN cookie equivalent to QUIC, while useful, seems difficult to achieve given the working group's history of consensus about path-observable wire image features, so other classification mechanisms are what we'll be left with.\r\n\r\n",
          "createdAt": "2020-05-18T13:35:55Z",
          "updatedAt": "2020-05-18T13:35:55Z"
        },
        {
          "author": "ximaera",
          "authorAssociation": "NONE",
          "body": "> it discounts detection and classification mechanisms\r\n> other than based on flow designators derived from\r\n> passive measurement\r\n\r\nExactly my point.\r\n\r\nThe passive measurements are generally only useful to prevent the collateral damage to the network infrastructure of an ISP or a datacenter network under an attack. While the infrastructure impact of QUIC is itself an intriguing research topic, DDoS affects not only transit networks but also the endpoints in ways that could not be prevented with any passive flow classification.",
          "createdAt": "2020-05-18T13:48:14Z",
          "updatedAt": "2020-05-18T13:48:14Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The intent of this section is to cover DoS mitigation on the \"downstream\" segment, all the way from transit to endpoint, with access and front-end networks in between; the further you get from the endpoint the harder classification is, but the larger the impact of filtering operations. AIUI transit networks generally only get involved at the BGP level (i.e., when an affected destination prefix is temporarily announced via a mitigation/filtering network to route traffic for scrubbing), but we shouldn't look at *just* the endpoint/frontend, either,\r\n\r\nThis document probably shouldn't go all the way down the DoS prevention architecture rabbithole (note to self: check to see whether DOTS has something we can refer to here). But I'll put some effort into making this more general.",
          "createdAt": "2020-05-18T14:18:56Z",
          "updatedAt": "2020-05-18T14:18:56Z"
        },
        {
          "author": "ximaera",
          "authorAssociation": "NONE",
          "body": "> AIUI transit networks generally only get involved at\r\n> the BGP level (i.e., when an affected destination\r\n> prefix is temporarily announced via a\r\n> mitigation/filtering network to route traffic for scrubbing)\r\n\r\nThis is more of an \"e.g.\" than \"i.e.\", but fine.\r\n\r\nI must say this is also a place where the infrastructure could be affected by the HTTP protocol upgrade. E.g. if the risk model assumes large transport layer floods, then the optical links towards the scrubbing center should be upgraded to carry ~22x more traffic.",
          "createdAt": "2020-05-18T14:50:52Z",
          "updatedAt": "2020-05-18T14:52:12Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "closed by #94 ",
          "createdAt": "2020-07-06T14:57:57Z",
          "updatedAt": "2020-07-06T14:57:57Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "actually, no; improve section 4.4 as well.",
          "createdAt": "2020-07-06T14:59:21Z",
          "updatedAt": "2020-07-06T14:59:21Z"
        },
        {
          "author": "ximaera",
          "authorAssociation": "NONE",
          "body": "Err.\r\n\r\n\"Current practices in detection and mitigation of Distributed Denial of Service\r\n(DDoS) attacks generally involves classification of incoming traffic (as \r\npackets, flows, or some other aggregate) into \"good\" (productive) and \"bad\" \r\n(DDoS) traffic\"\r\n\r\nNo. It **generally** does not. There are active and passive countermeasures, there are SYN cookies, truncated DNS responses, captchas, etc. The draft is still missing all of those.",
          "createdAt": "2020-08-14T13:26:30Z",
          "updatedAt": "2020-08-14T13:26:30Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think what is still missing is to note that this document is generally scoped to in-network manageability and therefore does not discuss measures that can be applied directly at the end hosts. Maybe we can clarify this by add one simple word like this:\r\n\r\ns/Current practices in detection and mitigation/Current in-network practices in detection and mitigation/\r\n\r\n?",
          "createdAt": "2020-08-14T14:28:43Z",
          "updatedAt": "2020-08-14T14:28:43Z"
        },
        {
          "author": "ximaera",
          "authorAssociation": "NONE",
          "body": "> Maybe we can clarify this by add one simple word like this:\r\n> s/Current practices in detection and mitigation/Current in-network practices in detection and mitigation/\r\n\r\nNo, this is still not fair. Active countermeasures like SYN proxying still belong to the network.\r\n\r\nProbably the only way to do this properly would be to say that \"Current practices in passive detection and mitigation\" do whatever they do, and to add later in the section that there are also practices in _active_ mitigation which are not supported by the protocol (the last paragraph basically sums it up) when the endpoint is not cooperating.\r\n\r\nIt'd be also a good idea to highlight the impact of the lack of active mitigation features, and to hint to how the endpoint could cooperate.",
          "createdAt": "2021-02-26T16:42:21Z",
          "updatedAt": "2021-02-26T16:52:27Z"
        }
      ]
    },
    {
      "number": 95,
      "id": "MDU6SXNzdWU2MjkwOTkyMDI=",
      "title": "Indicate which parts of the draft are v1 specific",
      "url": "https://github.com/quicwg/ops-drafts/issues/95",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "final check"
      ],
      "body": "It might be the case that this is true for the whole draft and we should just state this at the beginning but better to double-check!",
      "createdAt": "2020-06-02T10:44:56Z",
      "updatedAt": "2020-11-02T14:58:50Z",
      "closedAt": "2020-11-02T14:58:50Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "we will leave this issue open to double-check at the end",
          "createdAt": "2020-07-06T14:50:32Z",
          "updatedAt": "2020-07-06T14:50:32Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "MDU6SXNzdWU2NDk5NDI0NzE=",
      "title": "Mention accidental invariants and the calculus of blocking",
      "url": "https://github.com/quicwg/ops-drafts/issues/96",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "From Spencer on the list:\r\n\r\n> Before I read this ^ paragraph, I was planning to ask you whether \"blocking QUIC\" merited a mention in https://tools.ietf.org/html/draft-ietf-quic-manageability-06, because we are in the awkward position with HTTP/3 that operators will face less blowback blocking HTTP/3-QUIC and forcing a fallback to HTTP/2-TCP than they will face blocking almost any non-HTTP/3 QUIC protocol (with less clearly defined fallbacks) (see: MASQUE). \r\n> ISTM that at a minimum, the \"accidental invariants\" might be mentioned in https://tools.ietf.org/html/draft-ietf-quic-manageability-06, which targets operators. \r\n",
      "createdAt": "2020-07-02T13:43:12Z",
      "updatedAt": "2020-07-08T08:55:16Z",
      "closedAt": "2020-07-08T08:55:16Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addressed by #98 ",
          "createdAt": "2020-07-06T14:49:35Z",
          "updatedAt": "2020-07-06T14:49:35Z"
        }
      ]
    },
    {
      "number": 97,
      "id": "MDU6SXNzdWU2NTE1NzM2OTA=",
      "title": "DDOS mitigation section should reference LB draft for details on retry mechanism",
      "url": "https://github.com/quicwg/ops-drafts/issues/97",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "As noted in discussion on #94.",
      "createdAt": "2020-07-06T14:13:10Z",
      "updatedAt": "2020-07-08T09:03:20Z",
      "closedAt": "2020-07-08T09:03:20Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Quoting:\r\n\r\n> Looks like https://tools.ietf.org/html/draft-ietf-quic-load-balancers-02#section-5 is an excellent discussion of Retry mechanics. It definitely deserves a reference from this doc.\r\n\r\n> The Retry mechanisms described in LB draft are all cooperating boxes, and servers are aware of them.",
          "createdAt": "2020-07-06T14:14:06Z",
          "updatedAt": "2020-07-06T14:14:06Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #101",
          "createdAt": "2020-07-06T14:53:26Z",
          "updatedAt": "2020-07-06T14:53:26Z"
        }
      ]
    },
    {
      "number": 100,
      "id": "MDU6SXNzdWU2NTE1OTQ2NjA=",
      "title": "verify all references to QUIC documents",
      "url": "https://github.com/quicwg/ops-drafts/issues/100",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability",
        "-manageability",
        "final check"
      ],
      "body": "The ops drafts often reference the core drafts by section number; make sure these section number references are correct for the WGLC drafts.",
      "createdAt": "2020-07-06T14:41:12Z",
      "updatedAt": "2020-11-18T06:45:50Z",
      "closedAt": "2020-11-18T06:45:50Z",
      "comments": []
    },
    {
      "number": 110,
      "id": "MDU6SXNzdWU2NjkyODgxNTI=",
      "title": "Applicability introduction is outdated",
      "url": "https://github.com/quicwg/ops-drafts/issues/110",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is editorial, but the whole introduction is written as if the quic drafts are some early concept kicking around in the working group. This will not age well, and the intro should be worded as if it were already a published RFC.\r\n\r\nThe intro still talks about \"HTTP/2 over QUIC\" when it's now HTTP/3.",
      "createdAt": "2020-07-30T23:58:27Z",
      "updatedAt": "2020-08-21T13:37:33Z",
      "closedAt": "2020-08-21T13:37:33Z",
      "comments": []
    },
    {
      "number": 111,
      "id": "MDU6SXNzdWU2NjkyODkyMjA=",
      "title": "Applicability 0RTT section",
      "url": "https://github.com/quicwg/ops-drafts/issues/111",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "While TFO has some 0RTT-like properties, it does not fully replace it, not only because the SYN or option gets scrubbed, but also because you're limited to one packet payload.\r\n\r\nAlso, this ought to mention TLS stacks that offer replay protection.\r\n\r\nI would think a modern QUIC interface would offer a signal to separate 0RTT from 1RTT data, so that both senders and receivers can manage their application data appropriately.",
      "createdAt": "2020-07-31T00:01:22Z",
      "updatedAt": "2020-08-21T14:13:26Z",
      "closedAt": "2020-08-21T14:13:26Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "will be closed by #117 ",
          "createdAt": "2020-08-17T11:52:22Z",
          "updatedAt": "2020-08-17T11:52:22Z"
        }
      ]
    },
    {
      "number": 112,
      "id": "MDU6SXNzdWU2NjkyODk3MDQ=",
      "title": "applicability: resumption v. keepalive",
      "url": "https://github.com/quicwg/ops-drafts/issues/112",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It is odd that this section doesn't mention QUIC's robustness to NAT rebinding at all. While this won't work behind 4-tuple load balancers, middlebox timers may be irrelevant depending on the conesequences of the timeout.",
      "createdAt": "2020-07-31T00:02:44Z",
      "updatedAt": "2020-08-21T14:13:44Z",
      "closedAt": "2020-08-21T14:13:44Z",
      "comments": []
    },
    {
      "number": 113,
      "id": "MDU6SXNzdWU2NjkyOTE1MTg=",
      "title": "applicability: streams section",
      "url": "https://github.com/quicwg/ops-drafts/issues/113",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "1. This document should mention unidirectional streams\r\n\r\n2. Some words about the meaning of an abort signal vs. a clean close would be useful, both ingress and egress.\r\n\r\n3. Maximum stream bytes = 2^62-1.\r\n\r\n4. Saying \"there are special streams for QUIC\" is inaccurate (it's just one stream now, conceptually), and I would not bother to describe the CRYPTO frames this way.",
      "createdAt": "2020-07-31T00:07:19Z",
      "updatedAt": "2020-09-07T08:47:57Z",
      "closedAt": "2020-09-07T08:47:57Z",
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Also: stream aborts are always unidirectional.\r\n\r\nwhat can/should applications assume about stream IDs? are they accessible, and does the app have any control over them?",
          "createdAt": "2020-07-31T13:42:57Z",
          "updatedAt": "2020-07-31T13:42:57Z"
        }
      ]
    },
    {
      "number": 114,
      "id": "MDU6SXNzdWU2NzAzMjUyOTY=",
      "title": "Update Packetization reference",
      "url": "https://github.com/quicwg/ops-drafts/issues/114",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The draft says section 8 of quic-transport; it's section 13.",
      "createdAt": "2020-07-31T23:13:02Z",
      "updatedAt": "2020-08-21T14:13:59Z",
      "closedAt": "2020-08-21T14:13:59Z",
      "comments": []
    },
    {
      "number": 115,
      "id": "MDU6SXNzdWU2NzAzNTMwMTE=",
      "title": "connection migration: add server preferred address",
      "url": "https://github.com/quicwg/ops-drafts/issues/115",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "We should probably make it clear what the application can do here (SPA for servers; maybe intentional migration for clients?) I'm not sure if migration is transparent to client applications or not.",
      "createdAt": "2020-07-31T23:54:48Z",
      "updatedAt": "2020-12-21T10:34:59Z",
      "closedAt": "2020-12-21T10:34:59Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The client application might have some knowledge if it's behind a NAT or not and as such might want to indicate to use Conn ID or not. We can make that more explicit in the text.",
          "createdAt": "2020-08-24T13:12:10Z",
          "updatedAt": "2020-08-24T13:12:10Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I did some small edits on the text in the connection migration section but @martinduke maybe you had something more in mind and want to propose more text?",
          "createdAt": "2020-08-24T13:13:08Z",
          "updatedAt": "2020-08-24T13:13:08Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This whole section should then also be moved to after the Conn ID section.",
          "createdAt": "2020-08-24T13:18:58Z",
          "updatedAt": "2020-08-24T13:18:58Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I like the move of text to the manageability draft. If it were me, I'd move \"Server-Generated Connection ID\" as well, as I don't think apps need to worry about it, but it's not a big deal.\r\n\r\nI think adding text about server preferred address is probably more important for this draft.",
          "createdAt": "2020-08-24T16:16:20Z",
          "updatedAt": "2020-08-24T16:16:20Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Added some more text in #127 ",
          "createdAt": "2020-10-27T10:29:29Z",
          "updatedAt": "2020-10-27T10:29:29Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinduke we think the current state of the draft addresses this issue; could you check and close this issue if so?",
          "createdAt": "2020-11-18T06:22:06Z",
          "updatedAt": "2020-11-18T06:22:06Z"
        }
      ]
    },
    {
      "number": 116,
      "id": "MDU6SXNzdWU2NzAzNTc0MTE=",
      "title": "Does connection ID stuff belong in applicability draft?",
      "url": "https://github.com/quicwg/ops-drafts/issues/116",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "-manageability"
      ],
      "body": "Is this something application designers need to think about or manage? I would hope QUIC implementations would handle this transparently.\r\n\r\nTo the extent you have to configure something like QUIC-LB, that's a manageability thing.",
      "createdAt": "2020-08-01T00:01:46Z",
      "updatedAt": "2020-09-07T08:49:15Z",
      "closedAt": "2020-09-07T08:49:15Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Connection IDs are weird, in that they are important to both implementors / deployers (so applicability) as opposed to operators of networks that are not necessarily at the endpoints (so manageability)",
          "createdAt": "2020-08-17T11:55:53Z",
          "updatedAt": "2020-08-17T11:55:53Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There is text about Connection ID in both documents. We can double-check though that the text is well aligned and splitter correctly.",
          "createdAt": "2020-08-17T11:58:20Z",
          "updatedAt": "2020-08-17T11:58:20Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Well, implementors are explicitly out of scope according to the document's introduction. I would hope that apps didn't have to worry about Connection ID properties very much, or at all.\r\n\r\nMaybe there is knob or two for information exposure, at most, but I'd consider most of this text to be extraneous to the applicabilty draft.",
          "createdAt": "2020-08-19T22:54:16Z",
          "updatedAt": "2020-08-19T22:54:16Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think we actually put some text in the wrong doc. PR #121 moves this text from applicability to manageability.",
          "createdAt": "2020-08-24T12:47:58Z",
          "updatedAt": "2020-08-24T12:47:58Z"
        }
      ]
    },
    {
      "number": 118,
      "id": "MDU6SXNzdWU2ODAxNzM3MTg=",
      "title": "Advise against short idle timeouts?",
      "url": "https://github.com/quicwg/ops-drafts/issues/118",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "in #102, @pravb said:\r\n\r\n> One concern I have with short idle timeout is impact on VM live migration. The current guidance with TCP default timeouts allows LM to have a blackout period of under 9 seconds. Do we need any guidance here to not use very low default timeouts?\r\n\r\nThis probably needs its own discussion...",
      "createdAt": "2020-08-17T11:49:06Z",
      "updatedAt": "2020-11-02T14:48:05Z",
      "closedAt": "2020-11-02T14:48:04Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "note that we use the words \"idle timeout\" two different ways in the applicability document:\r\n\r\n(1) the network idle timeout, which is the shortest state timeout of a device on a path between the endpoints\r\n(2) the endpoint idle timeout transport parameter, which is the point at which a connection will simply silently close.\r\n\r\nWhile addressing this question (which I interpret as \"we present session resumption as a solution for clients, but what about servers?), we should also clear up the terminology.",
          "createdAt": "2020-09-07T09:15:25Z",
          "updatedAt": "2020-09-07T09:15:25Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Setting a QUIC endpoint idle timeout above 30 sec won't have much effect here because of the prevalence of 30s UDP network idle timeouts on middleboxes. So guidance here should max out at 30s.\r\n\r\nGiven the variety of different ways VM live migration is implemented and the variety of network control planes that can be used to steer traffic in this situation, the guidance should also not be too low... so if there is guidance here I'd say it should be in the 10-30s range. @pravb does this seem reasonable?",
          "createdAt": "2020-10-26T14:14:23Z",
          "updatedAt": "2020-10-26T14:14:23Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See also / reference RFC 4787 (for UDP) and RFC 7857 / 2663 (for TCP).",
          "createdAt": "2020-10-26T14:21:11Z",
          "updatedAt": "2020-10-26T14:21:11Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'd suggest a min of 30 seconds as being sensible for the public internet, and longer may be preferable if the deployment can consistently survive NAT rebinds.\r\n\r\nWe have applications with much longer(ie: 5 minute) timeouts in production, but they don't do hanging GETs and our infrastructure is designed to correctly handle NAT rebinds.",
          "createdAt": "2020-10-26T14:42:46Z",
          "updatedAt": "2020-10-26T14:42:46Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addressed by #125",
          "createdAt": "2020-11-02T14:48:04Z",
          "updatedAt": "2020-11-02T14:48:04Z"
        }
      ]
    },
    {
      "number": 130,
      "id": "MDU6SXNzdWU3NDUzNTUzNTA=",
      "title": "CI appears broken",
      "url": "https://github.com/quicwg/ops-drafts/issues/130",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "larseggert",
        "britram"
      ],
      "labels": [],
      "body": "Maybe try GitHub Actions.\r\n\r\n```sh\r\ngit -C lib fetch origin\r\ngit -C lib checkout main\r\ncp -R lib/template/.github .\r\ngit add .github\r\ngit commit\r\n```",
      "createdAt": "2020-11-18T05:54:25Z",
      "updatedAt": "2020-11-18T07:27:31Z",
      "closedAt": "2020-11-18T07:27:31Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "CircleCI is actually building the docs (and submits on pushed annotated tags), but I also just noticed that ghpages is somehow desynced.\r\n\r\nThe suggestion above would move to GitHub Actions; I presume I'd need to turn CircleCI off as well...",
          "createdAt": "2020-11-18T06:09:43Z",
          "updatedAt": "2020-11-18T06:09:43Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Yes, turning off Circle would help avoid having them fight each other.",
          "createdAt": "2020-11-18T06:10:32Z",
          "updatedAt": "2020-11-18T06:10:32Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "hm, the master/main switch seems to be confounding me here:\r\n\r\n```\r\n\u279c  quic-ops-master git:(master) git -C lib fetch origin \r\nremote: Enumerating objects: 453, done.\r\nremote: Counting objects: 100% (448/448), done.\r\nremote: Compressing objects: 100% (162/162), done.\r\nremote: Total 391 (delta 230), reused 358 (delta 199), pack-reused 0\r\nReceiving objects: 100% (391/391), 49.96 KiB | 655.00 KiB/s, done.\r\nResolving deltas: 100% (230/230), completed with 41 local objects.\r\nFrom https://github.com/martinthomson/i-d-template\r\n * [new tag]         v1         -> v1\r\n\u279c  quic-ops-master git:(master) git -C lib fetch origin main\r\nFrom https://github.com/martinthomson/i-d-template\r\n * branch            main       -> FETCH_HEAD\r\n\u279c  quic-ops-master git:(master) git -C lib checkout main    \r\nerror: pathspec 'main' did not match any file(s) known to git\r\n```",
          "createdAt": "2020-11-18T06:20:09Z",
          "updatedAt": "2020-11-18T06:20:09Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "```\r\ngit -C lib checkout main FETCH_HEAD\r\n```\r\n\r\nPerhaps?\r\n\r\n`git reset` might need to be involved.",
          "createdAt": "2020-11-18T06:23:11Z",
          "updatedAt": "2020-11-18T06:23:11Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "there's also this: \r\n\r\n```\r\nlib/id.mk:3: *************************************************\r\nlib/id.mk:4: ***                                           ***\r\nlib/id.mk:5: ***   You are using the 'master' branch.      ***\r\nlib/id.mk:6: ***   Please update to use 'main'.            ***\r\nlib/id.mk:7: ***                                           ***\r\nlib/id.mk:8: ***   sed -i~ s/master/main/ Makefile         ***\r\nlib/id.mk:9: ***                                           ***\r\nlib/id.mk:10: *************************************************\r\n```\r\n",
          "createdAt": "2020-11-18T06:23:51Z",
          "updatedAt": "2020-11-18T06:23:51Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "That smells like you need to do something drastic.\r\n\r\n```\r\nrm -rf lib\r\ngit clone https://github.com/martinthomson/i-d-template lib\r\n```",
          "createdAt": "2020-11-18T06:39:08Z",
          "updatedAt": "2020-11-18T06:39:08Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "yeah I've done an appropriate amount of blasting things away and I've got a PR incoming...",
          "createdAt": "2020-11-18T06:40:45Z",
          "updatedAt": "2020-11-18T06:40:45Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "one cannot ask for a more direct verification that a PR has the intended effect :)\r\n\r\n![github_circle_ci](https://user-images.githubusercontent.com/1884116/99494748-d6fed400-2971-11eb-99a1-4c6841c1d57a.png)\r\n",
          "createdAt": "2020-11-18T06:44:42Z",
          "updatedAt": "2020-11-18T06:44:42Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hi Lars, I need an admin to click Stop Building [here](https://app.circleci.com/settings/project/github/quicwg/ops-drafts?return-to=https%3A%2F%2Fapp.circleci.com%2Fpipelines%2Fgithub%2Fquicwg%2Fops-drafts) to finish migrating off CircleCI; is that you?",
          "createdAt": "2020-11-18T06:48:59Z",
          "updatedAt": "2020-11-18T06:48:59Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "(There might also be settings on the GitHub repository side that would disable this, but the UI has changed since the last time I did this and I... can't find them, if I'm authorized to use them)",
          "createdAt": "2020-11-18T07:02:04Z",
          "updatedAt": "2020-11-18T07:02:04Z"
        },
        {
          "author": "larseggert",
          "authorAssociation": "MEMBER",
          "body": "That link isn't loading for me? Can't you simply remove the circleCI (and Travis) config files?",
          "createdAt": "2020-11-18T07:19:03Z",
          "updatedAt": "2020-11-18T07:19:03Z"
        },
        {
          "author": "larseggert",
          "authorAssociation": "MEMBER",
          "body": "OK, the link started working after I logged in separately. Clicked!",
          "createdAt": "2020-11-18T07:21:19Z",
          "updatedAt": "2020-11-18T07:21:19Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "oh wow there was still a travis file. removed that too.\r\n\r\nThanks, Lars, this looks good to me now (and thanks @martinthomson for making HG actions migration so easy after I un-Gitted my repo).",
          "createdAt": "2020-11-18T07:27:31Z",
          "updatedAt": "2020-11-18T07:27:31Z"
        }
      ]
    },
    {
      "number": 131,
      "id": "MDU6SXNzdWU3NDUzNjA4NTE=",
      "title": "QoS support and ECMP section",
      "url": "https://github.com/quicwg/ops-drafts/issues/131",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This section is labeled with \\[EDITOR'S NOTE: this is a bit speculative; keep?]. Should we keep it?",
      "createdAt": "2020-11-18T06:05:10Z",
      "updatedAt": "2020-12-07T13:45:41Z",
      "closedAt": "2020-12-07T13:45:41Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "rolled into #140 because I forgot this issue was here \ud83e\udd26 ",
          "createdAt": "2020-12-07T13:45:41Z",
          "updatedAt": "2020-12-07T13:45:41Z"
        }
      ]
    },
    {
      "number": 136,
      "id": "MDU6SXNzdWU3NDcwNDcxOTk=",
      "title": "2^62-1 is a harder limit than implied",
      "url": "https://github.com/quicwg/ops-drafts/issues/136",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability"
      ],
      "body": ">  In the presently unlikely event that this limit is reached by an application, the stream can simply be closed and replaced with a new one.\r\n\r\nThis text in [Section 4](https://quicwg.org/ops-drafts/draft-ietf-quic-applicability.html#section-4-2) is incorrect.  When you have sent that much data, the connection flow control limit cannot be increased further.  Consequently, though many additional streams can be opened when a stream hits this limit, you cannot send any bytes on any of those streams.\r\n\r\nI recommend striking this sentence or replacing it with a note about this fundamental limit applying to all data conveyed in streams.",
      "createdAt": "2020-11-20T00:44:54Z",
      "updatedAt": "2020-12-21T10:17:07Z",
      "closedAt": "2020-12-21T10:17:07Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Happy to take a PR :-)",
          "createdAt": "2020-12-04T18:36:17Z",
          "updatedAt": "2020-12-04T18:36:17Z"
        }
      ]
    },
    {
      "number": 137,
      "id": "MDU6SXNzdWU3NDcwNDc5NzI=",
      "title": "You can't close stream ingress",
      "url": "https://github.com/quicwg/ops-drafts/issues/137",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "> However, an endpoint can abruptly close either the ingress or egress direction; these actions are fully independent of each other.\r\n\r\nThis text in [Section 4](https://quicwg.org/ops-drafts/draft-ietf-quic-applicability.html#section-4-3) is incorrect.  An endpoint can abruptly close (reset) egress data, but it can only *request* that its peer abruptly close ingress (using STOP_SENDING).",
      "createdAt": "2020-11-20T00:46:46Z",
      "updatedAt": "2020-12-22T11:30:18Z",
      "closedAt": "2020-12-22T11:30:18Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "is there a missing \"not\"? Do you mean: s/An endpoint can abruptly close (reset) egress data/An endpoint cannot abruptly close (reset) egress data/ ?\r\n\r\nAnyway, yes, we need to fix that!",
          "createdAt": "2020-12-04T18:35:09Z",
          "updatedAt": "2020-12-04T18:35:09Z"
        }
      ]
    },
    {
      "number": 138,
      "id": "MDU6SXNzdWU3NDcwNDg1NTA=",
      "title": "Critical streams aren't worth a whole paragraph",
      "url": "https://github.com/quicwg/ops-drafts/issues/138",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "I think that the text on [streams that are critical to an application](https://quicwg.org/ops-drafts/draft-ietf-quic-applicability.html#section-4-4) can be removed.\r\n\r\nThis was an interesting discussion in HTTP/3, but I'm not sure that the applicability statement needs to concern itself with this detail.",
      "createdAt": "2020-11-20T00:48:12Z",
      "updatedAt": "2020-12-22T11:29:37Z",
      "closedAt": "2020-12-22T11:29:37Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The intention was, given it was an interesting discussion in H3, it might worth mentioning as other application may have the same \"problem\". I think it doesn't hurt to keep it. Or is there any concern that the term \"critical stream\" is maybe not well enough defined?",
          "createdAt": "2020-12-04T18:31:39Z",
          "updatedAt": "2020-12-04T18:31:39Z"
        }
      ]
    },
    {
      "number": 139,
      "id": "MDU6SXNzdWU3NDcwNTAyMzc=",
      "title": "Normative language in applicability statement",
      "url": "https://github.com/quicwg/ops-drafts/issues/139",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "There are a few instances that might be read as normative statements.  Is that really wise?\r\n\r\nExamples:\r\n\r\n> applications should not assume access to these identifiers\r\n\r\ncannot?\r\n\r\n> fallback MUST not silently violate the application's expectation of confidentiality or integrity of its payload data\r\n\r\nMaybe this isn't something that this document needs to say.  It could just say that fallback to unencrypted TCP might not be a desirable outcome.\r\n\r\nThere is also a bunch of \"MUST\"-level statements in the 0-RTT section, but I've proposed a rewrite that (I hope) eliminates them.",
      "createdAt": "2020-11-20T00:52:28Z",
      "updatedAt": "2020-12-07T13:40:34Z",
      "closedAt": "2020-12-07T13:40:34Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed in #132: removed all 2119 language.",
          "createdAt": "2020-12-07T13:40:34Z",
          "updatedAt": "2020-12-07T13:40:34Z"
        }
      ]
    },
    {
      "number": 140,
      "id": "MDU6SXNzdWU3NTg1MDkwODg=",
      "title": "Rewrite QoS and ECMP section to actually talk about DSCP",
      "url": "https://github.com/quicwg/ops-drafts/issues/140",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "Discussion in closed PR #134 ",
      "createdAt": "2020-12-07T13:30:32Z",
      "updatedAt": "2021-01-22T12:16:17Z",
      "closedAt": "2021-01-22T12:16:17Z",
      "comments": []
    },
    {
      "number": 141,
      "id": "MDU6SXNzdWU3NTg1MTM5MzI=",
      "title": "Double check security considerations sections",
      "url": "https://github.com/quicwg/ops-drafts/issues/141",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "-manageability",
        "final check"
      ],
      "body": "After removing normative language, it occurs to us that there might be other security considerations that we want to highlight from Transport and TLS in Manageability or (especially) Applicability.",
      "createdAt": "2020-12-07T13:37:08Z",
      "updatedAt": "2021-01-11T14:40:59Z",
      "closedAt": "2021-01-11T14:40:59Z",
      "comments": []
    },
    {
      "number": 142,
      "id": "MDU6SXNzdWU3NjA3NzkzNTI=",
      "title": "Integrity Protection is not quite right",
      "url": "https://github.com/quicwg/ops-drafts/issues/142",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "editor-ready"
      ],
      "body": "In manageability:\r\n\r\n\"Integrity Protection of the Wire Image {#wire-integrity}\r\nAs soon as the cryptographic context is established, all information in the QUIC header, including information exposed in the packet header, is integrity protected. Further, information that was sent and exposed in handshake packets sent before the cryptographic context was established are validated later during the cryptographic handshake. Therefore, devices on path cannot alter any information or bits in QUIC packet headers, since alteration of header information will lead to a failed integrity check at the receiver, and can even lead to connection termination.\"\r\n\r\nThis isn't precise. The Initial packet is not meaningfully integrity-protected, but the contents of the CRYPTO frame (and the connection IDs) are. An on-path attacker could, for instance, change the ClientHello's Packet Number to from '0' to '1' and then adjust the ACK frame from '1' to '0'. (Why would one do this?)",
      "createdAt": "2020-12-10T00:31:32Z",
      "updatedAt": "2020-12-21T10:33:15Z",
      "closedAt": "2020-12-21T10:33:15Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is the ACK frame in the case not encrypted...?",
          "createdAt": "2020-12-10T11:35:50Z",
          "updatedAt": "2020-12-10T11:35:50Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The Initial is decryptable by anyone, and so could be rewritten.",
          "createdAt": "2020-12-10T16:00:19Z",
          "updatedAt": "2020-12-10T16:00:19Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Okay. What do we want to write here now?",
          "createdAt": "2020-12-17T17:48:16Z",
          "updatedAt": "2020-12-17T18:27:45Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "how about \"...cannot alter any information or bits in QUIC packet headers, since alteration...\" changing to:\r\n\r\n\"...cannot alter any information or bits in QUIC packet headers, except specific parts of Initial packets, since alteration...\"",
          "createdAt": "2020-12-17T19:38:44Z",
          "updatedAt": "2020-12-17T19:38:44Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "WFM. I can change that as soon as your PR landed (or you add it to your PR).",
          "createdAt": "2020-12-18T09:14:31Z",
          "updatedAt": "2020-12-18T09:14:31Z"
        }
      ]
    },
    {
      "number": 143,
      "id": "MDU6SXNzdWU3NjA3ODA2NDI=",
      "title": "Do clients really use zero-length CIDs?",
      "url": "https://github.com/quicwg/ops-drafts/issues/143",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\"Connection ID and rebinding\"\r\n\"typically, however, only the server will request a connection ID for the lifetime of the connection.\"\r\n\r\nWhile I totally accept that this would be reasonable in the real world, is this remotely true about existing client implementations? I admit to not checking recently, but I suspect client CIDs are predominant.\r\n",
      "createdAt": "2020-12-10T00:34:36Z",
      "updatedAt": "2020-12-10T15:58:10Z",
      "closedAt": "2020-12-10T15:58:10Z",
      "comments": [
        {
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "body": "For what it's worth, MsQuic uses zero-length CIDs on the client by default. Only when explicitly sharing the local UDP port does it use CIDs to differentiate between the different connections.",
          "createdAt": "2020-12-10T01:37:37Z",
          "updatedAt": "2020-12-10T01:37:37Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "We plan to use zero-length connection IDs.  At least initially.  There are use cases where we would want to use a different strategy.",
          "createdAt": "2020-12-10T03:00:29Z",
          "updatedAt": "2020-12-10T03:00:29Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chrome/Cronet also use zero-length CIDs and have for years.  I don't see any motivation to change this anytime soon in those clients.",
          "createdAt": "2020-12-10T12:55:23Z",
          "updatedAt": "2020-12-10T12:55:23Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closed, as I am obviously misinformed as to what clients are doing.",
          "createdAt": "2020-12-10T15:58:10Z",
          "updatedAt": "2020-12-10T15:58:10Z"
        }
      ]
    },
    {
      "number": 144,
      "id": "MDU6SXNzdWU3NjA3ODI5MjI=",
      "title": "Does the length self-encoding scheme actually work?",
      "url": "https://github.com/quicwg/ops-drafts/issues/144",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "editor-ready"
      ],
      "body": "In \"Connection ID and Rebinding\":\r\n\r\n\"Even when encrypted, a scheme could embed the unencrypted length of the Connection ID in the Connection ID itself, instead of remembering it, e.g. by using the first few bits to indicate a certain size of a well-known set of possible sizes with multiple values that indicate the same size but are selected randomly.\"\r\n\r\nI almost went and filed an issue against quic-lb to do this instead of just encoding a plaintext length like it does currently. But is this a good recommended practice? ISTM that long headers would provide a bit of a Rosetta Stone for this mapping, making it not particularly effective for the complexity.\r\n\r\n",
      "createdAt": "2020-12-10T00:40:10Z",
      "updatedAt": "2020-12-21T10:33:26Z",
      "closedAt": "2020-12-21T10:33:26Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The idea was not to conceal the length but to avoid likability by identifying linked connection based on the existence of a certain length field. This might look slightly more random but I guess you also have to change your mapping more time to time. So not sure. I'm fine to remove that half sentence and maybe add a sentence about likability instead...?",
          "createdAt": "2020-12-17T17:45:40Z",
          "updatedAt": "2020-12-17T17:45:40Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, I would prefer deleting the quoted text, as I think it's a solution that adds complexity for little apparent benefit.",
          "createdAt": "2020-12-17T19:22:39Z",
          "updatedAt": "2020-12-17T19:22:39Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Okay, will do that change after your PR has landed.",
          "createdAt": "2020-12-18T09:13:31Z",
          "updatedAt": "2020-12-18T09:13:31Z"
        }
      ]
    },
    {
      "number": 145,
      "id": "MDU6SXNzdWU3NjA3ODcxNjc=",
      "title": "Ask people not to drop new versions?",
      "url": "https://github.com/quicwg/ops-drafts/issues/145",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [],
      "body": "The VN section suggests that observers not use the version number to detect QUIC.\r\n\r\nWould it be futile to ask them to admit QUIC versions they don't recognize rather than drop them?",
      "createdAt": "2020-12-10T00:49:51Z",
      "updatedAt": "2020-12-22T11:22:37Z",
      "closedAt": "2020-12-22T11:22:37Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Probably.",
          "createdAt": "2020-12-10T02:58:14Z",
          "updatedAt": "2020-12-10T02:58:14Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Not sure. Depends on the function you implement. I guess there could be security functions that decide to only allow certain versions... not sure if that is justified but I don't think we can stop it.",
          "createdAt": "2020-12-10T11:30:25Z",
          "updatedAt": "2020-12-10T11:30:25Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Any further opinions here?",
          "createdAt": "2020-12-17T17:37:50Z",
          "updatedAt": "2020-12-17T17:37:50Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We can stop it with greasing,  I guess. IMO the draft should specify best practices that don't break extensibility and if people don't follow it it's on them. That's the approach I took in QUIC-LB.",
          "createdAt": "2020-12-17T17:41:50Z",
          "updatedAt": "2020-12-17T17:41:50Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The best practice is to not block any unknown traffic as blocking hinders evolution. However, I guess there might be security reasons why some will not do that. I guess allowing for certain versions of QUIC is better than blocking UDP entirely...? ",
          "createdAt": "2020-12-17T18:24:38Z",
          "updatedAt": "2020-12-17T18:24:38Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "+1... I don't think that putting text in this document saying \"don't wholesale block versions of QUIC you don't understand\" will actually change the behavior of the boxes that will ship this behavior, since drop-unknown is taken as a security best practice. But I still think it's worth putting that advice in the document nonetheless, if only to have \"I told you so\" in an RFC.\r\n\r\n(I do still tend to think that we'll see only two behaviors emerge in the wild: (1) permit anything with a QUIC wire image since there's not much to grab on to there (and rely on the LB implementation to eat DoS hiding behind that wire image) and (2) block anything that smells like QUIC (because it is easy to implement in the default case and it forces fallback to TCP, which already has lots of running security monitoring code).)",
          "createdAt": "2020-12-21T08:57:22Z",
          "updatedAt": "2020-12-21T08:57:22Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "will work up a PR for us to discuss",
          "createdAt": "2020-12-21T10:27:20Z",
          "updatedAt": "2020-12-21T10:27:20Z"
        }
      ]
    },
    {
      "number": 146,
      "id": "MDU6SXNzdWU3NjA3OTgwNTg=",
      "title": "Add Considerations for NAT",
      "url": "https://github.com/quicwg/ops-drafts/issues/146",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "martinduke"
      ],
      "labels": [],
      "body": "Per feedback at IETF 109, Martin will take his quic-natsupp draft and put it somewhere in quic-manageability.",
      "createdAt": "2020-12-10T01:17:11Z",
      "updatedAt": "2021-01-22T12:19:03Z",
      "closedAt": "2021-01-22T12:19:03Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks!",
          "createdAt": "2020-12-10T11:28:58Z",
          "updatedAt": "2020-12-10T11:28:58Z"
        }
      ]
    },
    {
      "number": 147,
      "id": "MDU6SXNzdWU3NjA4MDM1Mjk=",
      "title": "DDoS guidance is inaccurate about QUIC-LB",
      "url": "https://github.com/quicwg/ops-drafts/issues/147",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "\"QUIC's linkability resistance ensures that a deliberate connection migration is accompanied by a change in the connection ID and necessitate that connection ID aware DDoS defense system must have the same information about connection IDs as the load balancer {{?I-D.ietf-quic-load-balancers}}. This may be complicated where mitigation and load balancing environments are logically separate.\"\r\n\r\nThis is insufficient. Even the load balancer is only able to identify the end server, not the connection.",
      "createdAt": "2020-12-10T01:31:06Z",
      "updatedAt": "2020-12-22T11:23:22Z",
      "closedAt": "2020-12-22T11:23:22Z",
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "On a related note, the suggestion to use the \"first 8 bytes\" of a server's connection ID is somewhat strange. Why not observe the CIDL it's using in long headers, or just have common configuration?",
          "createdAt": "2020-12-10T01:32:36Z",
          "updatedAt": "2020-12-10T01:32:36Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "How about if we just remove any wording about load balancers here? Like this maybe:\r\n\r\n```\r\nQUIC's linkability resistance ensures that a deliberate connection migration is accompanied by a change in the connection ID and necessitate that DDoS defense system are connection ID aware.\r\n```",
          "createdAt": "2020-12-17T17:35:08Z",
          "updatedAt": "2020-12-17T17:35:08Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "On the 8 bytes: I actually not sure where this comes from, however, I assume that the thinking was that using the first 8 bytes might be good enough to avoid collisions if you don't know the connection ID length. But I guess we can remove it or add some more explanation... any thoughts?",
          "createdAt": "2020-12-17T17:37:05Z",
          "updatedAt": "2020-12-17T17:37:05Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If you read the Retry Services section of QUIC-LB, you'll see that there is no dependence on the Connection ID encoding at all. It is a common format for Retry Tokens that allows servers to (at a minimum) extract the original CIDs necessary for verification.\r\n\r\nCertainly, no device should drop packets simply because the CID has changed, which is maybe what you're trying to say here? But I'm not sure that this is a DDoS thing.",
          "createdAt": "2020-12-17T19:17:54Z",
          "updatedAt": "2020-12-17T19:17:54Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The point is when a DDoS attack is on-going you want to make sure that on-going connections keep running while new connections are handled more carefully. So you have to be flow aware. However, maybe it's acceptable if connectivity breaks during a DDoS when the 5 tuple changes...? Otherwise you would need to be CID aware.",
          "createdAt": "2020-12-18T09:12:35Z",
          "updatedAt": "2020-12-18T09:12:35Z"
        }
      ]
    },
    {
      "number": 148,
      "id": "MDU6SXNzdWU3NjA4MDQ0MzU=",
      "title": "Should DDoS section talk about Retry Services?",
      "url": "https://github.com/quicwg/ops-drafts/issues/148",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "martinduke"
      ],
      "labels": [],
      "body": "I am not really sure at all that the existing DDoS guidance is good advice; we have a somewhat more robust plan in quic-lb, which perhaps we should reference?",
      "createdAt": "2020-12-10T01:33:30Z",
      "updatedAt": "2021-01-22T12:09:46Z",
      "closedAt": "2021-01-22T12:09:46Z",
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "for that matter, the Retry packet does not make an appearance in this section at all, which seems like an oversight.",
          "createdAt": "2020-12-10T01:34:23Z",
          "updatedAt": "2020-12-10T01:34:23Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes to both. Can you provide an PR?",
          "createdAt": "2020-12-10T11:27:37Z",
          "updatedAt": "2020-12-10T11:27:37Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, please assign this issue to me.",
          "createdAt": "2020-12-10T16:01:32Z",
          "updatedAt": "2020-12-10T16:01:32Z"
        }
      ]
    },
    {
      "number": 149,
      "id": "MDU6SXNzdWU3NjA4MDU3MzQ=",
      "title": "Delete QoS and ECMP",
      "url": "https://github.com/quicwg/ops-drafts/issues/149",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I do not feel comfortable at all that QoS treatment based on Connection ID, or ECMP within flows, is a good idea with no horrible implications for privacy and performance.",
      "createdAt": "2020-12-10T01:37:06Z",
      "updatedAt": "2020-12-10T15:59:16Z",
      "closedAt": "2020-12-10T15:59:16Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "we have issue #140 to rewrite this section. It's on my todo list. ",
          "createdAt": "2020-12-10T11:26:49Z",
          "updatedAt": "2020-12-10T11:26:49Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closed as duplicate.",
          "createdAt": "2020-12-10T15:59:16Z",
          "updatedAt": "2020-12-10T15:59:16Z"
        }
      ]
    },
    {
      "number": 151,
      "id": "MDU6SXNzdWU3NjE4MDI4NDQ=",
      "title": "Connection ID linkability is missing a premise",
      "url": "https://github.com/quicwg/ops-drafts/issues/151",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "editor-ready"
      ],
      "body": "[Mitigating Timing Linkability with Connection ID Migration](https://quicwg.org/ops-drafts/draft-ietf-quic-applicability.html#name-mitigating-timing-linkabili) launches right into discussion of how linkability protections might be inadequate without really establishing what the requirements are or why they exist.  This needs an introduction paragraph. ",
      "createdAt": "2020-12-11T02:22:43Z",
      "updatedAt": "2020-12-21T10:52:11Z",
      "closedAt": "2020-12-21T10:52:11Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note sure how much more we want to say here or can say at this point in time....\r\n\r\n@martinthomson if you have a more concrete idea what we should say here, can you give it a try and propose a PR?",
          "createdAt": "2020-12-17T17:29:53Z",
          "updatedAt": "2020-12-17T17:29:53Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Something like:\r\n\r\n> QUIC requires that endpoints generate fresh connection IDs for use on new network paths.  Choosing values that are unlinkable to an outside observer ensures that activity on different paths cannot be trivially correlated using the connection ID.\r\n\r\nThen launch into the existing discussion.",
          "createdAt": "2020-12-18T02:25:15Z",
          "updatedAt": "2020-12-18T02:25:15Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Sounds good to me. I can add that after you PR landed or you can add it to your PR.",
          "createdAt": "2020-12-18T09:16:15Z",
          "updatedAt": "2020-12-18T09:16:15Z"
        }
      ]
    },
    {
      "number": 152,
      "id": "MDU6SXNzdWU3NjE4MDM2NzY=",
      "title": "In prose, it is \"connection ID\"",
      "url": "https://github.com/quicwg/ops-drafts/issues/152",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [],
      "body": "We've not been capitalizing this in the main spec; so nor should this document.  I've fixed those cases that I've touched in my upcoming PR, but it's going to need more work to clean up properly.",
      "createdAt": "2020-12-11T02:23:55Z",
      "updatedAt": "2021-01-06T07:57:40Z",
      "closedAt": "2021-01-06T07:57:40Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yep, will do that after we merged the PRs. Thanks!",
          "createdAt": "2020-12-17T17:27:45Z",
          "updatedAt": "2020-12-17T17:27:45Z"
        }
      ]
    },
    {
      "number": 165,
      "id": "MDU6SXNzdWU3NzMwODY0NzE=",
      "title": "Transport parameter are not really listed in section 3",
      "url": "https://github.com/quicwg/ops-drafts/issues/165",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "which is about \"Network-visible information about QUIC flows\". \r\n\r\nThey are mentioned once, based on a recent edit, but the text before that does not introduce them or explain what they are. Maybe we can add a few more sentences also making sure that even though they could be observed in the client initial, they cannot be changed nor observed form the server (to understand final negotiation/support).",
      "createdAt": "2020-12-22T16:40:11Z",
      "updatedAt": "2021-01-22T12:37:32Z",
      "closedAt": "2021-01-22T12:37:32Z",
      "comments": []
    },
    {
      "number": 174,
      "id": "MDU6SXNzdWU3OTg0MjYzNTg=",
      "title": "Does TCP fallback require TLS 1.3?",
      "url": "https://github.com/quicwg/ops-drafts/issues/174",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "Applicability section 2 says:\r\n\r\n```\r\nAll applications running on top of QUIC must therefore either be prepared to accept connectivity failure on such networks, or be engineered to fall back to some other transport protocol. In the case of HTTP, this fallback is TLS 1.3 over TCP.\r\n```\r\n\r\nI'm not sure how practical this advice is. Requiring a fallback to TLS 1.3 specifically seems problematic due to the diversity of HTTP versions and TLS versions that are deployed today. (NB: I agree with a general raising of the bar for security, but I don't think this document is the place to state it)\r\n\r\nWe can assume that any HTTP version might learn about HTTP/3 via Alt-Svc or HTTPSVC. This could for example be HTTP/1.1 over TCP port 80. Such a client could fallback to the version it learned about QUIC from, and nothing bad would happen.\r\n\r\n",
      "createdAt": "2021-02-01T14:54:12Z",
      "updatedAt": "2021-02-22T10:46:51Z",
      "closedAt": "2021-02-22T10:46:51Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This wasn't meant to enforce any restriction. The assumption was simply that if you have implemented QUIC, you might have probably also implemented TLS1.3... however, I guess we can just remove the \"1.3\" here and only say \"TLS over TCP\". Okay?",
          "createdAt": "2021-02-01T15:51:17Z",
          "updatedAt": "2021-02-01T15:51:17Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "One could argue it should require TLS 1.3, since otherwise there's an easy security downgrade, but I'm not sure that's something we could require.",
          "createdAt": "2021-02-01T16:21:24Z",
          "updatedAt": "2021-02-01T16:21:24Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "IMO we need to accommodate disparate support across versions. To give an example, a CDN operator may have QUIC and HTTP endpoints that are configured differently according to customer configuration. With QUIC v1 it is safe to assume only TLS 1.3 so a CDN might not provide configuration for TLS version. However, other HTTP versions could theoretically be configured only to support a maximum of TLS 1.2. Since plaintext HTTP and TLS 1.2 are not prohibited for use on the internet, it seems odd to levy a requirement that prevents them being used in one specific chain of interactions. \r\n\r\nMirja's suggestion to say \"TLS over TCP\" is better but would still not address the plaintext HTTP case. A user agent might see http://example.com, connect to port 80, and get Alt-Svc'd to HTTP/3. If the something goes wrong and TLS is not permitted, then all connectivity might be broken forever.\r\n",
          "createdAt": "2021-02-01T16:40:45Z",
          "updatedAt": "2021-02-01T16:40:45Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In the same section later we say \r\n\r\n```\r\nAny fallback mechanism is likely to impose a degradation of performance; however, fallback must not silently violate the application's expectation of confidentiality or integrity of its payload data.\r\n```\r\n\r\nI hope that addresses your point about security downgrade, @ianswett ?",
          "createdAt": "2021-02-01T17:17:16Z",
          "updatedAt": "2021-02-01T17:17:16Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It might be worth saying \"likely to impose a degradation on performance and can degrade security;\"?",
          "createdAt": "2021-02-01T21:14:13Z",
          "updatedAt": "2021-02-01T21:14:13Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I created a PR and also changed the order of sentences a bit to make the it more clear.\r\n\r\n@LPardue is there anything else you think we need to say here?",
          "createdAt": "2021-02-16T11:11:27Z",
          "updatedAt": "2021-02-16T11:11:27Z"
        }
      ]
    },
    {
      "number": 175,
      "id": "MDU6SXNzdWU3OTg1NzE0NDU=",
      "title": "Discuss application-layer graceful/scheduled close",
      "url": "https://github.com/quicwg/ops-drafts/issues/175",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "MEMBER",
      "assignees": [
        "LPardue"
      ],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "https://quicwg.org/ops-drafts/draft-ietf-quic-applicability.html#section-8 deals with connection closure and is pretty exhaustive. However, I think it would be improved by discussing how an application protocol might manage graceful connection close in the absence of a transport-layer mechanism. HTTP/3 defines the GOAWAY frame for this purpose, defining the closure signalling mechnanism and the  behaviour of endpoints when in the draining period - especially wrt creating streams.",
      "createdAt": "2021-02-01T17:44:16Z",
      "updatedAt": "2021-04-14T12:50:30Z",
      "closedAt": "2021-04-14T12:50:30Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@LPardue would you be able to propose some text?",
          "createdAt": "2021-02-01T17:50:12Z",
          "updatedAt": "2021-02-01T17:50:12Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "I'll try \ud83d\ude00",
          "createdAt": "2021-02-01T17:54:12Z",
          "updatedAt": "2021-02-01T17:54:12Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "#298 is merged",
          "createdAt": "2021-04-14T12:50:30Z",
          "updatedAt": "2021-04-14T12:50:30Z"
        }
      ]
    },
    {
      "number": 176,
      "id": "MDU6SXNzdWU4MDExOTEyODA=",
      "title": "Section 2.3 - QUIC Port Numbers (not really different to other ports)",
      "url": "https://github.com/quicwg/ops-drafts/issues/176",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability",
        "editorial",
        "has PR"
      ],
      "body": "It seems to me that QUIC is no different to other transports in respect of being able to utilise other port numbers, and it would be worth noting that this is normal. The present text might perhaps suggest this is specific to QUIC. Should the text reference RFC 7605 or something else just to explain ports don't imply specific application behaviour, but could infer this?.\r\n",
      "createdAt": "2021-02-04T11:23:40Z",
      "updatedAt": "2021-02-22T09:58:58Z",
      "closedAt": "2021-02-22T09:58:58Z",
      "comments": []
    },
    {
      "number": 177,
      "id": "MDU6SXNzdWU4MDExOTMzNTA=",
      "title": "Sect 2.4: MTU or Min QUIC Packet Size?",
      "url": "https://github.com/quicwg/ops-drafts/issues/177",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "gorryfair"
      ],
      "labels": [
        "-manageability",
        "has PR"
      ],
      "body": "Sect 2.4: says:  \u201cthe network path meets minimum Maximum Transmission Unit (MTU) requirements. \u201c There is text in the QUIC transport spec that the WG perfected a little in the final stages, and I think this use of MTU in sect 2.3  is suspect. As I see it, the requirements in QUIC are for a minimum supported QUIC packet size... not the MTU required to send this on an interface. \r\n... This nuanced might be a really important detail for operations staff - where there is frequently a need to consider encapsulations and tunnels on interfaces of devices.\r\n... A cross reference to the QUIC Spec may also help here.",
      "createdAt": "2021-02-04T11:26:26Z",
      "updatedAt": "2021-02-22T13:04:26Z",
      "closedAt": "2021-02-22T13:04:26Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gorryfair can you propose text?",
          "createdAt": "2021-02-12T12:31:23Z",
          "updatedAt": "2021-02-12T12:31:23Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thought to be addressed in PR #262",
          "createdAt": "2021-02-17T14:58:02Z",
          "updatedAt": "2021-02-17T14:58:02Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #262 merged",
          "createdAt": "2021-02-22T13:04:26Z",
          "updatedAt": "2021-02-22T13:04:26Z"
        }
      ]
    },
    {
      "number": 178,
      "id": "MDU6SXNzdWU4MDEyMDA3OTA=",
      "title": "Sect 2.7: Telling middleboxes to ignore version?",
      "url": "https://github.com/quicwg/ops-drafts/issues/178",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "close without action?"
      ],
      "body": "Sect 2.7 contains a specific statement as a recommendations for middleboxes. At the moment this is buried within a section on version negotiation. The present text says:\r\n\u201cIn addition, due to the speed of evolution of the protocol, devices that attempt to distinguish QUIC traffic from non- QUIC traffic for purposes of network admission control should admit all QUIC traffic regardless of version.\u201d\r\n\r\nI think I understand the intent, and see the encouragement, but I really do not all buy this as a generic \"recommendation\". I think this topic that can be tricky for network ops people (e.g. protecting enterprise access). I've raised this a number of times in previous face-to-face IETF discussions.  There are good reasons why DDoS and other devices will have a policy that is based on a set of signatures that identify behaviours the administrators trust and for which they have appropriate management procedures.  Please can we adjust this as a motivation for allowing easy upgrade, rather than  boldly saying \u201cshould admit\u201d.\r\n\r\nIt might also be good for this change in thinking to be more highlighted, and the editors might want to call out the importance of thinking about the implications, In this respect I'd encourage this to be a separate subsection.\r\n",
      "createdAt": "2021-02-04T11:36:26Z",
      "updatedAt": "2021-04-12T14:09:13Z",
      "closedAt": "2021-04-12T14:09:13Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gorry there wasn't much discussion here yet, however when we say we might need a separate section to discussion this more differentiated, what would/should that section say? Can you maybe even propose text?",
          "createdAt": "2021-03-04T17:20:22Z",
          "updatedAt": "2021-03-04T17:20:22Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Ted said during the ietf-110 meeting in the chat: For #178, maybe it is \"Treat all QUIC traffic equally, without regard to version\"?",
          "createdAt": "2021-03-10T12:39:12Z",
          "updatedAt": "2021-03-10T12:39:12Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gorryfair  can we close this or can you propose concrete changes?",
          "createdAt": "2021-04-09T14:21:45Z",
          "updatedAt": "2021-04-09T14:26:06Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gorryfair we'll go ahead and close this; please reopen if you have a text proposal. thanks!",
          "createdAt": "2021-04-12T14:09:13Z",
          "updatedAt": "2021-04-12T14:09:13Z"
        }
      ]
    },
    {
      "number": 179,
      "id": "MDU6SXNzdWU4MDEyMDMxNzA=",
      "title": "Sect 3.7.2 : Is the spinning of bits invariant or for the current QUIC Spec?",
      "url": "https://github.com/quicwg/ops-drafts/issues/179",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability",
        "editorial",
        "has PR"
      ],
      "body": "Sect 3.7.2 : \u201cis optional in QUIC\u201d. \r\n\r\nI think it would be helpful to say more about the spin-bit definition for the current version of the specification, and a cross-reference is needed here. \r\nSimilarly, \u201cAn endpoint not participating...\u201d to me this description applies to the current specification, not an invariant of QUIC in general.\r\n",
      "createdAt": "2021-02-04T11:39:23Z",
      "updatedAt": "2021-02-22T10:35:48Z",
      "closedAt": "2021-02-22T10:35:48Z",
      "comments": []
    },
    {
      "number": 180,
      "id": "MDU6SXNzdWU4MDEyMDUzMTM=",
      "title": "Sect 3.7.2 on spinning to understand the RTT",
      "url": "https://github.com/quicwg/ops-drafts/issues/180",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability",
        "has PR"
      ],
      "body": "The text describes an example for measuring the average RTT. I like that, but I think we should call out a little that the mean RTT is only one metric. When looking at management info, I'm often interested in min/max and variance...\r\n\r\nSo: \u201cA simple linear smoothing... to get a more stable estimate\u201d. Quite so for a table average RTT. I\u2019d prefer it if we could say something about RTT variance at this point. To me it is important that RTT measurements are clear, and we should never assume in a Spec that RTT is something specific, but more generally an estimate that needs to consider the variance.\r\n",
      "createdAt": "2021-02-04T11:42:09Z",
      "updatedAt": "2021-02-22T10:10:13Z",
      "closedAt": "2021-02-22T10:10:13Z",
      "comments": []
    },
    {
      "number": 181,
      "id": "MDU6SXNzdWU4MDEyMTE0MzI=",
      "title": "Sect 4.7: Also an MF-Classifier for QoS?",
      "url": "https://github.com/quicwg/ops-drafts/issues/181",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "close without action?"
      ],
      "body": "Sect 4.7: Speaks about QoS\r\n\r\nThe section mentions QoS and DSCPs,  but one other operational point with traffic that uses any encrypted transport is that there is an often lack of detail in classifier information for on-path devices to provide a useful MF classifier for QoS. At least within some organisations, MF-Classifiers can be used to set QoS markings for traffic, which become impossible when using encryption - see sect 2.2.2 of draft-ietf-tsvwg-transport-encrypt-18.\r\n",
      "createdAt": "2021-02-04T11:50:25Z",
      "updatedAt": "2021-04-09T14:35:27Z",
      "closedAt": "2021-04-09T14:35:27Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That seems like a bit to much info for this draft. ",
          "createdAt": "2021-02-12T12:38:14Z",
          "updatedAt": "2021-02-12T12:38:14Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So my point, was to be clear this also applies to in-network classifiers. Here is something brief:\r\n\r\n/A QUIC connection limits the fields that can be observed by an MF-Classifier. Such a device needs to be configured so that any marking and conditioning is consistently performed on all packets forming the QUIC connection./\r\n\r\nAfter the sentence on endpoint marking: /Therefore it is not recommended to use different DiffServ Code Points (DSCPs).../\r\n\r\nYou could cite the ID above if you need more details.",
          "createdAt": "2021-02-16T17:20:42Z",
          "updatedAt": "2021-02-16T17:20:42Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Isn't this already covered by the first sentence of this section\r\n\r\n\"It is expected that any QoS handling in the network [...] is applied on a per flow-basis (and not per-packet) and as such that all packets belonging to the same QUIC connection get uniform treatment.\"\r\n\r\n?",
          "createdAt": "2021-02-16T20:38:18Z",
          "updatedAt": "2021-02-16T20:38:18Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't think so - we should explain both the case for the source endpoint, and the devices on-path that classify and manage the DSCP (etc) for QoS. They are different actors - MF classifiers and conditioning is often based on packet fields, or failing that heuristics about flows. ",
          "createdAt": "2021-02-17T11:27:27Z",
          "updatedAt": "2021-02-17T11:27:27Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Text on setting DSCP is the applicability statement, sec 10. This part in manageability is only about network handling.",
          "createdAt": "2021-02-17T12:52:47Z",
          "updatedAt": "2021-02-17T12:52:47Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Wait... that's a really odd split for this topic. I can see that applicability statement sect 10 says something helpful for the app - I don't argue with what that specific text says. \r\n\r\nHowever, there's a non-trivial set of other devices and functions in the network that forward based on DSCPs; set DSCPs (such as classifiers); police their usage; condition to a PHB; etc. - the \"guidance\" in section 4.7 seems to suggest \"leave this traffic alone\" - and this current guidance isn't great help to network operators who are trying to balance traffic against service classes. \r\n",
          "createdAt": "2021-02-17T13:55:16Z",
          "updatedAt": "2021-02-17T13:55:16Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, there are devices that set DSCP but I don't think there is any QUIC-specific advice we can give here. Or what other advise are you thinking of?",
          "createdAt": "2021-02-17T14:19:30Z",
          "updatedAt": "2021-02-17T14:19:30Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So my observation was that several people came to the Mic in IETF meetings and noted that deployed classifiers did not see port information or other fields that they would expect to use in classification, and as such the traffic might/would get mapped to a default service. That might have unexpected results if the network traffic becomes mainly QUIC and is something to think about. I'm not asking to \"detail-in\" on this, simply to call-out the side-effect of making the traffic harder to classify.",
          "createdAt": "2021-02-17T14:26:58Z",
          "updatedAt": "2021-02-17T14:26:58Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "But QUIC is on top of UDP which has ports...? Or which other field are we talking about?",
          "createdAt": "2021-02-17T15:10:41Z",
          "updatedAt": "2021-02-17T15:10:41Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gorryfair ?",
          "createdAt": "2021-04-09T13:54:55Z",
          "updatedAt": "2021-04-09T13:54:55Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "OK, let's close: I guess the information is elsewhere.",
          "createdAt": "2021-04-09T14:06:12Z",
          "updatedAt": "2021-04-09T14:06:12Z"
        }
      ]
    },
    {
      "number": 182,
      "id": "MDU6SXNzdWU4MDEyMTMyOTU=",
      "title": "Sect 4.6: emphatically NOT RECOMMENDED use of ACK mitigation?",
      "url": "https://github.com/quicwg/ops-drafts/issues/182",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "NONE",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "\r\nThe text says: \u201cand are emphatically NOT RECOMMENDED.\u201d I think I would agree with a strong encouragement to not do this, but I would suggest to not use upper case letters at this point, and I\u2019m not sure \u201cemphatically\u201d is a great word in a RFC :-).\r\n\r\nI\u2019d also note that the volume of ACK traffic really can be a problem that QUIC needs to address, because QUIC over radio (of various types) can be significantly more expensive or lower performant than TCP, precisely because the control/ACK traffic is much more and there is no opportunity for network mitigation - hence it behoves QUIC implementors to use appropriate methods. ",
      "createdAt": "2021-02-04T11:52:58Z",
      "updatedAt": "2021-02-15T16:25:16Z",
      "closedAt": "2021-02-15T16:25:16Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I created an PR to address the first point.\r\n\r\nRegarding the second point: @gorryfair do you want to propose additional text? However, if I think that would go the into applicability...?",
          "createdAt": "2021-02-08T13:55:31Z",
          "updatedAt": "2021-02-08T13:55:31Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "NONE",
          "body": "Suggestion for text:\r\n   On network paths where there is significant asymmetry,\r\n   the transmission of QUIC ACKs can reduce the efficient use of network \r\n   capacity or transmission opportunities.  This effect occurs\r\n   when the return capacity is significantly more constrained than the\r\n   forward capacity, or the cost of transmission per packet is a\r\n   significant component of the total transmission cost.  Reducing\r\n   the ratio of acknowledgements to data at the QUIC receiver can improve\r\n   link utilization and reduce link transmission costs.\r\n",
          "createdAt": "2021-02-12T08:38:45Z",
          "updatedAt": "2021-02-12T08:38:45Z"
        }
      ]
    },
    {
      "number": 183,
      "id": "MDU6SXNzdWU4MDEyMTYyNTU=",
      "title": "Sect 4.1 : what is the recommendation for middleboxes/NATs?",
      "url": "https://github.com/quicwg/ops-drafts/issues/183",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "martinduke"
      ],
      "labels": [
        "-manageability",
        "NAT section",
        "has PR"
      ],
      "body": "Sect 4.1 : This contains a statement on the recommendations for middleboxes and NATs, that I can\u2019t understand, and this concerns me.\r\ni.e. to me, the present text suggests that the advice in BCP 127 (aka RFC4787) should be changed for QUIC. I don\u2019t recall this being discussed - was it?\r\n\r\nI don\u2019t actually follow the rationale that says this follows from QUIC being connection-oriented. If the connection close was visible to the device, and it could release state - then this might make sense, but that isn\u2019t exactly what is explained. I\u2019m left unsure how a \u201cQUIC-aware\u201d middlebox is supposed to track this state.\r\n\r\nI'm also unsure how say a NAPT could know the traffic was QUIC, is this suggesting a port-based change. I think I need to understand this proposal.\r\n",
      "createdAt": "2021-02-04T11:56:53Z",
      "updatedAt": "2021-04-14T12:11:22Z",
      "closedAt": "2021-04-14T12:11:22Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Actually we don't change the recommendation of RFC4748 as it says\r\n\r\n\"A NAT UDP mapping timer MUST NOT expire in less than two minutes\"\r\n\r\nHowever, we cite this wrongly, which is now addressed in PR #208.\r\n\r\nThe reason for recommending longer time-outs for QUIC is because you can be sure that there is handshake and the other end did confirm its willingness to communicate. Of course having a stopping indication would be better but we don't have it.\r\n\r\nWe don't recommend a specific value, nor do we say one should use equally long timers as for TCP. However, given you know there is valid communication on-going between the two peers a longer timer (of at least a couple if minutes) would probably be useful in a lot of cases.\r\n\r\nDo we need more text here? @gorryfair do you want to propose something? Or should I?\r\n\r\nOtherwise we can also discuss this at the next meeting!",
          "createdAt": "2021-02-08T14:13:13Z",
          "updatedAt": "2021-02-08T14:13:13Z"
        }
      ]
    },
    {
      "number": 184,
      "id": "MDU6SXNzdWU4MDEyMTcwNjk=",
      "title": "Sect 4.8: Reducing the timeout on UDP NATs",
      "url": "https://github.com/quicwg/ops-drafts/issues/184",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "martinduke"
      ],
      "labels": [
        "-manageability",
        "NAT section",
        "has PR"
      ],
      "body": "Sect 4.8: Reducing the timeout on UDP NATs\r\n\r\n\u201cReducing the timeout on UDP NATs might be tempting in light of this property, but not all QUIC server deployments will be robust to rebinding.\u201d \r\n- so  now,  I did not understand what was being discouraged here. Is this somehow linked to section 4.6\u2019s discussion of holding state?\r\n\r\n(perhaps related to issue #183)",
      "createdAt": "2021-02-04T11:57:57Z",
      "updatedAt": "2021-04-14T12:11:23Z",
      "closedAt": "2021-04-14T12:11:23Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, this is connected to the advise in section 4.1 but I agree this could be clarified.\r\n\r\n@martinduke can you have a look at this?",
          "createdAt": "2021-02-08T14:01:05Z",
          "updatedAt": "2021-02-08T14:01:05Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I can certainly write up something here, but I think we should decide what the actual guidance is before I write it. The NAT UDP timeout is traditionally short; should it be (1) even shorter; (2) remain the same; or (3) become longer?\r\n\r\nA legacy NAT that is not parsing QUIC headers at all can probably leave the timeout as it is; QUIC should be pretty robust to NAT rebindings for several reasons, and we don't want to mess with existing UDP flows.\r\n\r\nMaybe my \"don't use connection ID at all\" guidance has an exception? A QUIC-aware NAT that detects QUIC via a consistent CID field could use a even shorter timeout. But ultimately we're somewhat stuck by \"QUIC is robust to NAT rebinding but sometimes it isn't.\"\r\n\r\nSo I would propose that we recommend that UDP timeouts remain the same. I could be convinced that NATs could reduce the timeout even further if they're reasonably sure the flow is QUIC.\r\n\r\nWhat do people think?\r\n",
          "createdAt": "2021-02-08T17:05:49Z",
          "updatedAt": "2021-02-08T18:53:51Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There is also text about NAT time-outs in section 4.8 (see also issue #183), recommending a longer timeout than UDP. If this recommendation is not right, please comment there.\r\n\r\nI was pinging you (@martinduke) because you wrote the sentence cited here and wanted to see if we can actually better align it with section 4.8. ",
          "createdAt": "2021-02-08T17:18:55Z",
          "updatedAt": "2021-02-08T17:18:55Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Shorter NAT timeouts hurt applications where either side can initiate communication, since once the NAT times out, only one side can initiate communication.\r\n\r\nHanging GETs are the typical example in HTTP, but I expect this could be a much larger issue in non-HTTP use cases.\r\n\r\nThe only solution is to send packets(ie: PINGs) to keep the NAT active.\r\n\r\nI think 2 minutes is reasonable.  Expecting anything longer without some explicit endpoint-to-path signaling seems overly optimistic to me, but I could be wrong.",
          "createdAt": "2021-02-08T17:42:18Z",
          "updatedAt": "2021-02-08T17:42:18Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@mirjak I agree the language is inconsistent and I am happy to write it up. I would just like clear consensus on what it should say.\r\n\r\nI'm registering @ianswett  's comment as \"keep the UDP timeout as it is\"",
          "createdAt": "2021-02-08T18:58:25Z",
          "updatedAt": "2021-02-08T18:58:25Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If you look at section 4.1., the problem is that RFC4787 says MUST NOT be less than 2 minutes but in reality it's usually only 30 or 15 seconds. So I think Ian says 2 (or more) minutes are fine but only 30 sec as often used for UDP is not. Therefore I think it's important to make the point that will with QUIC is even more reasonable to use 2 minutes or more because it's connection-oriented and you can be sure that when you see the handshake from both ends that those ends are actually trying to have a valid communication.\r\n\r\nPlease note that I also have created PR #208 to align the language correctly to RFC4787 in section 4.1.. So if you want to change something in section 4.1. please use #208 as starting point.\r\n\r\n",
          "createdAt": "2021-02-08T20:19:12Z",
          "updatedAt": "2021-02-08T20:19:12Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree with @mirjak point that for QUIC it's even more reasonable to actually use at least 2 minutes because it's connection-oriented.\r\n\r\nI don't have any evidence the timeout is commonly under 30 seconds, but it is commonly less than 2 minutes.\r\n\r\nWe have seen extremely short timeouts, and it's believed these are NATs that are running close to saturation so the idle timeout shrinks very low.  But it's hard to know for sure.",
          "createdAt": "2021-02-08T20:29:11Z",
          "updatedAt": "2021-02-08T20:29:11Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "OK so the message here is, \"yes QUIC is 'robust' to NAT rebinding but still don't reduce the timeout.\"\r\n\r\nThis might be sound advice, but it seems like a bit of waste given our effort surrounding NAT rebinding. I have to think about this some more, but I suppose whatever value we recommend here turns into an effective bound on the QUIC idle timeout in real deployments.\r\n\r\nI'll just wait till #208 lands to make changes.",
          "createdAt": "2021-02-08T21:22:55Z",
          "updatedAt": "2021-02-08T21:22:55Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It would seem OK to motivate suggesting an increase in the NAT timeout, but saying this is  \"because it's connection-oriented\" ... isn't really enough. Other UDP protocols can also be connection oriented and they might also have observable closing packets - to release the NAT state under normal usage. I think the rationale just needs a little explanation, perhaps in terms of the benefits to QUIC of a larger NAT timeout.",
          "createdAt": "2021-02-12T08:55:03Z",
          "updatedAt": "2021-02-12T08:55:03Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am happy to take this issue but am glad that @bitram put this on the agenda to discuss. I guess I'll wait till after 110 to write a PR?",
          "createdAt": "2021-02-12T16:34:24Z",
          "updatedAt": "2021-02-12T16:34:24Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "no, if you can propose some concrete text that would be helpful for the meeting. It's only that we won't merge before the meeting.",
          "createdAt": "2021-02-12T16:35:53Z",
          "updatedAt": "2021-02-12T16:35:53Z"
        },
        {
          "author": "mdukef5",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am not sure about @ianswett 's concerns about one endpoint being blocked from restarting the connection. Having throught it through more, I'll make these assertions:\r\n\r\n1. There is a tension between the most endpoint-friendly choice (infinite timeouts!) and what implementers are actually willing to do. A ridiculous requirement is likely to be ignored, so being as generous as possible, given QUIC's salutary features, would be wise.\r\n2. Given how hard we've made it for intermediaries, it would be good internet citizenship to give them something that makes their lives easier if it doesn't compromise performance or privacy.\r\n3. We really do need to make sure that (UDP timeout > 3 * PTO) for all plausible PTO values, as this is the minimum idle timeout.\r\n4. @ianswett's problem is arguably solved by judicious use of the idle timeout. If we set a reasonably low recommended idle-timeout for clients and servers (which can be different!), and put the recommended UDP timeout above that value, a few things happen:\r\n(a) the server can discard state relatively quickly\r\n(b) if the server can't handle NAT rebinding, it can set an aggressive idle-timeout\r\n(c) in general, it's the client that will try to keep connections alive\r\n(d) the client will be aware of the minimum of the two timeouts -- if they want the connection to survive, they will send PINGs when necessary according to 10.1 of quic-transport.\r\n(e) IIUC, both client-side and server-side NAT/Firewalls will accept \"new\" connections if initiated by the client.\r\n\r\nSo I'm recommending the following:\r\n1. The \"intermediary UDP timeout\" should be the smallest possible value that is always > 3*PTO. Someone tell me what the number is! 10 seconds?\r\n2. Clients should set an idle-timeout value that is a bit less than the recommended intermediary UDP timeout unless they are sure they aren't behind a NAT.\r\n3. Servers should set an idle-timeout according to the following principles:\r\n(a) if known to not be robust to rebinding (i.e load balanced without QUIC-LB), just below the intermediary UDP timeout. This is true whether the server knows if it is behind a NAT or not\r\n(b) otherwise, use any value you want\r\n\r\nThoughts? If people agree with this logic, I'll revise the PR or write another one.",
          "createdAt": "2021-02-12T17:37:09Z",
          "updatedAt": "2021-02-12T17:37:09Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I disagree with your suggestion of recommending a NAT timeout smaller than 2 minutes.\r\n\r\nI'd prefer something along the lines of @mirjak previous suggestion of really try to use 2 minutes and we can add text about how clients will have to use PINGs if the timeout is too short, if that's helpful.\r\n\r\n5 minute long hanging GETs are a common thing today, and WebTransport may make the case where either side initiates communication more common.\r\n\r\n> I am not sure about @ianswett 's concerns about one endpoint being blocked from restarting the connection. Having throught it through more, I'll make these assertions:\r\n> \r\n> 1. There is a tension between the most endpoint-friendly choice (infinite timeouts!) and what implementers are actually willing to do. A ridiculous requirement is likely to be ignored, so being as generous as possible, given QUIC's salutary features, would be wise.\r\n> 2. Given how hard we've made it for intermediaries, it would be good internet citizenship to give them something that makes their lives easier if it doesn't compromise performance or privacy.\r\n\r\nLonger timeouts aren't hard, they just require state.  Special cases for QUIC are more difficult.\r\n\r\n> 3. We really do need to make sure that (UDP timeout > 3 * PTO) for all plausible PTO values, as this is the minimum idle timeout.\r\n> 4. @ianswett's problem is arguably solved by judicious use of the idle timeout. If we set a reasonably low recommended idle-timeout for clients and servers (which can be different!), and put the recommended UDP timeout above that value, a few things happen:\r\n>    (a) the server can discard state relatively quickly\r\n\r\nThis is not always good for either application performance or CPU(ie: more handshakes).\r\n\r\n>    (b) if the server can't handle NAT rebinding, it can set an aggressive idle-timeout\r\n\r\nAgreed, but that's not my concern as much as the server's inability to contact the client.\r\n\r\n>    (c) in general, it's the client that will try to keep connections alive\r\n>    (d) the client will be aware of the minimum of the two timeouts -- if they want the connection to survive, they will send PINGs when necessary according to 10.1 of quic-transport.\r\n\r\nThe client doesn't know what the NAT timeout is, which seems like the important thing here.\r\n\r\n>    (e) IIUC, both client-side and server-side NAT/Firewalls will accept \"new\" connections if initiated by the client.\r\n\r\nI'm not sure what you mean by server-side NAT/Firewalls?\r\n\r\n> \r\n> So I'm recommending the following:\r\n> \r\n> 1. The \"intermediary UDP timeout\" should be the smallest possible value that is always > 3*PTO. Someone tell me what the number is! 10 seconds?\r\n\r\nThere's no max to PTO, so 3*PTO is technically an infinite value.  But if you're assuming typical RTTs on the existing internet with a max in the seconds, it's ~9 * RTT.  2g has an RTT in the 2 second range, so if we assume RTTs above 4 seconds are uncommon, then you'd be recommending 36 seconds.\r\n\r\n> 2. Clients should set an idle-timeout value that is a bit less than the recommended intermediary UDP timeout unless they are sure they aren't behind a NAT.\r\n> 3. Servers should set an idle-timeout according to the following principles:\r\n>    (a) if known to not be robust to rebinding (i.e load balanced without QUIC-LB), just below the intermediary UDP timeout. This is true whether the server knows if it is behind a NAT or not\r\n>    (b) otherwise, use any value you want\r\n> \r\n> Thoughts? If people agree with this logic, I'll revise the PR or write another one.",
          "createdAt": "2021-02-12T18:01:20Z",
          "updatedAt": "2021-02-12T18:01:20Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > 2. Given how hard we've made it for intermediaries, it would be good internet citizenship to give them something that makes their lives easier if it doesn't compromise performance or privacy.\r\n> \r\n> Longer timeouts aren't hard, they just require state. Special cases for QUIC are more difficult.\r\n\r\nSure, my language was imprecise.\r\n\r\n> The client doesn't know what the NAT timeout is, which seems like the important thing here.\r\n\r\nThe model here is that we propose a standard NAT timeout that they can live with it, and clients can set idle-timeouts based on the assumption that NATs are following it.\r\n\r\n> > (e) IIUC, both client-side and server-side NAT/Firewalls will accept \"new\" connections if initiated by the client.\r\n> \r\n> I'm not sure what you mean by server-side NAT/Firewalls?\r\n\r\nI'm referring to things devices in the server infrastructure that rewrite the source address and port on inbound packets to make sure all outbound packets are routed correctly.\r\n\r\n> There's no max to PTO, so 3*PTO is technically an infinite value. But if you're assuming typical RTTs on the existing internet with a max in the seconds, it's ~9 * RTT. 2g has an RTT in the 2 second range, so if we assume RTTs above 4 seconds are uncommon, then you'd be recommending 36 seconds.\r\n\r\nI understand. Although I'm not going to insist on this, a standard on the order of 30-45 seconds would meet the objective quite well.\r\n\r\n",
          "createdAt": "2021-02-16T18:13:54Z",
          "updatedAt": "2021-02-16T18:13:54Z"
        }
      ]
    },
    {
      "number": 185,
      "id": "MDU6SXNzdWU4MDEyMTkzNDc=",
      "title": "This issue contains a set of editorial NiTs from QUIC Manageability-09",
      "url": "https://github.com/quicwg/ops-drafts/issues/185",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability",
        "editorial",
        "has PR"
      ],
      "body": "This section contains a series, of assumed editorial comments. (The issue is copied from the QUIC WG list).\r\n\u201cEven thought this bit is fixed in the QUICv1 specification,\u201d\r\n-  This seems like the wrong word: /thought/though/\r\n---\r\n\u201cobservers cannot reliably use\u201c\r\n-Maybe we could avoid \u201creliably\u201d, e.g.:\r\n /cannot depend on this bit as/...\r\n---\r\n\u201cfirst octet in the short packet header.\u201d\r\nwould probably benefit from an indication of bit ordering and cross-reference to the QUIC spec.\r\n---\r\nSect 2.4: \u201cIn the nominal case\u201d - this use of \u201cnominal\u201d was unusual to me, the word is used differently in different English-speaking regions - in some it might mean \u201cmarginal\u201d or only correct at the current time - in other regions it might mean something else. Is \u201cnormal\u201d acceptable in this sentence?\r\n---\r\nSection 2.3: \u201cWe therefore consider\u201d - who is the \u201cwe\u201d, suggest something like \u201cThese are considered...\u201d\r\n---\r\n\u201cin the clear\u201d - would be simpler as \u201cwithout encryption\u201d or \u201cobservable on-path\u201d?\r\n---\r\nThe term \u201cexposes\u201d is used several times, without saying to whom, which I think in the context of this document, could be clearer as \u201cexposes this, making it visible to an on-path observer\u201d. Also this form of wording is consistent with sect 2.7. This also could help explain this in a more positive light to someone wishing to manage a network.\r\n---\r\nSect 2.4: \u201cThe amount of 0-RTT protected data is limited by the initial congestion window, typically around 10 packets [RFC6928].\u201d\r\n- I suggest this should instead be reference to a section in the QUIC spec. (This does in turn point to 6928, but I think the dependency here is on what QUIC says.)\r\n---\r\nSect 2.8\u201d: ...\u201dany manipulation of ... will be detected\u201d\r\nI think the word \u201cmanipulation\u201d hints like it is illicit, can we use neutral language by saying something like \u201cany change by network devices on-path\u201d?\r\n---\r\nSect 3.1: \u201cFirst, it only provides one bit of information and is quite prone to collide with UDP-based protocols other than those that this static bit is meant to allow multiplexing with.\u201c\r\nThis seems to lack a little polish (\u201cquite prone\u201d, \u201cmeant to ...with\u201d).\r\n---\r\nSect 3.3.1.\r\n/through passive measurement/by observation by an on-path observer/\r\n... I think this applies, whether it is measurement, filtering, whatever, so we could use the same term.\r\n---\r\n/which each one byte of zeros/ ... seems an odd set of words to me.\r\n---\r\nSection 4.1: \u201cKeying state off the connection ID may therefore cause undetectable and unrecoverable loss of state in the middle of a connection.  Use of connection ID specifically discouraged for NAT applications.\u201d\r\n... I didn\u2019t find /Keying state/ very helpful... maybe some other words would be clearer. The second sentence seems to miss /is/?\r\n---\r\nSect 4.6: \u201c Distinguishing ACK packets is trivial in TCP,\u201c\r\n- well, this is not really trivial, because there are pure ACKs and data+ACK which makes this complicated. RFC3449 says more.\r\n---",
      "createdAt": "2021-02-04T12:00:57Z",
      "updatedAt": "2021-02-22T10:13:03Z",
      "closedAt": "2021-02-22T10:13:03Z",
      "comments": [
        {
          "author": "larseggert",
          "authorAssociation": "MEMBER",
          "body": "@gorryfair thank you **very** much for opening individual issues! Just checking that this issue here is supposed to be a meta-issue to track the individual other ones you opened?",
          "createdAt": "2021-02-04T12:16:21Z",
          "updatedAt": "2021-02-04T12:16:21Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This one is a bunch of editorial NiTs. The editors might like to scan these and check if these are purely text comments they can correct. If there are specifics they wish to pull-out as issues as more than simple text changes, I'd expect this to be closed and they can make separate issues for those that require discussion.",
          "createdAt": "2021-02-04T13:02:27Z",
          "updatedAt": "2021-02-04T13:02:27Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "All suggestions except the following accepted without comment; many thanks for the detailed review!\r\n\r\n- I'm going to consider _The term \u201cexposes\u201d is used several times, without saying to whom_  as a stylistic suggestion, and decline to address. I don't think there's a better way to say this without making the flow much more awkward. Please reopen this issue after closure if you disagree strongly.\r\n",
          "createdAt": "2021-02-12T18:29:41Z",
          "updatedAt": "2021-02-12T18:29:41Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks Brian \n\n> On 12 Feb 2021, at 18:29, Brian Trammell <notifications@github.com> wrote:\n> \n> \ufeff\n> All suggestions except the following accepted without comment; many thanks for the detailed review!\n> \n> I'm going to consider The term \u201cexposes\u201d is used several times, without saying to whom as a stylistic suggestion, and decline to address. I don't think there's a better way to say this without making the flow much more awkward. Please reopen this issue after closure if you disagree strongly.\n> \u2014\n> \n\nI am quite willing to read it this way, this issue should be closed,\n\nGorry\n\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n",
          "createdAt": "2021-02-12T18:37:35Z",
          "updatedAt": "2021-02-12T18:37:35Z"
        }
      ]
    },
    {
      "number": 186,
      "id": "MDU6SXNzdWU4MDE1NDIxNjQ=",
      "title": "applicability: ID Nits: unused reference",
      "url": "https://github.com/quicwg/ops-drafts/issues/186",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "NONE",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability",
        "editorial",
        "has PR"
      ],
      "body": "Unused Reference: 'I-D.nottingham-httpbis-retry' is defined on line 861, but no explicit reference was found in the text.",
      "createdAt": "2021-02-04T18:42:27Z",
      "updatedAt": "2021-02-22T10:07:21Z",
      "closedAt": "2021-02-22T10:07:21Z",
      "comments": []
    },
    {
      "number": 187,
      "id": "MDU6SXNzdWU4MDE1NDI4NDc=",
      "title": "applicability: ID Nits: duplicate reference",
      "url": "https://github.com/quicwg/ops-drafts/issues/187",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "NONE",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability",
        "editorial",
        "has PR"
      ],
      "body": "Duplicate reference: RFC7301, mentioned in 'RFC7301', was also mentioned in 'ALPN'.",
      "createdAt": "2021-02-04T18:43:33Z",
      "updatedAt": "2021-02-22T10:07:21Z",
      "closedAt": "2021-02-22T10:07:21Z",
      "comments": []
    },
    {
      "number": 188,
      "id": "MDU6SXNzdWU4MDE1NDQ0OTg=",
      "title": "applicability: ID Nits: 2119 Terminology",
      "url": "https://github.com/quicwg/ops-drafts/issues/188",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "NONE",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability",
        "editor-ready",
        "editorial"
      ],
      "body": "There are two paragraphs that include 2119-language:\r\n\r\n    RFC 2119 keyword, line 146: '...   case it is RECOMMENDED to abort the...'\r\n    RFC 2119 keyword, line 491: '...e application is RECOMMENDED.  For exa...'\r\nShould these be made lowercase or is a 2119 paragraph needed?",
      "createdAt": "2021-02-04T18:46:10Z",
      "updatedAt": "2021-02-12T20:08:53Z",
      "closedAt": "2021-02-12T20:08:53Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I thought we changed everything to lower case. I will check those.",
          "createdAt": "2021-02-05T10:40:36Z",
          "updatedAt": "2021-02-05T10:40:36Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Apparently already fixed by other committed PRs.",
          "createdAt": "2021-02-12T20:08:52Z",
          "updatedAt": "2021-02-12T20:08:52Z"
        }
      ]
    },
    {
      "number": 189,
      "id": "MDU6SXNzdWU4MDE1NTA1OTk=",
      "title": "manageability: ID Nits: 2119 Terminology",
      "url": "https://github.com/quicwg/ops-drafts/issues/189",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "NONE",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability",
        "editorial",
        "has PR"
      ],
      "body": "There are two paragraphs that include 2119-language:\r\n\r\n     RFC 2119 keyword, line 578: '...   RECOMMENDED.  First, it only provid...'\r\n     RFC 2119 keyword, line 969: '...   NOT RECOMMENDED....'\r\nShould these be made lowercase or is a 2119 paragraph needed?",
      "createdAt": "2021-02-04T18:55:42Z",
      "updatedAt": "2021-02-22T10:19:38Z",
      "closedAt": "2021-02-22T10:19:38Z",
      "comments": []
    },
    {
      "number": 190,
      "id": "MDU6SXNzdWU4MDE1NTEwNzE=",
      "title": "manageability: ID Nits: duplicate reference",
      "url": "https://github.com/quicwg/ops-drafts/issues/190",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "NONE",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability",
        "editorial",
        "has PR"
      ],
      "body": "Duplicate reference: draft-ietf-quic-applicability, mentioned in 'QUIC-APPLICABILITY', was also mentioned in 'I-D.ietf-quic-applicability'.",
      "createdAt": "2021-02-04T18:56:23Z",
      "updatedAt": "2021-02-22T10:19:38Z",
      "closedAt": "2021-02-22T10:19:38Z",
      "comments": []
    },
    {
      "number": 191,
      "id": "MDU6SXNzdWU4MDE1NTIyMjY=",
      "title": "manageability: ID Nits: unused references",
      "url": "https://github.com/quicwg/ops-drafts/issues/191",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "NONE",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability",
        "editorial",
        "has PR"
      ],
      "body": "Unused Reference: 'Ding2015' is defined on line 1272, but no explicit reference was found in the text\r\n\r\nUnused Reference: 'IPIM' is defined on line 1293, but no explicit reference was found in the text",
      "createdAt": "2021-02-04T18:58:18Z",
      "updatedAt": "2021-02-22T10:19:38Z",
      "closedAt": "2021-02-22T10:19:38Z",
      "comments": []
    },
    {
      "number": 192,
      "id": "MDU6SXNzdWU4MDI2ODU3Nzc=",
      "title": "App: End of Sect 2: RFC2119 Keyword?",
      "url": "https://github.com/quicwg/ops-drafts/issues/192",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "I think the following sentence has issues:\r\n\u201cIn case it is RECOMMENDED to abort the connection, allowing the application to present a suitable prompt to the user that secure communication is unavailable.\u201d\r\n- I\u2019m not sure I understand \u201cIn case\u201d\r\n- I\u2019m not sure this should be upper case RFC2119, unless we decide to also make normative recommendations in other places.\r\n- \u201callowing\u201d..\u201dunavailable\u201d makes this award to read.\r\n",
      "createdAt": "2021-02-06T12:00:13Z",
      "updatedAt": "2021-02-12T12:17:26Z",
      "closedAt": "2021-02-12T12:17:26Z",
      "comments": [
        {
          "author": "seanturner",
          "authorAssociation": "NONE",
          "body": "2119 issue also noted in #188.",
          "createdAt": "2021-02-06T20:05:24Z",
          "updatedAt": "2021-02-06T20:05:24Z"
        }
      ]
    },
    {
      "number": 193,
      "id": "MDU6SXNzdWU4MDI2ODYxMDY=",
      "title": "App: Sect 4.3. Flow Control - we should have a subsection also encouraging timely credits",
      "url": "https://github.com/quicwg/ops-drafts/issues/193",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "LPardue"
      ],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "Issue: Sect 4.3. Flow Control - we should have a subsection also encouraging timely credits\r\n\r\nThis ID discusses flow control deadlock, whichI think  is important. I suggest we should also note that timely release of flow control credit is also important (QUIC transport has some text to point to). This need is evident when the path has a large RTT, and there can be a large BDP, where the whole of operation of QUIC can be dominated by the way in which the application manages the flow credit. This might not be obvious, because the equivalent rwnd update in TCP is handled by the transport rather than the application.\r\n",
      "createdAt": "2021-02-06T12:01:25Z",
      "updatedAt": "2021-04-12T12:41:01Z",
      "closedAt": "2021-04-12T12:41:01Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The point is the audience for this draft is applications that use a quic library. I would assume that the actual credit handling is performed in the transport/in quic directly, usually without an interface for the application to directly impact it.\r\n\r\nDo you propose the application should have more direct impact on flow credit handling?\r\n\r\nI guess we can add a pointer to the right section in the transport draft but not sure we should/can say more here...?",
          "createdAt": "2021-02-08T14:27:12Z",
          "updatedAt": "2021-02-08T14:27:12Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree this seems mostly like a QUIC transport/library issue and I wouldn't expect the application to have much control here.\r\n\r\nI can imagine applications setting a max value?",
          "createdAt": "2021-02-08T15:16:28Z",
          "updatedAt": "2021-02-08T15:16:28Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "I generally agree with Mirja and Ian. However, on a closer inspection of this section I think it would benefit from a crisper definition of what it means to read data vs. process data. Its a reasonable application mapping implementation design to read data out of the transport in order to release flow control but still buffer it (or just dropping it on the floor) in application space before processing that as application data. ",
          "createdAt": "2021-02-11T10:46:53Z",
          "updatedAt": "2021-02-11T10:46:53Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@LPardue  can you propose text?",
          "createdAt": "2021-02-12T12:41:43Z",
          "updatedAt": "2021-02-12T12:41:43Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm content that flow control is something the libraries need to get correct - the TCP people spent energy to get this automated, although QUIC's multi-streaming makes the trickier. \r\n\r\nLucas text suggestion would improve things by making it clearer how the API is intended to be used.",
          "createdAt": "2021-02-16T17:47:08Z",
          "updatedAt": "2021-02-16T17:47:08Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@LPardue ?",
          "createdAt": "2021-02-16T20:50:32Z",
          "updatedAt": "2021-02-16T20:50:32Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "I will add some text (just need to find the time).",
          "createdAt": "2021-02-26T15:35:07Z",
          "updatedAt": "2021-02-26T15:35:07Z"
        }
      ]
    },
    {
      "number": 194,
      "id": "MDU6SXNzdWU4MDI2ODY0Mjk=",
      "title": "Padding explanation needs to mention DPLPMTUD",
      "url": "https://github.com/quicwg/ops-drafts/issues/194",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "-manageability"
      ],
      "body": "\u201cPadding is used by QUIC to ensure\u201d - please add a sentence that DPLPMTUD is another reason why you might expect QUIC Padding of specific packets after connection establishment, and refer to section in QUIC transport - or people may have a surprise when they suddenly see big probe packets in their logs:-)\r\n",
      "createdAt": "2021-02-06T12:02:57Z",
      "updatedAt": "2021-02-22T10:51:41Z",
      "closedAt": "2021-02-22T10:51:41Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I thought that this is what the sentence is about? The whole sentence says:\r\n\r\n\"Padding is used by QUIC to ensure that the path is capable of transferring datagrams of at least a certain size, ...\"\r\n\r\nWe can add a reference to the right section in the transport draft but sure we need another sentence?\r\n\r\nHowever, your point about being surprised to see big packets probably rather belongs into manageability...?",
          "createdAt": "2021-02-08T16:11:54Z",
          "updatedAt": "2021-02-08T16:11:54Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Ah sorry: I was trying to highlight that there are two places where I think QUIC might be expected to use padding... in the initial connection ... to verify the path supports the minimum size, and later whenever DPLPMTUD is invoked, to probe to check for a larger size. Two section refs would likely be useful.\r\n\r\n... Yes, it could be mentioned in manageability - since often QUIC packets might be rather uniform in size with occasional DLPMTUD probes?",
          "createdAt": "2021-02-08T16:18:25Z",
          "updatedAt": "2021-02-08T16:18:25Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I created a PR to add references to the respective sections in the QUIC transport draft. Explaining in detail what padding is used for internally in QUIC wasn't really the point here. However, it's probably correct that the sentence should not just omit one usage (PLDMTUD) and reference probably don't hurt.\r\n\r\nDo we need still something for manageability? Or is that, at least partially, already addressed by #212 ?",
          "createdAt": "2021-02-16T11:25:52Z",
          "updatedAt": "2021-02-16T11:25:52Z"
        }
      ]
    },
    {
      "number": 195,
      "id": "MDU6SXNzdWU4MDI2ODY1ODc=",
      "title": "App: Port Usage uses RFC2119 word?",
      "url": "https://github.com/quicwg/ops-drafts/issues/195",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "Issue: \u201cand use of the UDP port number corresponding to the TCP port already registered for the application is RECOMMENDED\u201d.\r\nI agree with the intent, but here an RFC2119 keyword is used, but is this intended, and can this please cite the RFC that says this rather than just stating this.\r\n",
      "createdAt": "2021-02-06T12:03:45Z",
      "updatedAt": "2021-02-12T12:17:15Z",
      "closedAt": "2021-02-12T12:17:15Z",
      "comments": [
        {
          "author": "seanturner",
          "authorAssociation": "NONE",
          "body": "Similarly noted in #188",
          "createdAt": "2021-02-06T20:04:10Z",
          "updatedAt": "2021-02-06T20:04:10Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #211 removes normative language and says \"usually ... appropriate\" instead. Is that okay? Or should the wording be stronger?",
          "createdAt": "2021-02-08T16:17:03Z",
          "updatedAt": "2021-02-08T16:17:03Z"
        }
      ]
    },
    {
      "number": 196,
      "id": "MDU6SXNzdWU4MDI2ODY3NTM=",
      "title": "App: ... interference by network elements such as firewalls",
      "url": "https://github.com/quicwg/ops-drafts/issues/196",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "The ID said: \u201cblocking or other interference by network elements such as firewalls\u201d\r\n- I think this language could be seen as having a little attitude that could be avoided. I suggest replacing \u201cinterference\u201d, and instead say that this can change the forwarding policy. This also extends it to include action from QoS policies and service level agreements.\r\n\u201cby network elements such as firewalls that rely on the port number for application identification.\u201d\r\n- I\u2019d prefer \u201cuse\u201d to \u201crely\u201d \u2026 because they might well use other heuristics in future if they do prove more useful to classify sessions/packets.\r\n",
      "createdAt": "2021-02-06T12:04:43Z",
      "updatedAt": "2021-02-12T12:21:48Z",
      "closedAt": "2021-02-12T12:21:48Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is the wording in #213 better/good?",
          "createdAt": "2021-02-08T16:22:38Z",
          "updatedAt": "2021-02-08T16:22:38Z"
        }
      ]
    },
    {
      "number": 197,
      "id": "MDU6SXNzdWU4MDI2ODcwMTI=",
      "title": "App: What does \"prime a CC\" mean?",
      "url": "https://github.com/quicwg/ops-drafts/issues/197",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "meeting-agenda"
      ],
      "body": "The text says: \u201cor prime the congestion controller in preparation for switching to the new path.\u201d \r\n- what does prime mean?\r\n-  and which section explains this function  in the QUIC spec?\r\n",
      "createdAt": "2021-02-06T12:06:05Z",
      "updatedAt": "2021-03-17T17:29:41Z",
      "closedAt": "2021-03-17T17:29:40Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The idea here is that you can already e.g. estimate RTT or even open the congestion window before you switch. There was already some discussion previously (seePR #122) if we want to have this in the document or say more or less. Maybe a question to the rest of the wg (in the next meeting)...?",
          "createdAt": "2021-02-08T16:31:19Z",
          "updatedAt": "2021-02-08T16:31:19Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Unsure about this in this ID: Isn't that suggesting a transport extension/mechanism update... rather than the applicable use?",
          "createdAt": "2021-02-08T16:37:49Z",
          "updatedAt": "2021-02-08T16:37:49Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't think it needs an extension. It can simply be done by the client. It's definitely not appropriate to specify a concrete algorithm in this document but it's just listed as one of the things that padding can be used during mitigation.",
          "createdAt": "2021-02-08T17:11:13Z",
          "updatedAt": "2021-02-08T17:11:13Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm really unsure about why text about priming is here and where the advice is located. I don't dispute that it can be done, or even that if done appropriately it can help, however it could also be done in a way that might also hinder. If PR 122 removes this word, then this topic can be discussed elsewhere in RFCs.",
          "createdAt": "2021-02-16T10:56:19Z",
          "updatedAt": "2021-02-16T10:56:19Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gorryfair PR #122 was already merged a long time ago. I was just point at it to say that there has been previous discussion. As the label indicates, we plan to bring the for discussion to the meeting.",
          "createdAt": "2021-02-16T11:27:50Z",
          "updatedAt": "2021-02-16T11:27:50Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "CC priming seems like an issue entirely internal to the QUIC implementation. Why should applications know or care about it?\r\n\r\nI suggest we simply delete this.",
          "createdAt": "2021-03-10T12:20:36Z",
          "updatedAt": "2021-03-10T12:20:36Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "I like @martinduke's suggestion.",
          "createdAt": "2021-03-10T14:31:12Z",
          "updatedAt": "2021-03-10T14:31:12Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "#291 is my proposal. It doesn't talk about priming/pre-heating anymore but it says what's possible and why this could be interesting for an application.",
          "createdAt": "2021-03-10T14:58:21Z",
          "updatedAt": "2021-03-10T14:58:42Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #291 was merged.",
          "createdAt": "2021-03-17T17:29:40Z",
          "updatedAt": "2021-03-17T17:29:40Z"
        }
      ]
    },
    {
      "number": 198,
      "id": "MDU6SXNzdWU4MDI2ODcyMDU=",
      "title": "App: Ref: Should the text ion DSCP also cite RFC7657?",
      "url": "https://github.com/quicwg/ops-drafts/issues/198",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "Section 10: DSCP.\r\n\r\nThe advice and some use cases seem similar to that described in RFC7657. I suggest this is cited here.\r\n",
      "createdAt": "2021-02-06T12:07:09Z",
      "updatedAt": "2021-02-12T12:43:18Z",
      "closedAt": "2021-02-12T12:43:18Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Not sure. RFC7657 is very specific to RTP traffic...",
          "createdAt": "2021-02-08T16:34:12Z",
          "updatedAt": "2021-02-08T16:34:12Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "NONE",
          "body": "OK.",
          "createdAt": "2021-02-08T16:39:22Z",
          "updatedAt": "2021-02-08T16:39:22Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "NONE",
          "body": "So sorry - my memory failed - I meant: RFC 8837, specifically as a reference to the advice therein which explains:  \"if multiple flows\r\n   are multiplexed using a reliable transport (e.g., TCP), then all of\r\n   the packets for all flows multiplexed over that transport-layer flow\r\n   MUST be marked using the same DSCP value.\"",
          "createdAt": "2021-02-08T18:07:55Z",
          "updatedAt": "2021-02-08T18:07:55Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This sentence in RFC 8837 refers to rfc7657 section 6 which basically has the same advise (\"Should use a single DSCP for all packets within a reliable transport protocol session\"). We give the same recommendation here but not sure we need RFC8837 or RFC7657 to back this up. Also with QUIC, multiplexing is done in the QUIC layer which make it even harder for he application to try and apply different code points. I still think both rfc8837 and rfc7657 are quite RTC specific.",
          "createdAt": "2021-02-08T18:20:04Z",
          "updatedAt": "2021-02-08T18:20:04Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "NONE",
          "body": "So... if you looked at this and think references to the use of DSCPs are sufficient guidance, this issue can be closed.",
          "createdAt": "2021-02-09T08:54:16Z",
          "updatedAt": "2021-02-09T08:54:16Z"
        }
      ]
    },
    {
      "number": 199,
      "id": "MDU6SXNzdWU4MDI2ODc2OTk=",
      "title": "App: Section 12 on Versioning ",
      "url": "https://github.com/quicwg/ops-drafts/issues/199",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "meeting-agenda"
      ],
      "body": "\r\n- I don\u2019t have comments on the validity of the discussion text in section 12 and  the described procedures, but I do wonder why this is information for an application designer, rather than for managing operations. Is this the correct ID for this information? and if its is, could it be explained a little more to what the app designer needs too know.\r\n- This section seems rather devoid of useful references. please add some.\r\n",
      "createdAt": "2021-02-06T12:09:19Z",
      "updatedAt": "2021-02-22T11:07:24Z",
      "closedAt": "2021-02-22T11:07:24Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The split here was see as applicability is addressed at people who want to use QUIC (application designer but also people deploying QUIC at servers) and manageability for people who have to handle QUIC traffic (mainly network operator incl probably data centre operators). I know the split between the two last categories (deploying servers and managing a dc networks) is not always that clear. It's probably this section and the one about load balancing in manageability. I'm open to discuss where which section belongs. Do we need to bring this to the meeting?\r\n\r\n@gorryfair what kind of reference are you thinking of?",
          "createdAt": "2021-02-16T11:34:44Z",
          "updatedAt": "2021-02-16T20:39:09Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "* On what to do in Manageability: I'd suggest we write some text that says: \r\n\"QUIC provides a version negotiation process, that allows new versions to be introduced. The deployment of new versions is discussed in section 12 of [ID. ietf-quic-applicability].\"\r\nMaybe even just as the first para of Manageability: Sect: 2.8.\r\n* I meant add reference to section 6 in QUIC Transport - to both these documents",
          "createdAt": "2021-02-16T17:33:22Z",
          "updatedAt": "2021-02-16T17:33:22Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There is already section 2.8 on \"Version Negotiation and Greasing\" and section 3.1.1. on \"Identifying Negotiated Version\" in the manageability draft. Ideally the idea is to not have cross reference between manageability and applicability.\r\n\r\nI added a reference to section 6 of the quic-transport draft in manageability (see PR #260). Not sure we need that reference also in the applicability draft because that section actually doesn't require any knowledge of the internals on how version negotiation works...",
          "createdAt": "2021-02-16T20:49:28Z",
          "updatedAt": "2021-02-16T20:49:28Z"
        }
      ]
    },
    {
      "number": 200,
      "id": "MDU6SXNzdWU4MDI2ODc5OTU=",
      "title": "App: Use (and do not need to use) of ICMP",
      "url": "https://github.com/quicwg/ops-drafts/issues/200",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "has PR",
        "meeting-agenda"
      ],
      "body": "Should this ID have some mention of ICMP, because support for ICMP with UDP is a known issue for many stacks, and QUIC seems to have thought this through and we can pass that on.\r\n- So, I think some mention of the use of ICMP would be helpful - at least to refer to the appropriate sections in the QUIC transport spect\r\n",
      "createdAt": "2021-02-06T12:11:11Z",
      "updatedAt": "2021-03-17T17:31:07Z",
      "closedAt": "2021-03-17T17:31:07Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would think this would be handled by the QUIC implementation transparently and therefore it's not in the applicability statement that is directed at application designers who rather use an existing QUIC library. Or what exactly is the advise you would like to see here?",
          "createdAt": "2021-02-12T12:47:47Z",
          "updatedAt": "2021-02-12T12:47:47Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Actually, I was suggesting somewhere just to say something about ICMP because some endpoints didn't traditionally pass ICMP to UDP - this could be manageability rather than applicability?:\r\n\r\n\"QUIC stacks can be designed to receive and safely utilise received ICMP messages when these are provided by the endpoint (e.g to assist PMTUD), but do not rely upon them to function.\"  ",
          "createdAt": "2021-02-12T13:28:56Z",
          "updatedAt": "2021-02-12T13:28:56Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Okay, let me think we anything like this belongs. I believe, as you say, manageability might make more sense.",
          "createdAt": "2021-02-12T15:58:08Z",
          "updatedAt": "2021-02-12T15:58:08Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We merged the PR as it seems uncontroversial but I leave the issue open for now, so we don't forget to mention this new section in the meeting.",
          "createdAt": "2021-02-22T13:07:19Z",
          "updatedAt": "2021-02-22T13:07:19Z"
        }
      ]
    },
    {
      "number": 201,
      "id": "MDU6SXNzdWU4MDI2ODk2MjM=",
      "title": "App: Sec 14: Security Considerations reference to transport BCP?",
      "url": "https://github.com/quicwg/ops-drafts/issues/201",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "NONE",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "The Security Considerations of many transport RFCs have a reference to transport behaviour on (infrastructure implications) - such as a simple cite to the security considerations of RFC8085.... on transport aspects of using a UDP-based transport.\r\n\r\n- This section could also refer to any text for the resolution  Issue #200 - i.e. QUIC validates ICMP before it is used?",
      "createdAt": "2021-02-06T12:14:01Z",
      "updatedAt": "2021-02-16T20:55:14Z",
      "closedAt": "2021-02-16T20:55:14Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I looked at the security section of RFC8085 and I don't think these apply to an application that uses QUIC as they are address by QUIC itself in the protocol spec.\r\n\r\nOr do you have anything specific we should point out here?",
          "createdAt": "2021-02-16T12:45:40Z",
          "updatedAt": "2021-02-16T12:45:40Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gorryfair indicated offline that this can be closed. He was trying to figure out if there is anything to consider regarding e.g. datagram support in QUIC. However, datagrams are still congestion controlled, so that should be reasonably safe.",
          "createdAt": "2021-02-16T20:55:14Z",
          "updatedAt": "2021-02-16T20:55:14Z"
        }
      ]
    },
    {
      "number": 202,
      "id": "MDU6SXNzdWU4MDI2ODk4NjA=",
      "title": "App: Ref: Sect 1: Cite RFC8055 here?",
      "url": "https://github.com/quicwg/ops-drafts/issues/202",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I think RFC8055 generally applies to apps implemented over datagram, and QUIC is different to TCP  and so there are numerous details that are controlled by the application - so I\u2019m thinking that even though QUIC operates as a transport, RFC8055 still has important advice to how to use QUIC, should this be cited in section 1?",
      "createdAt": "2021-02-06T12:15:21Z",
      "updatedAt": "2021-02-09T11:54:42Z",
      "closedAt": "2021-02-09T11:54:42Z",
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "NONE",
          "body": "Is RFC8085 normative (rather than info) to any application built on UDP?",
          "createdAt": "2021-02-06T12:16:42Z",
          "updatedAt": "2021-02-06T12:16:42Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Not sure. RFC8085 applies to the design of QUIC for sure. However, for applications that use QUIC, I don't think much of RFC8085 applies. We have one reference in the keep-alive section. Where appropriate we can add more reference (you would need to tell me where) but otherwise I think most of the advise in RFC8085 is either replaced with explicit advise in this document or not required to consider for an application using QUIC.",
          "createdAt": "2021-02-08T16:38:39Z",
          "updatedAt": "2021-02-08T16:38:39Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "NONE",
          "body": "That might have been so when QUIC was targeting HTTP, but now the datagram work exposes more, I'm less sure that this really is the case.",
          "createdAt": "2021-02-08T17:05:28Z",
          "updatedAt": "2021-02-08T17:05:28Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "QUIC datagrams is only not reliable but still uses congestion control. I can double-check but I still think most of RFC8085 does not apply. Or do you already have something specific in mind?",
          "createdAt": "2021-02-08T17:14:17Z",
          "updatedAt": "2021-02-08T17:14:17Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "NONE",
          "body": "I just wanted to be sure, we can close this issue.",
          "createdAt": "2021-02-09T11:54:34Z",
          "updatedAt": "2021-02-09T11:54:34Z"
        }
      ]
    },
    {
      "number": 203,
      "id": "MDU6SXNzdWU4MDI2OTAwMzY=",
      "title": "App: Ref: TAPS API work: on TCP fallback / API?",
      "url": "https://github.com/quicwg/ops-drafts/issues/203",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "LPardue",
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "Should TAPS be cited as an informational ref to an API that is being discussed by the IETF, and which could apply to QUIC - at least to define the primitives needed in an API, and has quite some insight into protocol racing/fallback as described in applicability?\r\n",
      "createdAt": "2021-02-06T12:16:10Z",
      "updatedAt": "2021-03-01T15:08:24Z",
      "closedAt": "2021-03-01T15:08:24Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'd be happy to do so ;-) however we avoided in the end to talk to much about specific of the interfaces or needed nobs. So not sure it fits or where to fit it.... where would you want to say something?",
          "createdAt": "2021-02-08T16:40:10Z",
          "updatedAt": "2021-02-08T16:40:10Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the WG should consider writing a short section on this. It's important enough that we have a WG developing relevant specs for how to build APIs and the need for this type of fallback/racing. ",
          "createdAt": "2021-02-08T17:03:04Z",
          "updatedAt": "2021-02-08T17:03:04Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "I'm not sure the QUIC WG has enough experience to say anything on the matter.\r\n\r\nThe fallback discussion is about how (Application Mapping + QUIC) could fallback to (alternative application mapping + TCP). For HTTP/3 this isn't a straight fallback - if QUIC fails then a different HTTP version over TCP is required. This has consequences for applications that use HTTP/3 as a substrate (MASQUE, WebTransport) which rely on features only it provides like unreliable DATAGRAM. I think the Applicability spec might need to say more here.\r\n\r\nWhat I'm trying to highlight is that there isn't a straight shootout between TCP and QUIC. If TAPS frames things like that then I don't know that it helps Applicability. ",
          "createdAt": "2021-02-11T10:20:39Z",
          "updatedAt": "2021-02-11T10:20:39Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "taps allows you to use the same interface for multiple transports and also provides you a way to state requirements (hard or soft) to restricts the selection of possible transports. In that sense for some application TCP and QUIC might be not make a real difference as long as all features requested are support, e.g reliability and in-order delivery.\r\n\r\nStill not sure what/if we want to say something in applicability statement...?  ",
          "createdAt": "2021-02-16T12:51:01Z",
          "updatedAt": "2021-02-16T12:51:01Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@LPardue we were trying to not focus on http in this document. But I do agree that the fact that there is a different version needed for http to fallback could still be interesting. How about adding as sentence like the add the end of the first paragraph in section 2:\r\n\r\nOLD\r\nIn the case of HTTP, this fallback is TLS 1.3 over TCP.\r\n\r\nNEW\r\nIn the case of HTTP, this fallback is TLS 1.3 over TCP. Note that for HTTP a fallback to TCP also requires the use of a different version of HTTP, as HTTP/3 has been optimised for use with QUIC, e.g., by removing multiplexing from the HTTP layer and used the provided mechanism within QUIC. \r\n\r\nWe could even add something more like:\r\n\r\n\"Other applications that are optimised for QUIC might need similar adaption in order to be able to function on TCP.\"\r\n\r\nHowever, not sure that adds much...\r\n\r\nWhat do you think?",
          "createdAt": "2021-02-16T12:56:56Z",
          "updatedAt": "2021-02-16T12:56:56Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "I'm still not sure that helps. And I'm trying not to derail Gorry's OP. \r\n\r\nThe main grounding I have in my understanding is HTTP. But I appreciate the Applicability document is general purpose, so apologies. Many HTTP applications operate at the semantic level. HTTP semantics are version-independent and get profiled into versions that have a wire-syntax, which depends on different properties of a transport. This could be an optimised use of QUIC features, or it could be an outright requirement for those features. There isn't an interoperable notion of \"I want to do HTTP/1.1 over a reliable in-order transport, TAPS selected QUIC for me, great I'll use that\" nor \"I want to do HTTP/3 over a reliable, multiplexed, in-order transport, TAPS selected SCTP for me\".\r\n\r\nThe transport fallback behaviour for HTTP semantics is quite straightforward. Pick a different HTTP version. This could lend itself to a race like scenario. However, there are applications that use HTTP as a substrate and things like MASQUE and WebTransport  place requirements on the use of features only available in HTTP/3 - I doubt anyone will try to backport features of QUIC to TCP in order to satisfy the requirements of layers above. ",
          "createdAt": "2021-02-16T13:23:56Z",
          "updatedAt": "2021-02-16T13:23:56Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I was thinking of something like:\r\n\r\n/The IETF TAPS specifications [ID.ietf-taps-arch] describe a system in which multiple protocols can be provided below a common API. and describe some of the implications of fall back, which specifically precludes fallback to insecure protocols or to weaker versions of secure protocols. /\r\nPerhaps inserted after this:\r\n/These applications must operate, perhaps with impaired functionality, in the absence of features provided by QUIC not present in the fallback protocol./\r\n... and before mentioning fallback to TLS over TCP.",
          "createdAt": "2021-02-16T16:55:52Z",
          "updatedAt": "2021-02-16T16:55:52Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@LPardue you are right that QUIC provides features that TCP doesn't provide and if you use those features you cannot just  straight-away replace one with the other. However, a simple one-to-one replacement not implicated when talking about falling back. Rather than trying to back-port features to TCP, what you need to do is implement that feature in your application instead (as H2 does for multiplexing). But this is also true if you try to use TCP and fall back to UDP but need reliability; then you have to implement it in the application layer.\r\n\r\nI was trying to be brief in my proposed text and maybe the word \"optimise\" is not the right one. We can of course say more. Do you want to give it a try and propose some text if you think it would be helpful to say more?\r\n\r\n",
          "createdAt": "2021-02-16T18:07:16Z",
          "updatedAt": "2021-02-16T18:07:16Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "Thanks. I'll have a think on some text. The important thing is that H2 wasn't designed as a fallback for H3, it is its own thing. There are few features that an application desires that it couldn't also achieve by just using HTTP/1.1 and multiple connections for multiplexing.",
          "createdAt": "2021-02-16T18:14:03Z",
          "updatedAt": "2021-02-16T18:14:03Z"
        },
        {
          "author": "mwelzl",
          "authorAssociation": "NONE",
          "body": "May I ask what these features are?\r\n\r\nE.g., the ability to send unreliable datagrams should not matter in the best effort Internet (reliable transfer, when not needed, is just slower). In RFC 8923, we made an effort to identify exactly what MUST be exposed to an application because there's no such fall back. This covers TCP, MPTCP, UDP, UDP-Lite, SCTP and LEDBAT; alas, it excludes QUIC, since this work pre-dates its finalization (by far, despite the date: it spent a long time in the RFC Editor queue). So now I'm curious what QUIC adds to this list.",
          "createdAt": "2021-02-17T11:53:24Z",
          "updatedAt": "2021-02-17T11:53:24Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "mainly multiplexing I would say but that probably covered by SCTP",
          "createdAt": "2021-02-17T12:50:13Z",
          "updatedAt": "2021-02-17T12:50:13Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "The main feature that QUIC provides to the HTTP substrate is that it is a secure transport that can work on the Internet and is easily integrated with WebPKI. These are meta-features in a way. \r\n\r\nHaving parity of the deployment and security models allows more straightforward rationalisation when designing applications and e.g. Web APIs on top of this substrate.",
          "createdAt": "2021-02-17T13:19:47Z",
          "updatedAt": "2021-02-17T13:19:47Z"
        },
        {
          "author": "mwelzl",
          "authorAssociation": "NONE",
          "body": "Thanks!\r\nAbout muxing: is a certain prioritization behavior *guaranteed* (not just a wish) when muxing with QUIC? SCTP could do that but we don't currently give such guarantees in the TAPS interface.\r\nAbout security: right... that's what I expected. TAPS isn't going to fall back to a less secure version of what you wish for... so I guess \"mostly encrypted header\" isn't a part of any API but as you say it's a meta-feature - it's implicit in the choice of QUIC, and when that's desired, falling back wouldn't happen, a TAPS system should always only give you QUIC.\r\n\r\nI think what's missing is a QUIC API that makes these wishes explicit...",
          "createdAt": "2021-02-17T13:25:12Z",
          "updatedAt": "2021-02-17T13:25:12Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "Personally I'd say, for an HTTP application, that QUIC packet header protection is less of a concern. More that QUIC provides transport security on-par with TCP+TLS. Often an application can use the same TLS and crypto libraries for both.\r\n\r\nFallback from QUIC to TCP can be a downgrade. But an application that does this can (and should) be aware of the security properties of the transport it is using. \r\n\r\nWith HTTP, imagine a client that connects to http://example.com and receives `Alt-Svc: h3=\":433\"`. This advertises the availability of QUIC and HTTP/3. If that transport connection fails for some reason, then there is not a viable fallback to TCP+TLS. This is an unlikely scenario but the specs allow for it to happen.",
          "createdAt": "2021-02-17T13:40:35Z",
          "updatedAt": "2021-02-17T13:40:35Z"
        },
        {
          "author": "mwelzl",
          "authorAssociation": "NONE",
          "body": "I would also have thought that encrypting data is more important - but surely having fall-back \"under the hood\" and just being aware of what you got (this can be queried in TAPS) is nicer than having to take care of it in the application. Fall-backs can get complex: e.g., when multi-homing, considering IPv6 ... a TAPS system can have a rich set to choose from and implement it all efficiently while shielding applications from this trouble - the application is still in control of things and can express limitations, as well as query what it got in case it did give the system some freedom.\r\n\r\nThis HTTP case of preventing a fall-back... well, it is what it is  :)   No fall-back in this case, clearly.",
          "createdAt": "2021-02-17T13:48:39Z",
          "updatedAt": "2021-02-17T13:48:39Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "I remain to be convinced that TAPS API will address the way that applications (I am familiar with) intend to use and interact with QUIC.",
          "createdAt": "2021-02-17T14:10:52Z",
          "updatedAt": "2021-02-17T14:10:52Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think we're drifting towards a discussion of should a mapping document be written for TAPS to QUIC... which is a different topic.\r\n\r\nMy observation was only that TAPS architecture is something the IETF is working upon, and it has documents that describe how to make an API that with functions and racing/fallback in a very different way to sockets. The guidance about what is an acceptable \"alternative\" connection appear common, at least enough to say there is a similarity and cite it. ",
          "createdAt": "2021-02-17T14:21:12Z",
          "updatedAt": "2021-02-17T14:21:12Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "The suggestion for a short informational reference seems good to me.",
          "createdAt": "2021-02-17T14:24:23Z",
          "updatedAt": "2021-02-17T14:24:23Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There is already PR #259 ",
          "createdAt": "2021-02-17T14:25:55Z",
          "updatedAt": "2021-02-17T14:25:55Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We merged PR #259. Is there anything we want to add or can this issue be closed?",
          "createdAt": "2021-02-22T13:08:35Z",
          "updatedAt": "2021-02-22T13:08:35Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "The merged PR addresses all of my concerns. I'll let @gorryfair be the judge whether his original issue has been addressed.",
          "createdAt": "2021-02-26T15:34:35Z",
          "updatedAt": "2021-02-26T15:34:35Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That looked good to me.",
          "createdAt": "2021-03-01T14:56:58Z",
          "updatedAt": "2021-03-01T14:56:58Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks all!",
          "createdAt": "2021-03-01T15:08:24Z",
          "updatedAt": "2021-03-01T15:08:24Z"
        }
      ]
    },
    {
      "number": 204,
      "id": "MDU6SXNzdWU4MDI2OTAzMTg=",
      "title": "App: Ref: Transport BEHAVE Specs",
      "url": "https://github.com/quicwg/ops-drafts/issues/204",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "NAT section",
        "has PR"
      ],
      "body": "Should RFC7857 also be cited? (NAT update BCP)\r\nShould RFC4787 also be cited? (behaviour for UDP NAT)",
      "createdAt": "2021-02-06T12:17:35Z",
      "updatedAt": "2021-04-14T12:11:23Z",
      "closedAt": "2021-04-14T12:11:23Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Not sure. We cite RFC4787 in the manageability doc. In this doc we refer to RFC8085 instead which then refers to RFC4787. I'd say that's about right.\r\n\r\nHowever, I'm open to add more information if people think that's helpful. If so, what more do we need to say where?",
          "createdAt": "2021-02-08T16:47:33Z",
          "updatedAt": "2021-02-08T16:47:33Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In 3.5 the ID currently states: \" According to a 2010 study ([Hatonen10]), UDP\r\n   applications can assume that any NAT binding or other state entry can\r\n   expire after just thirty seconds of inactivity.\"\r\nWhereas in RFC 4787 (BCP) Requirement 6 states: \r\n\"   REQ-5:  A NAT UDP mapping timer MUST NOT expire in less than two\r\n      minutes, unless REQ-5a applies.\r\n      a) For specific destination ports in the well-known port range\r\n         (ports 0-1023), a NAT MAY have shorter UDP mapping timers that\r\n         are specific to the IANA-registered application running over\r\n         that specific destination port.\r\n      b) The value of the NAT UDP mapping timer MAY be configurable.\r\n      c) A default value of five minutes or more for the NAT UDP mapping\r\n         timer is RECOMMENDED.\"\r\nI suggest we directly refer to this RFC before or after the above sentence, before the ID then continues in the next sentence to discuss the topic of keep alive (aka RFC8085).",
          "createdAt": "2021-02-09T09:06:01Z",
          "updatedAt": "2021-02-09T09:06:01Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There was always a reference to RFC4787. Text is\r\n\r\n>{{?RFC4787}} requires a timeout that is not less than 2 minutes for most UDP traffic. However, in pratice, timers are often lower, in the range of 15 to 30 seconds. \r\n\r\nWhat else should be added?",
          "createdAt": "2021-02-26T15:20:43Z",
          "updatedAt": "2021-02-26T15:20:43Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I suggested changing the latter from \"15 to 30 seconds\" to \"30 seconds to 1 minute,\" or something like Gorry's quote: \r\n\r\n  \"According to a 2010 study ([Hatonen10]), UDP\r\n   applications can assume that any NAT binding or other state entry can\r\n   expire after just thirty seconds of inactivity.\"",
          "createdAt": "2021-02-26T17:19:35Z",
          "updatedAt": "2021-02-26T17:19:35Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "When I review \"experience\" reported in OPS drafts, I usually try to avoid wording that might convey the IETF endorses the reported behaviour, rather than be aware of the reported behaviour. I suggest this is one of these cases. \r\n\r\nSo suggest a style something like:\r\n\r\n{{?RFC4787}} requires a timeout that is not less than 2 minutes for most UDP traffic. However, protocols traversing NATs should be aware of systems using lower values, in the range of 15 to 30 seconds. A study in 2010 study ([Hatonen10]), reported that UDP applications can experience that NAT binding or other state entries expire after just thirty seconds of inactivity.\r\n",
          "createdAt": "2021-02-27T16:06:29Z",
          "updatedAt": "2021-02-27T16:06:29Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There is new proposed text on this part in PR #222 - Can review and comment any proposed changes there...? @ianswett @gorryfair ",
          "createdAt": "2021-03-23T20:09:40Z",
          "updatedAt": "2021-03-23T20:09:40Z"
        }
      ]
    },
    {
      "number": 205,
      "id": "MDU6SXNzdWU4MDI2OTE2MDM=",
      "title": "App: Many and various editorial NiTS",
      "url": "https://github.com/quicwg/ops-drafts/issues/205",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability",
        "editorial",
        "has PR"
      ],
      "body": "The app ID seems to have various places where the text needs a wee polish. I'm sure this is not all, but there are quite a lot of NiTS here. It could be that some of these may be hints at topics that should become issues to be discussed, although I suspect that most (or all) are simply requests for editorial changes to improve clarity.\r\n\r\n---\r\nNiT: Timeliness of the \u201cevidence\u201d.\r\nI agree with what is said, but I think we should be more cautious about current evidence we place in the RFC. \r\n\u201cWhile there is no evidence of widespread, systematic disadvantage\u201d\r\n- can we say \u201cCurrent measurements show no evidence\u2026\u201d or something that captures this.\r\n---\r\nNit: \u201cRobust to rebinding\u201d might be better as \u201crobust to NAT rebinding\u201d.\r\n---\r\nNit: \u201ccan use 0-RTT session resumption,\u201d, I\u2019d suggest a cross reference to section here in the QUIC Spec.\r\n---\r\nNit: \u201cconnections may not be robust\u201d, this combination of may can often be misinterpreted by different usages of English, \u201cmight not\u201d is likely unambiguous.\r\n---\r\nNit: \u201cIn particular, firewalls will often not admit server traffic for which it has not kept state for corresponding packets from the client.\u201d I think this is about what I would call \u201cestablished\u201d state tracking - mixed plurals, could this be something a little like: \u201cIn particular, some firewalls do not admit server traffic for which the firewall has no recent state for  a corresponding packet sent from the client.\u201d\r\n---\r\nNit: \u201cSending PING frames more frequently than every 30 seconds over long idle periods may result in excessive unproductive traffic in some\u201d  - could be another place to refer to RFC8085 o/andr QUIC Spec section.\r\n---\r\nNit: \u201cThis of course only applies \u201c - is it possible to avoid \u201cof course\u201d here? - or if needed, then please do explain more. Maybe \u201cThis approach is valid only when\u2026\u201d or something similar?\r\n---\r\nNiT: \u201cUsing resumption in this way also assumes that the protocol does not accumulate any non-persistent state in association with a connection.\u201d - I\u2019m not sure what the assumption is here? Isn\u2019t this a requirement on the application?\r\n---\r\nNit: \u201cDue to encoding limitations on \u201c. This would read easier if it did not start with \u201cdue to\u201d.\r\n---\r\nNit: \u201cexceptional handling \u201c - is this \u201cexception handling\u201d - or is this something else then maybe this needs discussion?\r\n---\r\nNit: \u201cIf a QUIC receiver has maximum allowed concurrent streams open\u201d - I think this should be:\r\n\u201cIf a QUIC receiver opened has the maximum allowed concurrent streams \u201c\r\n---\r\nNit: \u201cvaluable to expose maximum number of allowed\u201d insert \u201cthe\u201d?\r\n---\r\nNit: for the avoidance of doubt: \u201cwill try to maximally pack packets\u201d - please add \u201cQUIC\u201d before packets.\r\n---\r\nNit: \u201cmay be valuable to indicate to QUIC that all data should be send out immediately\u201d \u2026 I agree, but think this means the QUIC sending stack, because I don\u2019t know the QUIC transport protocol mechanism to do this.\r\n---\r\nNit: Sect 7: \u201cIf a lower-layer address changes\u201d - what is this? an IP address? something more?\r\nand \u201ccan still associate packets with an existing connection\u201d - I\u2019d prefer \u201ctransport\u201d or \u201cendpoint\u201d before connection here, because there are connections at other lower layers, which this isn\u2019t about.\r\n---\r\nNit: \u201cPath validation means that the other endpoint in required\u201d - /other/remote/ ?? /in/is/\r\n---\r\nNit: \u201ccongestion control will also be reset on path migration\u201d is /on/ better /after/ - please refer to the relevant section in the spec.\r\n---\r\nNit: \u201cProbing packets, which cannot carry application data, can be sent on multiple paths at once.\u201d . I think should be \u201cQUIC packet probes\u201d and would be much better with a cross reference to the sections within the spec.\r\n---\r\nNit: \u201cThis frames has two sets of types: one\u201d /This/These/  and /has/have/.\r\n---\r\nNit: \u201cAside from the destination connection ID field of the first packets sent by clients, the connection ID can be zero length. \u201c.  \u201cAside from\u201d reads a little odd, but the intent seems correct, can you reword?\r\n---\r\nNit: \u201cThe most efficient mitigation for these attacks is operational, either by using a load balancing architecture\u201d Agree, but \u201coperational\u201d seems like the sentence is odd, is this appropriate operational practice, or design or something else?\r\n---\r\n\r\n\r\n\r\n\r\n\r\n",
      "createdAt": "2021-02-06T12:25:06Z",
      "updatedAt": "2021-02-22T10:07:21Z",
      "closedAt": "2021-02-22T10:07:21Z",
      "comments": []
    },
    {
      "number": 206,
      "id": "MDU6SXNzdWU4MDI2OTE5NzE=",
      "title": "App/Ops: Server deployments with load balancers",
      "url": "https://github.com/quicwg/ops-drafts/issues/206",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "editorial",
        "has PR"
      ],
      "body": " \u201cServer deployments with load balancers and other routing infrastructure need to ensure that this infrastructure consistently routes packets to the correct server instance. \u201c could this be:\r\n\u201cServer deployments with load balancers and other routing infrastructure that depends on observing the payload of IP packets need to ensure that this infrastructure consistently routes all the QUIC packet belonging to a connection to the same server instance.\u201d\r\n\r\n- Seems like that is helpful. Is there a relevant section in the OPS draft where the reader should be directed?",
      "createdAt": "2021-02-06T12:27:21Z",
      "updatedAt": "2021-03-17T17:32:07Z",
      "closedAt": "2021-03-17T17:32:07Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Not sure if you addition of \"that depends on observing the payload of IP packets\" is that helpful in the sentence. The whole point here that if you use load balancers with QUIC, looking only at the IP might not be enough.\r\n\r\n@martinduke can you have a look how to phrase this?",
          "createdAt": "2021-02-08T16:53:53Z",
          "updatedAt": "2021-02-08T16:53:53Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is this referring to sec 9.1 of the applicability draft? Why refer to the ops draft when the current reference (QUIC-LB) has everything you would want to know about the subject?\r\n\r\nI don't understand what Gorry's new clause adds. In fact, the IP address is not in the payload so I don't believe it's even accurate. Are you trying to distinguish between L7 and L4 load balancers here?",
          "createdAt": "2021-02-08T17:10:30Z",
          "updatedAt": "2021-02-08T17:10:30Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I couldn't work out what the current sentence means what does \"correctly\" mean?",
          "createdAt": "2021-02-08T17:23:36Z",
          "updatedAt": "2021-02-08T17:23:36Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "OK, I can reword this.",
          "createdAt": "2021-02-08T18:59:16Z",
          "updatedAt": "2021-02-08T18:59:16Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is left open as there is a pending rewrite of the NAT section.",
          "createdAt": "2021-02-22T13:09:55Z",
          "updatedAt": "2021-02-22T13:09:55Z"
        }
      ]
    },
    {
      "number": 210,
      "id": "MDU6SXNzdWU4MDM3MDc2MDE=",
      "title": "Network management of Path MTU",
      "url": "https://github.com/quicwg/ops-drafts/issues/210",
      "state": "CLOSED",
      "author": "chris-box",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "meeting-agenda"
      ],
      "body": "The manageability draft aims to provide guidance to network operators in managing QUIC traffic, yet currently says nothing about what could be a major impact for some networks.\r\n\r\nConsider a cellular/mobile network that is providing internet access to end users. Because it is an internet access service, the users have an implicit expectation that the complete range of internet packet sizes (i.e. up to 1500 bytes) can be exchanged. And as it is a cellular network packets are routinely encapsulated in GTP-U. The network operator also chooses to add IPSEC encapsulation in order to secure communications over a diverse range of connectivity providers. Since at least some of that connectivity is over paths with 1500 MTU, it implies that end-user datagrams over a certain size (e.g. 1400) would have to be fragmented at the point of encapsulation, and reassembled before delivery to the user.\r\n\r\nSuch fragmentation and reassembly comes at a cost. Importantly it implies a limited capacity for packets with sizes in the relevant range (e.g. 1400-1500). In a world where TCP dominates this is easily managed with MSS Clamping, so that both TCP endpoints learn the optimal size to use. In QUIC a different mechanism is required. QUIC-TRANSPORT describes how the endpoints can discover a hard path MTU limit, i.e. one where there is a clear cutoff above a certain size. I think the manageability draft needs a section that advises operators of networks where there is a soft path MTU limit. I'll create a PR with proposed wording for this section.\r\n\r\nIf anyone is unconvinced about the need for such packet size limitation, happy to discuss in more depth.\r\n\r\n\r\n",
      "createdAt": "2021-02-08T16:14:27Z",
      "updatedAt": "2021-03-17T16:27:02Z",
      "closedAt": "2021-03-17T16:27:02Z",
      "comments": [
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree that what you're describing is a real problem, but given QUIC packets have the DF bit set, shouldn't that indicate to these networks that the QUIC packets should not be fragmented?\r\n\r\nWe have seen networks similar to what you're describing that appear to ignore the DF bit, which I believe goes against the assumptions in https://tools.ietf.org/html/rfc8899",
          "createdAt": "2021-02-08T18:26:42Z",
          "updatedAt": "2021-02-08T18:26:42Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'll give two answers to this. First is the technical reason. In a cellular network this pattern can arise:\r\n![Fragmentation](https://user-images.githubusercontent.com/56736263/107362466-b2c61580-6ad0-11eb-8e2f-751d012a9a0d.jpg)\r\nBecause the IPSEC gateway acts on a packet that is already encapsulated, it naturally looks at the lower-layer IP header rather than the user's original IP header that had the DF bit set. Furthermore even if it performed deeper inspection and was able to take note of the DF, it would not have the ability to generate ICMP towards the server.\r\n\r\nThe second is the customer expectation reason. Clearly we could configure a router upstream of the PGW to have a lower MTU interface towards the PGW. This would force the router to drop the largest packets if they had DF set. And if they didn't set it, they would be fragmented (for v4). For mainstream internet services this would be ok, and few would notice. But with a large customer base, it is extremely likely that somebody will have a service that fails to work over such a network. At the end of the day people are paying for a \"normal\" internet service, and at least some of them will expect 1500 byte packets to be deliverable. Would you be happy for your home internet to be one that could never support packets larger than 1400 bytes?",
          "createdAt": "2021-02-09T12:43:59Z",
          "updatedAt": "2021-02-09T12:43:59Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for this explanation.\r\n\r\nIf a GTP tunnel encapsulates an IP packet that has DF set, and it does not set DF in the encapsulating packet, that tunnel needs to provide the necessary mechanisms to reassemble packets that are fragmented along the tunnelled path - that adds complexity at the lower layer, but it's allowed - providing that it does not clear DF.\r\n\r\nSome paths support an MTU larger than 1500 B, many home access networks support an MTU smaller than 1500 B. That's why we have PMTU discovery methods. I note GTP is not alone in wishing take-on support for a larger PMTU. Many layer 2's also transparently fragment, but this isn't something that the IETF should advocate per protocol (even though TCP-MSS clamping works in cases for instance when IPsec isn't used).   \r\n\r\nI don't see any specific need for anything in QUIC, or in guidance for QUIC. This is an IP-layer decision. A tunnel/encaps needs to support the MTU that it offers. Documenting the ways in which this can happen has been a long saga in the IETF: https://tools.ietf.org/html/draft-ietf-intarea-tunnels-10.\r\n\r\n",
          "createdAt": "2021-02-09T17:57:59Z",
          "updatedAt": "2021-02-09T17:57:59Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Gorry, thanks for the feedback. The tunnels draft is not that easy to follow when it gets into dense discussion. However I do like the recognition that in ICMP there's no way to say \"bigger than I'd like, but I can deal with if needed\". That is essentially the problem here. We have a network that can handle large packets up to a certain percentage of the traffic (because it provides the necessary mechanisms), but it can't do that for the entire web.\r\n\r\nSo if I'm understanding you correctly, a network that does not want to carry all port 443 at 1500 bytes should handle this by using PMTU discovery methods to guide senders appropriately. That is essentially what I'm proposing in the PR.\r\n\r\nWhy is this particularly, uniquely, relevant to QUIC? Because HTTP is the bulk of internet traffic today, and clients and servers have incentives to adopt HTTP/3. This will radically alter the present ratio of TCP:UDP, and all such networks with reassembly capacity limits will benefit from a warning that their existing TCP MSS clamping will no longer protect them.",
          "createdAt": "2021-02-09T18:43:38Z",
          "updatedAt": "2021-02-09T18:43:38Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "From an attempt to deploy Path MTU from server to client, we saw a large number of paths where a larger MTU worked when probing, but sometime after increasing the MTU, the connection was black-holed.  The solution was to switch back to the original handshake MTU after a certain period of black-holing, which avoided the connection failing.\r\n\r\nHowever, when this was more widely enabled, we saw:\r\n 1) Complaints from operators who couldn't handle the excess traffic at higher MTUs\r\n 2) User visible issues(app-level timeouts) on some ISPs\r\n\r\nThis was the most user-visible issue I can recall our deployment having in the last few years, and it was completely unexpected, at least for me, because I was unaware of this 'can handle large packets up to a certain percentage of the traffic' form of network operations.  Additionally, it was quite difficult to link the second issue to PathMTU discovery.\r\n\r\nI can imagine a number of operator changes which would make our past PathMTU algorithm safe.  One is to never fragment UDP 443 when DF is set(or it's IPv6).\r\n\r\nI'm not sure when we'd expect to see such changes deployed.  In the meantime, I can think of a few options I don't particularly like:\r\n1) Don't try probing up past some fixed size(1400 bytes of payload?) which could cause fragmentation.\r\n2) Don't try PathMTU for certain ASNs.\r\n3) Adopt much more complex probing strategies that are optimized to quickly detect when a user is on one of these networks.\r\n\r\nChris, do you think it's reasonable to expect this can be changed in existing networks in 2021 or is this a multi-year process?",
          "createdAt": "2021-02-09T20:32:55Z",
          "updatedAt": "2021-02-09T20:32:55Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There seem to be two questions to answer here.\r\n\r\nQ1: Which guidance should we give to network operators in this draft?\r\n\r\nI think it is pretty clear - if your network has one of these soft limits, you should drop oversized UDP/443 and send ICMP PTB. You will need to do this at a point in the network where you can easily send the PTB. This may be upstream of the point where fragmentation would have occurred. You raise the question of whether this should also occur if it's (IPv4 and DF is not set). I think we can leave that choice to implementations. Personally I would say do it regardless. If it's QUIC, and DF is not set, then packets are not supposed to be larger than 1200 anyway.\r\n\r\nI would say it's reasonable to expect that this can be changed in 2021.\r\n\r\nQ2: Which advice should we give to endpoints to help them avoid issues over networks that haven't implemented the guidance yet?\r\n\r\nPerhaps before exceeding 1400 bytes of (IP header + UDP header + QUIC) the client could also do a conventional TCP handshake and take note of the MSS? If it has been clamped this information could be stored and used to inform packet size decisions.\r\n\r\nUnfortunately the server doesn't have this option so it comes down to your three options, or a fourth which is to only migrate to HTTP/3 over a period of weeks. During that migration look for per-ASN degradation in metrics compared to HTTP/2. I would hope that networks that are then encountering capacity limits would be sufficiently on the ball to do something about it. If they complain to you, point them to the relevant section of the manageability draft.",
          "createdAt": "2021-02-10T13:02:18Z",
          "updatedAt": "2021-02-10T13:02:18Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> There seem to be two questions to answer here.\r\n> \r\n> Q1: Which guidance should we give to network operators in this draft?\r\n> \r\n> I think it is pretty clear - if your network has one of these soft limits, you should drop oversized UDP/443 and send ICMP PTB. You will need to do this at a point in the network where you can easily send the PTB. This may be upstream of the point where fragmentation would have occurred. You raise the question of whether this should also occur if it's (IPv4 and DF is not set). I think we can leave that choice to implementations. Personally I would say do it regardless. If it's QUIC, and DF is not set, then packets are not supposed to be larger than 1200 anyway.\r\n> \r\n> I would say it's reasonable to expect that this can be changed in 2021.\r\n>\r\n\r\nThanks, that's good news, since it means there's no need to make any changes to the core QUIC documents.  However, in order for them to change their configs, they have to be made aware of this new recommendation.  Is this something that should be publicized on NOG lists once we have consensus on text for the manageability draft?  Or is there a better way to ensure the right people are notified?\r\n \r\n> Q2: Which advice should we give to endpoints to help them avoid issues over networks that haven't implemented the guidance yet?\r\n> \r\n> Perhaps before exceeding 1400 bytes of (IP header + UDP header + QUIC) the client could also do a conventional TCP handshake and take note of the MSS? If it has been clamped this information could be stored and used to inform packet size decisions.\r\n> \r\n> Unfortunately the server doesn't have this option so it comes down to your three options, or a fourth which is to only migrate to HTTP/3 over a period of weeks. During that migration look for per-ASN degradation in metrics compared to HTTP/2. I would hope that networks that are then encountering capacity limits would be sufficiently on the ball to do something about it. If they complain to you, point them to the relevant section of the manageability draft.\r\n\r\nI agree that having a relevant section would help.",
          "createdAt": "2021-02-10T14:48:31Z",
          "updatedAt": "2021-02-10T14:48:31Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Is this something that should be publicized on NOG lists once we have consensus on text for the manageability draft? Or is there a better way to ensure the right people are notified?\r\n\r\nThere are a number of forums where it could be publicised, national and international. BT are plugged into many of them so I can do my bit. ",
          "createdAt": "2021-02-10T15:20:14Z",
          "updatedAt": "2021-02-10T15:20:14Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "So a few things here:\r\n\r\nQUIC isn't going to run on port 443 exclusively.  Traffic might be identifiable as QUIC, but the wire image is pretty hard to distinguish.  However, I think it's OK to recommend PTB rather than fragmentation for IP packets that might be QUIC.  (Other UDP protocols need to deal with those anyway.)\r\n\r\nI don't think that information about the TCP MTU is transferrable to UDP, even if several other parts of the 5-tuple are the same.\r\n\r\nOverall, I think it would be terrible if people had to have per-ASN state just to deploy the protocol.  Google might be able to deploy that, but we couldn't afford it.",
          "createdAt": "2021-02-10T22:01:39Z",
          "updatedAt": "2021-02-10T22:01:39Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, accurate distinguishability of QUIC is hard, and yes you could find it on any UDP port. But imagine a case where the network operator is blissfully unaware, until critical alarms pop up warning that a particular element of the network is overloaded, and there is end-to-end measured packet loss. Reactively finding the bulk flows that are driving this is not hard, because they will be obvious.\r\n\r\nSo any proactive management to avoid this occurring will rely on predictions of where QUIC will be found. The obvious one is HTTP/3, to be found in roughly the same port number distribution as  HTTP/2 (not h2c), i.e. ~99% is 443. Others can be added to this set if they are expected to become sufficiently prominent.\r\n\r\nComing to the other points:\r\nIf the received TCP MSS is not useful as a predictor for UDP MTU, then I guess that's ruled out.\r\n\r\nI don't think per-ASN state is a _requirement_ for deployment. But as in any significant change, the early adopters will find the issues first. Even when being first, the speed of rollout you select will influence the size of those issues. The good news is that a gradual rollout across a range of clients and servers will collectively drive fixes across networks to support QUIC well.\r\n",
          "createdAt": "2021-02-11T10:22:51Z",
          "updatedAt": "2021-02-11T10:22:51Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I haven't looked whether TCP-MSS is a useful and usable hint when searching for a UDP MTU, it might be, or not - In many cases the TCP MSS *is* clamped; and it can be lower than the PMTU (even using TCP probe segments), so that might be an indicator... but I also see this does not help longer term.\r\n\r\nI do agree that we need to avoid a network operator being \"blissfully unaware, until critical alarms pop up\"... and this seems the correct document to call something out - and maybe the best thing might indeed be to suggest that reassembled PMTUs are *only* used for apps profiles that really need it (until such apps are -eventually- updated) or where the network processing cost is understood and does not introduce an unwanted bottleneck/blackhole. Otherwise the path ought to drop and send an ICMP PTB message - and we can note that newer mechanisms are robust to loss of this PTB.",
          "createdAt": "2021-02-11T11:04:14Z",
          "updatedAt": "2021-02-11T11:04:14Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "I agree with Gorry.  Only deploy fragmentation and reassembly where you **know** it will help.  Any uncertainty and the best advice is don't.  Even without DF.  Ignoring DF when the type of traffic is not known seems more like malice than anything else.",
          "createdAt": "2021-02-11T11:09:57Z",
          "updatedAt": "2021-02-11T11:09:57Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'd be happy with wording in the PR that articulated a general principle that if you have fragmentation and reassembly in your network, you should look to avoid passing DF traffic through this unless you really have to. The necessary drop of DF packets should occur at a point in the network where it is possible to generate the PTB, which may be distant from the point of fragmentation.\r\n\r\nThat's the general principle and end goal. In 2021, many network operators are likely to make only more targetted changes towards that goal, for the reasons I gave to Mirja in #212.",
          "createdAt": "2021-02-11T12:08:12Z",
          "updatedAt": "2021-02-11T12:08:12Z"
        }
      ]
    },
    {
      "number": 215,
      "id": "MDU6SXNzdWU4MDQyNTg1MjU=",
      "title": "Streams section could discuss in-order delivery assumption",
      "url": "https://github.com/quicwg/ops-drafts/issues/215",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "martinthomson"
      ],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "Though the specification does not insist upon it, most implementations will assume that stream data is reliably delivered in order.  This means that senders will send until every byte is delivered or they decide to reset the stream (possibly based on STOP_SENDING).  And it means that receivers won't make data available until a contiguous span of bytes starting at the last unread offset are available.\r\n\r\nImplementations might act differently, but variations from this behaviour would need to be agreed by both endpoints.",
      "createdAt": "2021-02-09T06:36:20Z",
      "updatedAt": "2021-02-22T10:08:18Z",
      "closedAt": "2021-02-22T10:08:18Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinthomson  can you propose text?",
          "createdAt": "2021-02-12T12:51:31Z",
          "updatedAt": "2021-02-12T12:51:31Z"
        }
      ]
    },
    {
      "number": 216,
      "id": "MDU6SXNzdWU4MDQyNjA1MjY=",
      "title": "Very long paragraph in Streams section",
      "url": "https://github.com/quicwg/ops-drafts/issues/216",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability",
        "editorial",
        "has PR"
      ],
      "body": "> Mapping of application data to streams is application-specific and described for HTTP/3 in [QUIC-HTTP]. In general, data that can be processed independently, and therefore would suffer from head of line blocking if forced to be received in order, should be transmitted over separate streams. If the application requires certain data to be received in order, that data should be sent on the same stream. If there is a logical grouping of data chunks or messages, streams can be reused, or a new stream can be opened for each chunk/message. If one message is mapped to a single stream, resetting the stream to expire an unacknowledged message can be used to emulate partial reliability on a message basis. If a QUIC receiver has maximum allowed concurrent streams open and the sender on the other end indicates that more streams are needed, it doesn't automatically lead to an increase of the maximum number of streams by the receiver. Therefore it can be valuable to expose maximum number of allowed, currently open and currently used streams to the application to make the mapping of data to streams dependent on this information.\r\n\r\nThat's a lot to work through.  Consider breaking this up a little.  I see a few things:\r\n\r\n1. Concurrency is aided by using more streams where ordering is not necessary or where concurrency is desirable.\r\n2. On the opposite end of things, streams provide ordering where ordering is critical.\r\n3. Sending a message per stream allows messages to be cancelled.\r\n4. Limits on concurrency need to be accounted for.",
      "createdAt": "2021-02-09T06:39:32Z",
      "updatedAt": "2021-02-22T10:07:21Z",
      "closedAt": "2021-02-22T10:07:21Z",
      "comments": []
    },
    {
      "number": 217,
      "id": "MDU6SXNzdWU4MDQyNjUxNDk=",
      "title": "ALPN doesn't enable use of other ports",
      "url": "https://github.com/quicwg/ops-drafts/issues/217",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "> For example, HTTP/3 ([QUIC-HTTP] Sections 3.2 and 3.3) specifies the use of ALPN [RFC7301] for service discovery which allows the server to use and announce a different port number. \r\n\r\nI think that this refers to Alt-Svc (RFC 7838), which is mentioned in [Section 3.1.1](https://quicwg.org/base-drafts/draft-ietf-quic-http.html#name-http-alternative-services).  You might also mention the not-yet-done SVCB record, but that might not be a good idea if you like the idea of publishing this.",
      "createdAt": "2021-02-09T06:47:09Z",
      "updatedAt": "2021-02-22T10:20:28Z",
      "closedAt": "2021-02-22T10:20:28Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "SVCB record would just be an informational reference, no? So that shouldn't hold up publication. In this case I'd be okay to provide a pointer.",
          "createdAt": "2021-02-12T12:53:44Z",
          "updatedAt": "2021-02-12T12:53:44Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "What do you meant by \"ALPN doesn't enable use of other ports\"?",
          "createdAt": "2021-02-16T13:05:05Z",
          "updatedAt": "2021-02-16T13:05:05Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "The text here says \"specifies the use of ALPN for service discovery which allows the server to use and announce a different port number\".  ALPN is not a service discovery mechanism, it's a protocol selection mechanism.  ALPN is completely orthogonal to choice of ports.\r\n\r\nThe purpose of ALPN is for client and server to agree on the protocol that is used.\r\n\r\nYour change to references in #250 won't fix this issue.  It does correctly cite the Alt-Svc sections of HTTP/3, but the surrounding text still says ALPN.",
          "createdAt": "2021-02-17T00:04:03Z",
          "updatedAt": "2021-02-17T00:04:03Z"
        }
      ]
    },
    {
      "number": 218,
      "id": "MDU6SXNzdWU4MDQyNjc4NTY=",
      "title": "Multiple error code spaces",
      "url": "https://github.com/quicwg/ops-drafts/issues/218",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "> Application error codes are expected to be defined from a single space that applies to all three frame types.\r\n\r\nThis is true, but there is nothing inherent to the design that prevents RESET_STREAM (and STOP_SENDING) from using a different code space from CONNECTION_CLOSE.  Though we have the policy in HTTP/3 that any stream error can become a connection error, the same isn't necessarily true of other protocols.\r\n\r\nMaybe we cab just avoid mentioning this possibility..,",
      "createdAt": "2021-02-09T06:51:24Z",
      "updatedAt": "2021-02-22T11:02:47Z",
      "closedAt": "2021-02-22T11:02:47Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't think I have a strong opinion on removing or keeping this sentence. Would it be any better if we say:\r\n\r\n\"Application error codes are recommended to be defined from a single space that applies to all three frame types.\"\r\n\r\n?\r\n\r\nOr is there any other guidance we can or want to give to application designer about the use of error codes?",
          "createdAt": "2021-02-16T13:08:19Z",
          "updatedAt": "2021-02-16T13:08:19Z"
        }
      ]
    },
    {
      "number": 227,
      "id": "MDU6SXNzdWU4MDc1Nzg1NzI=",
      "title": "0-RTT and Early Data",
      "url": "https://github.com/quicwg/ops-drafts/issues/227",
      "state": "CLOSED",
      "author": "MikeBishop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "Section 3 talks about the challenges of 0-RTT, but seems to ignore that very similar challenges exist when TLS 1.3 Early Data is used over TCP.  I think I'd reword this to talk about the similarity, and that while QUIC gives Early Data more visibility, the same cautions and mitigations still apply.\r\n\r\n(I'd also probably find a more technical title than \"Here There Be Dragons,\" but that's purely stylistic.)",
      "createdAt": "2021-02-12T22:10:17Z",
      "updatedAt": "2021-02-22T10:24:46Z",
      "closedAt": "2021-02-22T10:24:46Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree that challenges are similar to TLS1.3 over TCP. However, given this document is scoped to the use of QUIC, I'm not sure what mentioning TCP in this section gets you. I find the section actually quite clear without mentioning anything about TCP. Or did I miss the point you are making? ",
          "createdAt": "2021-02-16T13:13:28Z",
          "updatedAt": "2021-02-16T13:13:28Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Otherwise PRs are always welcome! :-)",
          "createdAt": "2021-02-16T13:13:56Z",
          "updatedAt": "2021-02-16T13:13:56Z"
        }
      ]
    },
    {
      "number": 230,
      "id": "MDU6SXNzdWU4MDgyMTM5NTI=",
      "title": "Gotta intercept",
      "url": "https://github.com/quicwg/ops-drafts/issues/230",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "editorial",
        "has PR"
      ],
      "body": "> Since QUIC's wire image [WIRE-IMAGE] is integrity protected and not modifiable on path, in-network operations are not possible without terminating the QUIC connection, for instance using a back-to-back proxy. Proxy operations are not in scope for this document. A proxy can either explicit identify itself as providing a proxy service, or may share the TLS credentials to authenticate as the server and (in some cases) client acting as a front-facing instance for the endpoint itself.\r\n\r\nThe point of [the first sentence here](https://quicwg.org/ops-drafts/draft-ietf-quic-manageability.html#section-1-4) is a little odd, because it seems to imply that ALL operations require access to the information that is integrity- or confidentiality-protected.  That's clearly not the case, I think, as it is merely pointing out that if you want to modify data, then you have to be an endpoint.\r\n\r\nI think that this might be better phrased as:\r\n\r\n> Since QUIC's wire image {{WIRE-IMAGE}} is integrity protected, in-network operations that depend on modification of data are not possible without the cooperation of an endpoint.  Network operation practices that alter data are only possible if performed as a QUIC endpoint, which might be possible with the introduction of a proxy.  Proxy operations are not in scope for this document.\r\n\r\nNote: This drops the last sentence of the original paragraph.  If proxying is out of scope, then it doesn't help to talk about it so much.  The point about cooperation should do.",
      "createdAt": "2021-02-15T06:15:32Z",
      "updatedAt": "2021-02-22T10:46:25Z",
      "closedAt": "2021-02-22T10:46:25Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Created a PR based on your proposed text but added some of the information about proxies to make it more clear what kind of proxies we are talking about.",
          "createdAt": "2021-02-16T10:50:09Z",
          "updatedAt": "2021-02-16T10:50:09Z"
        }
      ]
    },
    {
      "number": 231,
      "id": "MDU6SXNzdWU4MDgyMTc1NzQ=",
      "title": "Dated information about version numbers",
      "url": "https://github.com/quicwg/ops-drafts/issues/231",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "has PR"
      ],
      "body": "> Many QUIC versions that start with 0xff implement IETF drafts. QUIC versions that start with 0x0000 are reserved for IETF consensus documents. \r\n\r\nThe first is not true really.  There are 16 million versions that start with 0xff and we only published 34 drafts and implemented far fewer than that.  The second is no longer true as we removed the reservation from the registry.  Maybe just strike these sentences.",
      "createdAt": "2021-02-15T06:21:06Z",
      "updatedAt": "2021-02-22T10:59:58Z",
      "closedAt": "2021-02-22T10:59:58Z",
      "comments": []
    },
    {
      "number": 232,
      "id": "MDU6SXNzdWU4MDgyMjEyMzM=",
      "title": "Is manageability about version 1",
      "url": "https://github.com/quicwg/ops-drafts/issues/232",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "There's a lot of text that acknowledges the differences between version 1 and any version, but it's not really consistent throughout.\r\n\r\nFor instance, [Section 2.2](https://quicwg.org/ops-drafts/draft-ietf-quic-manageability.html#section-2.2) describes coalescing, which is specific to version 1, without making this distinction.\r\n\r\nI think that it would be better if it were explicitly about version 1, with those places where properties invariant called out.",
      "createdAt": "2021-02-15T06:26:37Z",
      "updatedAt": "2021-02-16T09:43:53Z",
      "closedAt": "2021-02-16T00:14:01Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Section 2 already says \r\n\r\n```\r\nThis document describes version 1 of the QUIC protocol, whose wire image is fully defined in [QUIC-TRANSPORT] and [QUIC-TLS].\r\n```",
          "createdAt": "2021-02-15T17:28:52Z",
          "updatedAt": "2021-02-15T17:28:52Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Indeed it does, but it isn't very good at sticking to that.  Probably worth just addressing at those points that the text goes off on a tangent.",
          "createdAt": "2021-02-16T00:14:01Z",
          "updatedAt": "2021-02-16T00:14:01Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Actually we got this feedback about versions a couple of times. And we tried to make it clear when it got pointed out. But maybe there are still places where it is not clear. So if you have more cases where it should explicitly pointed out, please tell us where. Otherwise we can try to have full read focus on this aspect later on when all other issues are resolved. ",
          "createdAt": "2021-02-16T09:43:53Z",
          "updatedAt": "2021-02-16T09:43:53Z"
        }
      ]
    },
    {
      "number": 234,
      "id": "MDU6SXNzdWU4MDg2NzE3MTI=",
      "title": "Recommend to reduce ACK rate on constraint links",
      "url": "https://github.com/quicwg/ops-drafts/issues/234",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "has PR",
        "meeting-agenda"
      ],
      "body": "This was brought up by @gorryfair in issue #182:\r\n\r\n\"I\u2019d also note that the volume of ACK traffic really can be a problem that QUIC needs to address, because QUIC over radio (of various types) can be significantly more expensive or lower performant than TCP, precisely because the control/ACK traffic is much more and there is no opportunity for network mitigation - hence it behoves QUIC implementors to use appropriate methods.\"\r\n\r\nI created this new, separate issue for this point and will close the old issue now.\r\n\r\nNote that there is already proposed text, copied into PR #233 ",
      "createdAt": "2021-02-15T16:25:00Z",
      "updatedAt": "2021-03-17T17:32:43Z",
      "closedAt": "2021-03-17T17:32:43Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR was merged",
          "createdAt": "2021-03-17T17:32:43Z",
          "updatedAt": "2021-03-17T17:32:43Z"
        }
      ]
    },
    {
      "number": 235,
      "id": "MDU6SXNzdWU4MDg5MDM4MTQ=",
      "title": "0-RTT is not limited by the initial congestion window",
      "url": "https://github.com/quicwg/ops-drafts/issues/235",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "editorial",
        "has PR"
      ],
      "body": "> The amount of 0-RTT protected data is limited by the initial congestion window, typically around 10 packets [RFC6928].\r\n\r\nHowever there are cases where the congestion window can increase when 0-RTT continues to be sent.  Some involve packet loss and so probably won't result in a net increase in the window, though the total number of packets might still exceed the initial window size.  Others, like TLS HelloRetryRequest or large certificates, involve additional round trips in the handshake.\r\n\r\nThe total amount of 0-RTT is also limited by remembered flow control values, though this is indirect as this counts stream data only and packets might be further padded.",
      "createdAt": "2021-02-16T00:50:15Z",
      "updatedAt": "2021-02-22T10:22:28Z",
      "closedAt": "2021-02-22T10:22:28Z",
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The original text sounds correct - cwnd doesn't limit the total number of packets sent when some of those packets are declared lost  - although we might want to clarify how the sender can still \"retransmit\" new packets in later RTTs.",
          "createdAt": "2021-02-16T10:01:13Z",
          "updatedAt": "2021-02-16T10:01:13Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "I read this as saying that if your initial congestion window is 10 packets, then you can't send more than 10 packets of 0-RTT.  That is not the case, even if it might commonly be that way.  A client can send 0-RTT over multiple RTTs if you consider HelloRetryRequest and large handshake flights.  In the extreme, there is no real limit to the amount of 0-RTT packets that can be exchanged.",
          "createdAt": "2021-02-16T10:21:12Z",
          "updatedAt": "2021-02-16T10:21:12Z"
        }
      ]
    },
    {
      "number": 236,
      "id": "MDU6SXNzdWU4MDg5MDUxNTM=",
      "title": "Split sentence on integrity protection",
      "url": "https://github.com/quicwg/ops-drafts/issues/236",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "editorial",
        "has PR"
      ],
      "body": "> Therefore, devices on path cannot alter any information or bits in QUIC packet headers, except specific parts of Initial packets, since alteration of header information will lead to a failed integrity check at the receiver, and can even lead to connection termination.\r\n\r\nThis mixes two things: damage to packets that cause integrity protection to fail, and modification of Initial packets.\r\n\r\nHow about:\r\n\r\n> Therefore, devices on path cannot alter any information or bits in QUIC packets, as a failed integrity check as a result of alterations to a packet will cause the receiver to discard the packet.  Some parts of Initial packets can be altered by removing and re-applying the authenticated encryption.  However, the cryptographic handshake validates many fields and any modifications in those fields will result in connection establishment failing.\r\n",
      "createdAt": "2021-02-16T00:54:55Z",
      "updatedAt": "2021-02-22T11:17:52Z",
      "closedAt": "2021-02-22T11:17:52Z",
      "comments": []
    },
    {
      "number": 237,
      "id": "MDU6SXNzdWU4MDg5MDkzNTE=",
      "title": "QUIC is distinguishable, but it's limited",
      "url": "https://github.com/quicwg/ops-drafts/issues/237",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "> The QUIC wire image is not specifically designed to be distinguishable from other UDP traffic.\r\n\r\nThis isn't entirely true, because we made specific allowances in QUIC version 1 to make QUIC distinct from realtime protocols, like STUN and RTP.  That is why the fixed bit is there.\r\n\r\nI don't have a good suggestion here; it's a key sentence, but it's wrong.",
      "createdAt": "2021-02-16T01:06:31Z",
      "updatedAt": "2021-02-22T13:11:04Z",
      "closedAt": "2021-02-22T13:11:04Z",
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "From an OPS point of view, I'd like to read the answer to: Can configurations be deployed that rely on a bit/pattern to classify QUIC traffic - i.e., current and future versions that the IETF expects to make?",
          "createdAt": "2021-02-16T09:54:22Z",
          "updatedAt": "2021-02-16T09:54:22Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The QUIC bit is discussed two paragraphs down. Intention here at this sentence at the beginning of the section was to say that there is no easy way to identify QUIC. The QUIC bit is only used for multiplexing with a set of known other transports on the same port. However, it still doesn't ensure you that you are looking at QUIC traffic.\r\n\r\nI think the text is basically correct. However, if anybody has a proposal to tweak the sentence, please let me know!",
          "createdAt": "2021-02-16T13:37:44Z",
          "updatedAt": "2021-02-16T13:37:44Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gorryfair this section is meant to answer your question with no. If that is not clear, can you propose what's missing?\r\n",
          "createdAt": "2021-02-16T13:38:21Z",
          "updatedAt": "2021-02-16T13:38:21Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Your answer works for me. I re-read and have no request to change.",
          "createdAt": "2021-02-16T16:17:08Z",
          "updatedAt": "2021-02-16T16:17:08Z"
        }
      ]
    },
    {
      "number": 238,
      "id": "MDU6SXNzdWU4MDg5MTEwMTM=",
      "title": "Echoing the version number is not invariant",
      "url": "https://github.com/quicwg/ops-drafts/issues/238",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "editorial",
        "has PR"
      ],
      "body": "> an Initial packet with a given version from a client to which a server responds with an Initial packet with the same version implies acceptance of that version.\r\n\r\nThis is not a declared invariant, but a property of version 1.  As this pertains to version numbers, it might be assumed to be invariant.  Maybe by scoping this to v1 explicitly here is the right answer.\r\n\r\n> an Initial packet with a version of 1 from a client to which a server responds with an Initial packet containing a version of 1 implies acceptance of QUIC version 1.\r\n",
      "createdAt": "2021-02-16T01:11:49Z",
      "updatedAt": "2021-02-22T10:22:48Z",
      "closedAt": "2021-02-22T10:22:48Z",
      "comments": []
    },
    {
      "number": 239,
      "id": "MDU6SXNzdWU4MDg5MTE4Njc=",
      "title": "Maybe you can link flows sometimes, but not always",
      "url": "https://github.com/quicwg/ops-drafts/issues/239",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "has PR"
      ],
      "body": "> Negotiated version cannot be identified for flows for which a handshake is not observed, such as in the case of connection migration; however, these flows can be associated with flows for which a version has been identified; see Section 3.4.\r\n\r\nThis implies that the version of QUIC being used in a given flow can be determined simply by linking that flows to one with a handshake.  That assumes that all the work we did to make flows difficult to link was for naught.  Maybe \"can\" should be a \"might\" or something along those lines.\r\n\r\nI don't really like the implication that the attempt be made to link flows like this either.",
      "createdAt": "2021-02-16T01:14:11Z",
      "updatedAt": "2021-02-22T11:03:59Z",
      "closedAt": "2021-02-22T11:03:59Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "In addition to this, the following text from Section 3.4 is not precise enough to be correct:\r\n\r\n> An observer keeping flow state can associate a connection ID with a given flow, and can associate a known flow with a new flow when when observing a packet sharing a connection ID and one endpoint address (IP address and port) with the known flow.\r\n\r\nThe assumption that the same flow persists might be good in some cases, but this does not necessarily hold in the case that the endpoint address is used by an endpoint that requires non-zero-length connection IDs.  This needs to be more precise if the claim is to hold.",
          "createdAt": "2021-02-16T01:19:55Z",
          "updatedAt": "2021-02-16T01:19:55Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Not sure what you mean by your second comment here. Of course if there is no connection ID you cannot associate it to anything...?\r\n\r\nWhat's missing? Can you propose something?",
          "createdAt": "2021-02-16T13:55:05Z",
          "updatedAt": "2021-02-16T13:55:05Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "On re-reading, it seems to be a little clearer.  It seems to be saying that an observer can match a particular connection ID with a flow and then, if the flow changes address at only one end without changing the connection ID, then it was subject to rebinding and can be assumed to be the same flow.\r\n\r\nHowever, it needs to specify that the connection ID association needs to be directional.  Maybe that is assumed, but it should be stated.  And it needs to say that this is unlikely to apply when the connection ID is empty.  ",
          "createdAt": "2021-02-17T00:34:28Z",
          "updatedAt": "2021-02-17T00:34:28Z"
        }
      ]
    },
    {
      "number": 240,
      "id": "MDU6SXNzdWU4MDg5MzUzMTI=",
      "title": "Endpoint cooperation for DoS mitigation",
      "url": "https://github.com/quicwg/ops-drafts/issues/240",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "-manageability",
        "needs-author"
      ],
      "body": "[Section 4.4](https://quicwg.org/ops-drafts/draft-ietf-quic-manageability.html#section-4.4) talks at length about detecting and mitigating against (D)DoS attacks, but this is written with the assumption of an uncooperative endpoint (likely to be, but unstated, a server).  All except the Retry text where the design specifically forces interventions to be cooperative.\r\n\r\nIt is entirely reasonable for DoS classification to be done with full knowledge of valid connection IDs or at least valid connection ID lengths.  If you allow for cooperation, the text might then explain how this might allow established flows to be separated from spoofed flows and new connection attempts.",
      "createdAt": "2021-02-16T02:30:06Z",
      "updatedAt": "2021-04-14T12:34:09Z",
      "closedAt": "2021-04-14T12:34:09Z",
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "+1 Perhaps either approach could be reasonable depending on the specific case? - Which DoS/DDoS mitigation fits best for an enterprise/user might vary depending on many things - including the role played by the endpoint and who controls the network and devices.",
          "createdAt": "2021-02-16T10:20:52Z",
          "updatedAt": "2021-02-16T10:20:52Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Can someone propose text?",
          "createdAt": "2021-02-16T13:55:58Z",
          "updatedAt": "2021-02-16T13:55:58Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In the last paragraph, it may be worth mentioning the 3x amplification limit during the handshake as well.\r\n\r\nPost-handshake DoS/DDoS is usually an application-level property which could affect TCP as much as QUIC, so the whole 5-tuple/CID aspect seems like it could be ignored commonly post-handshake.\r\n\r\nIs there a DoS expert we could ask to look at this text to see if it made sense, since I worry none of us are that person?",
          "createdAt": "2021-02-16T20:01:49Z",
          "updatedAt": "2021-02-16T20:01:49Z"
        },
        {
          "author": "ximaera",
          "authorAssociation": "NONE",
          "body": "@ianswett with TCP, the handshake could be completed by the DDoS \"classification\" engine without passing a bit of an information to the endpoint. That's called \"SYN proxying\".\r\n\r\nThat was, uh, a cool feature since otherwise the endpoint would've been flooded by handshake attempts. Even though TCP wasn't cooperating, this feature was powerful enough to allow to build an impenetrable DDoS mitigation infrastructure.\r\n\r\nPlease see also #93 .",
          "createdAt": "2021-02-26T16:35:34Z",
          "updatedAt": "2021-02-26T16:50:40Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I was thinking of something a little like this (and can make a PR if this is heading in a useful direction:\r\n\r\n\"On-path observation of the transport headers of packets can be used for various security functions. For example, Denial of Service (DOS) and Distributed DOS (DDOS) attacks against the infrastructure or against an endpoint can be detected and mitigated by characterising anomalous traffic. Other uses include support for security audits (e.g., verifying the compliance with ciphersuites); client and application fingerprinting for inventory; and to provide alerts for network intrusion detection and other next generation firewall functions. When using an encrypted transport, it is possible for endpoints to directly support these security functions; another method could use an on-path network device that relies on pattern inferences in the traffic and heuristics or machine learning instead of processing observed header information.\" \r\nThoughts?\r\n\r\n\r\n",
          "createdAt": "2021-04-09T14:22:29Z",
          "updatedAt": "2021-04-09T14:22:29Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think this text still doesn't address MT's original point fully - that an endpoint could even cooperate with an on-path device directly by e.g. sharing information about connection IDs.",
          "createdAt": "2021-04-09T14:31:26Z",
          "updatedAt": "2021-04-09T14:31:26Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes. Would happily add that the endpoint can \"cooperate with an on-path device directly by e.g. sharing information about connection IDs\". Is there more?",
          "createdAt": "2021-04-09T14:48:22Z",
          "updatedAt": "2021-04-09T14:48:22Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Re: @ximaera comment above: SYN proxying won't work in QUIC for the obvious crypto reasons, but a related approach that dynamically starts sending Retry over a certain rate limit might be almost as good. Retries are already partially covered in section 4.7. In this regime one could also drop 0RTT packets. Is this something it'd make sense to add to this document, or in QUIC-LB instead?\r\n",
          "createdAt": "2021-04-12T14:30:38Z",
          "updatedAt": "2021-04-12T14:30:38Z"
        }
      ]
    },
    {
      "number": 241,
      "id": "MDU6SXNzdWU4MDg5MzY4NTM=",
      "title": "Are endpoints the ones disabling security?",
      "url": "https://github.com/quicwg/ops-drafts/issues/241",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "-manageability",
        "NAT section"
      ],
      "body": "> In fact, NAT behavior that relies on CID may instead cause connection failure when endpoints change Connection ID, and disable important protocol security features. \r\n\r\nI don't think so, but the structure of [this sentence](https://quicwg.org/ops-drafts/draft-ietf-quic-manageability.html#section-4.8-1) makes it hard to tell.",
      "createdAt": "2021-02-16T02:35:11Z",
      "updatedAt": "2021-03-17T17:33:16Z",
      "closedAt": "2021-03-17T17:33:16Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We left this open as we didn't merge the bigger NAT section rewrite yet.",
          "createdAt": "2021-02-22T13:13:34Z",
          "updatedAt": "2021-02-22T13:13:34Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "was reworded with the larger rewrite",
          "createdAt": "2021-03-17T17:33:15Z",
          "updatedAt": "2021-03-17T17:33:15Z"
        }
      ]
    },
    {
      "number": 242,
      "id": "MDU6SXNzdWU4MDg5Mzk4NDQ=",
      "title": "Section 4.8.2.: Forcing address stability",
      "url": "https://github.com/quicwg/ops-drafts/issues/242",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "-manageability",
        "NAT section",
        "has PR"
      ],
      "body": "This section seems to be saying two things about a NAT that attempts to rewrite addresses to keep them stable:\r\n\r\n1. It won't work, because the NAT needs to know about all connection IDs, including those that have been negotiated without its knowledge.\r\n2. Even if it did work, which would require cooperation with endpoints, it would facilitate amplification attacks.\r\n\r\nThis is good, but I found it unclear.  It took a few readings to figure it out.",
      "createdAt": "2021-02-16T02:45:08Z",
      "updatedAt": "2021-03-17T17:34:05Z",
      "closedAt": "2021-03-17T17:34:05Z",
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "To what text does #242 relate?",
          "createdAt": "2021-02-16T09:46:56Z",
          "updatedAt": "2021-02-16T09:46:56Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "My apologies.  I managed to edit that out.  [Section 4.8.2](https://quicwg.org/ops-drafts/draft-ietf-quic-manageability.html#name-helping-with-routing-infras).",
          "createdAt": "2021-02-16T10:18:11Z",
          "updatedAt": "2021-02-16T10:18:11Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I made a larger rewrite in PR #257. Waiting for a review from @martinduke, however, I actually have couple of questions and I think there is still some redundancy.... ",
          "createdAt": "2021-02-16T16:12:42Z",
          "updatedAt": "2021-02-16T16:12:42Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "newest PR is #272 ",
          "createdAt": "2021-03-10T15:16:51Z",
          "updatedAt": "2021-03-10T15:16:51Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR was merged",
          "createdAt": "2021-03-17T17:34:05Z",
          "updatedAt": "2021-03-17T17:34:05Z"
        }
      ]
    },
    {
      "number": 243,
      "id": "MDU6SXNzdWU4MDg5NDQ4NDA=",
      "title": "No need to repeat connection ID requirements",
      "url": "https://github.com/quicwg/ops-drafts/issues/243",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "-manageability",
        "has PR"
      ],
      "body": "[This text](https://quicwg.org/ops-drafts/draft-ietf-quic-manageability.html#section-2.6-2) repeats requirements from the transport spec unnecessarily.\r\n\r\n> Server-generated connection IDs should seek to obscure any encoding, of routing identities or any other information. Exposing the server mapping would allow linkage of multiple IP addresses to the same host if the server also supports migration. Furthermore, this opens an attack vector on specific servers or pools.\r\n\r\nIt might be easier to just strike this.\r\n",
      "createdAt": "2021-02-16T03:01:29Z",
      "updatedAt": "2021-04-14T12:38:47Z",
      "closedAt": "2021-04-14T12:38:47Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is supposed to give advice to network operators e.g. in a load balancing setup where connection IDs are maybe generated centrally and distributed to the servers. ",
          "createdAt": "2021-02-16T10:38:11Z",
          "updatedAt": "2021-02-16T10:38:11Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "The surrounding text does. This paragraph does not.",
          "createdAt": "2021-02-16T21:21:43Z",
          "updatedAt": "2021-02-16T21:21:43Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> This is supposed to give advice to network operators e.g. in a load balancing setup where connection IDs are maybe generated centrally and distributed to the servers.\r\n\r\nI didn't think network operators who are in control of one of the endpoints would be considered in scope for this I-D. Surely the whole point is to advise network operators about what they should do with traffic they cannot hope to decrypt? If server endpoint operators are in scope, the Introduction should be revised. If they are not in scope, I could propose some words that essentially say \"Don't bother trying to infer information from specific parts of the connection ID, for these reasons.\"\r\n",
          "createdAt": "2021-04-08T17:23:38Z",
          "updatedAt": "2021-04-08T17:23:38Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Okay, I think I see the problem now. Is #310 better?",
          "createdAt": "2021-04-09T14:19:30Z",
          "updatedAt": "2021-04-09T14:19:30Z"
        }
      ]
    },
    {
      "number": 244,
      "id": "MDU6SXNzdWU4MDg5NDc2NjM=",
      "title": "Section 9 algorithm",
      "url": "https://github.com/quicwg/ops-drafts/issues/244",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "-manageability",
        "close without action?"
      ],
      "body": "I think that this section should be removed.\r\n\r\n(As an aside, calling something an appendix doesn't make it so.  You can put the text under `--- back` to make it an appendix proper.)",
      "createdAt": "2021-02-16T03:09:59Z",
      "updatedAt": "2021-04-19T03:21:55Z",
      "closedAt": "2021-04-12T14:11:07Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As we didn't get any further comments about this issue, proposal is to close without action.",
          "createdAt": "2021-04-09T13:49:58Z",
          "updatedAt": "2021-04-09T13:50:16Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Now properly in the appendix. Closing for now due to lack of additional feedback. Please reopen if there are other opinions to remove.",
          "createdAt": "2021-04-12T14:11:06Z",
          "updatedAt": "2021-04-12T14:11:06Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "I'd appreciate a defense for the text.  I don't think that we need to be documenting how to identify Google QUIC versions. Especially as those will soon disappear from the Internet.",
          "createdAt": "2021-04-19T03:21:55Z",
          "updatedAt": "2021-04-19T03:21:55Z"
        }
      ]
    },
    {
      "number": 258,
      "id": "MDU6SXNzdWU4MDk0NzQxODA=",
      "title": "Appl: TLS over TCP cannot be supported...",
      "url": "https://github.com/quicwg/ops-drafts/issues/258",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "editorial",
        "has PR"
      ],
      "body": "I couldn't immediately parse, and I'm assuming this is a NiT, but I can always be surprised by nuances in security-related text, so I'm writing this as an issue:\r\n/If TLS over TCP cannot be supported, the connection should be aborted instead, in order to enable the application to present a suitable prompt to the user that secure communication is unavailable./\r\nIf TLS over TCP cannot be supported, the connection should be aborted, and the application should present a suitable prompt to the user that secure communication is unavailable./",
      "createdAt": "2021-02-16T16:48:36Z",
      "updatedAt": "2021-04-12T12:41:11Z",
      "closedAt": "2021-04-12T12:41:11Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I guess we can remove the \"instead\" but why did you change the \"in order to\"? The reason to abort instead of just moving on without security is, so that the application recognises and can tell the user.",
          "createdAt": "2021-02-16T17:52:34Z",
          "updatedAt": "2021-04-09T13:48:04Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gorryfair ?",
          "createdAt": "2021-04-09T13:48:17Z",
          "updatedAt": "2021-04-09T13:48:17Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "OK on removing instead\r\nIs this better?:\r\n/If TLS over TCP cannot be supported, the connection should be aborted, and the application then ought to present a suitable prompt to the user that secure communication is unavailable./\r\n",
          "createdAt": "2021-04-09T14:03:42Z",
          "updatedAt": "2021-04-09T14:03:42Z"
        }
      ]
    },
    {
      "number": 263,
      "id": "MDU6SXNzdWU4MTAzMDQ5NDI=",
      "title": "QUIC doesn't necessarily expose Stream IDs?",
      "url": "https://github.com/quicwg/ops-drafts/issues/263",
      "state": "CLOSED",
      "author": "MikeBishop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "The ops draft currently says:\r\n\r\n> While a QUIC implementation must necessarily provide a way for an application\r\nto send data on separate streams, it does not necessarily expose stream\r\nidentifiers to the application (see, for example, {{QUIC-HTTP}}, Section 6)\r\neither at the sender or receiver end, so applications should not assume access\r\nto these identifiers.\r\n\r\nI don't see anything in Section 6 of HTTP/3 to support that claim.  In fact, HTTP/3 uses Stream IDs in the GOAWAY frame to indicate the last request the server processed; both client and server will require access to the identifiers of streams, or that information is impossible to generate and useless to receive.\r\n\r\nThe constraint that I tried to use when writing the HTTP draft was that the application layer has no control over the assignment of Stream IDs.  However, once it has requested and been given a stream, it can retrieve the ID of that stream and use it to reference the stream at the application layer.\r\n\r\nBy the same token, the application layer shouldn't assume it understands the relationship between stream types and Stream IDs; that may change in a future QUIC version, and it should rely on querying the stream properties to identify types.",
      "createdAt": "2021-02-17T15:50:05Z",
      "updatedAt": "2021-02-23T10:36:17Z",
      "closedAt": "2021-02-22T11:11:17Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Actually writing these constraints/assumptions down would be nice. Can you try to create a PR, @MikeBishop ?",
          "createdAt": "2021-02-17T17:21:58Z",
          "updatedAt": "2021-02-17T17:21:58Z"
        }
      ]
    },
    {
      "number": 264,
      "id": "MDU6SXNzdWU4MTAzMDkzNTI=",
      "title": "Is HTTP/2 our prioritization poster-child?",
      "url": "https://github.com/quicwg/ops-drafts/issues/264",
      "state": "CLOSED",
      "author": "MikeBishop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "editor-ready",
        "editorial"
      ],
      "body": "> an application protocol that runs on top of QUIC can define explicit messages\r\nfor signaling priority, such as those defined for HTTP/2\r\n\r\nFirst, if we retain this comment, it should probably have a reference to RFC 7540 and the appropriate section.\r\n\r\nHowever, as @mirjak noted in reply to a previous issue, this document is about QUIC, not TCP; the use of HTTP/2 as an exemplar seems out-of-place, particularly since we're actively deprecating that priority scheme.  Perhaps a reference to draft-ietf-httpbis-priority would be more appropriate?",
      "createdAt": "2021-02-17T15:55:03Z",
      "updatedAt": "2021-03-31T13:13:43Z",
      "closedAt": "2021-03-31T13:13:43Z",
      "comments": [
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree that a reference to draft-ietf-httpbis-priority would be more appropriate.",
          "createdAt": "2021-02-17T17:01:23Z",
          "updatedAt": "2021-02-17T17:01:23Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, sounds good. I'll create a PR if no-one else does it before me.",
          "createdAt": "2021-02-17T17:18:21Z",
          "updatedAt": "2021-02-17T17:18:21Z"
        }
      ]
    },
    {
      "number": 265,
      "id": "MDU6SXNzdWU4MTAzNTkxODM=",
      "title": "Version Negotiation integrity",
      "url": "https://github.com/quicwg/ops-drafts/issues/265",
      "state": "CLOSED",
      "author": "MikeBishop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "editor-ready",
        "editorial"
      ],
      "body": "> QUIC provides integrity protection for its version negotiation process.  This\r\nprocess assumes that the set of versions that a server supports is fixed.  This\r\ncomplicates the process for deploying new QUIC versions or disabling old\r\nversions when servers operate in clusters.\r\n\r\nThis functionality was removed from -transport, and appears to refer to text in draft-ietf-quic-version-negotiation, but that draft isn't referenced at all.",
      "createdAt": "2021-02-17T16:54:01Z",
      "updatedAt": "2021-03-31T13:14:12Z",
      "closedAt": "2021-03-31T13:14:12Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I can add a reference to draft-ietf-quic-version-negotiation and make clear that this is an extension and not part of the base spec.",
          "createdAt": "2021-02-17T17:23:25Z",
          "updatedAt": "2021-02-17T17:23:25Z"
        }
      ]
    },
    {
      "number": 269,
      "id": "MDU6SXNzdWU4MTAzODU5NTg=",
      "title": "Mention the datagram extension?",
      "url": "https://github.com/quicwg/ops-drafts/issues/269",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "has PR",
        "meeting-agenda"
      ],
      "body": "So far we don't mention any extension in the ops drafts, however, datagrams actually require a different interface and as such are important for an application to know about, therefore, I think it would be good to add a separate section in the applicability statement and mention it as a separate service over QUIC.",
      "createdAt": "2021-02-17T17:26:15Z",
      "updatedAt": "2021-03-17T16:34:23Z",
      "closedAt": "2021-03-17T16:34:23Z",
      "comments": [
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed, mentioning datagram seems very useful.",
          "createdAt": "2021-02-17T17:38:55Z",
          "updatedAt": "2021-02-17T17:38:55Z"
        }
      ]
    },
    {
      "number": 274,
      "id": "MDU6SXNzdWU4MTE0Njc3NzQ=",
      "title": "Unused references in manageability",
      "url": "https://github.com/quicwg/ops-drafts/issues/274",
      "state": "CLOSED",
      "author": "MikeBishop",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "[Ding2015] and [IPIM] are in the references of the manageability draft, but aren't actually... referenced anywhere.  That suggests either some text is missing or these entries are spurious.",
      "createdAt": "2021-02-18T21:20:58Z",
      "updatedAt": "2021-02-19T09:30:01Z",
      "closedAt": "2021-02-19T09:30:01Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes this has been already flagged by #189 and is fixed in #224 (which we will all merge on Monday when Brain is back). Thanks anyway!",
          "createdAt": "2021-02-19T09:30:01Z",
          "updatedAt": "2021-02-19T09:30:01Z"
        }
      ]
    },
    {
      "number": 276,
      "id": "MDU6SXNzdWU4MTIyOTU4ODA=",
      "title": "Manageability flight naming",
      "url": "https://github.com/quicwg/ops-drafts/issues/276",
      "state": "CLOSED",
      "author": "MikeBishop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "> In the nominal case, the QUIC handshake can be recognized on the wire through at\r\nleast four datagrams we'll call \"QUIC Client Hello\", \"QUIC Server Hello\", and\r\n\"Initial Completion\", and \"Handshake Completion\", for purposes of this\r\nillustration, as shown in {{fig-handshake}}.\r\n\r\nI mean, you can call them that for reference purposes, but there's no such thing as a \"QUIC Client Hello\" (or ClientHello).  Calling something \"Initial Completion\" when it might not contain any Initial packets might confuse people when they go looking for more details.\r\n\r\nMaybe \"Client Initial,\" \"Server Initial,\" \"Client Finished,\" and \"Server Finished\"?  It mixes layers, but those are at least things that occur in the referenced packets.",
      "createdAt": "2021-02-19T19:58:09Z",
      "updatedAt": "2021-04-14T12:06:32Z",
      "closedAt": "2021-04-14T12:06:32Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Or, to avoid using TLS message names consistently, s/Finished/Confirmation",
          "createdAt": "2021-02-20T22:12:28Z",
          "updatedAt": "2021-02-20T22:12:28Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Should I conclude from the absence of comment since February that we are all reasonably content with \"Client Initial\", \"Server Initial\", \"Client Completion\", and \"Server Completion\"? If so I'm happy to create the PR to save Brian a job. But I don't want to do that if these are not the best names.",
          "createdAt": "2021-04-08T17:08:08Z",
          "updatedAt": "2021-04-08T17:08:08Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This was assigned to Brian has he wanted to take a stab. ",
          "createdAt": "2021-04-08T19:33:21Z",
          "updatedAt": "2021-04-08T19:33:21Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That's fine I'll leave it to Brian.",
          "createdAt": "2021-04-09T16:56:17Z",
          "updatedAt": "2021-04-09T16:56:17Z"
        }
      ]
    },
    {
      "number": 278,
      "id": "MDU6SXNzdWU4MTMzODI0NTE=",
      "title": "Do we need to say more about padding and DPLPMTUD in manageability?",
      "url": "https://github.com/quicwg/ops-drafts/issues/278",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "This issue is branch of #194 where @gorryfair say:\r\n\r\n\"... Yes, it could be mentioned in manageability - since often QUIC packets might be rather uniform in size with occasional DLPMTUD probes?\"\r\n\r\n@mirjak said:\r\n\r\n\"Do we need still something for manageability? Or is that, at least partially, already addressed by #212 ?\"",
      "createdAt": "2021-02-22T10:50:46Z",
      "updatedAt": "2021-03-24T13:41:47Z",
      "closedAt": "2021-03-24T13:41:46Z",
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is a separate note to call out that a QUIC sender can probe the path to determine whether the PMTU can be increased. \r\n\r\nWhen #212 finally converges to text, we should check this is also covered.\r\n\r\n",
          "createdAt": "2021-02-22T11:56:53Z",
          "updatedAt": "2021-02-22T11:56:53Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This was covered in #212, which is now merged.",
          "createdAt": "2021-03-24T13:41:46Z",
          "updatedAt": "2021-03-24T13:41:46Z"
        }
      ]
    },
    {
      "number": 280,
      "id": "MDU6SXNzdWU4MTMzOTQxNjQ=",
      "title": "linking CIDs?",
      "url": "https://github.com/quicwg/ops-drafts/issues/280",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "meeting-agenda",
        "needs-author"
      ],
      "body": "This is branched of #239.\r\n\r\n@martinthomson said:\r\n\r\n\"However, it needs to specify that the connection ID association needs to be directional. Maybe that is assumed, but it should be stated. And it needs to say that this is unlikely to apply when the connection ID is empty.\"",
      "createdAt": "2021-02-22T11:04:41Z",
      "updatedAt": "2021-03-17T16:46:29Z",
      "closedAt": "2021-03-17T16:46:29Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinthomson I created PR #285. Does that address this point sufficiently?",
          "createdAt": "2021-03-04T15:13:45Z",
          "updatedAt": "2021-03-04T15:13:45Z"
        }
      ]
    },
    {
      "number": 283,
      "id": "MDU6SXNzdWU4MTQ0MDAxMDk=",
      "title": "Clarify Stream ID assignment",
      "url": "https://github.com/quicwg/ops-drafts/issues/283",
      "state": "CLOSED",
      "author": "mikkelfj",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "-applicability",
        "close without action?"
      ],
      "body": "Follow up to comment on #270 \r\n\r\nThe current text:\r\n\r\n> The method of allocating stream identifiers to streams opened by the application\r\nmight vary between transport implementations. Therefore, an application should\r\nnot assume a particular stream ID will be assigned to a stream that has not yet\r\nbeen allocated.  For example, HTTP/3 uses Stream IDs to refer to streams that\r\nhave already been opened, but makes no assumptions about future Stream IDs or\r\nthe way in which they are assigned.\r\n\r\nSpecifically \"An application should\r\nnot assume a particular stream ID will be assigned to a stream that has not yet\r\nbeen allocated. \"\r\n\r\nThis highly depends on the application protocol, not the QUIC transport API. It may be that a given QUIC transport protocol is unable to support the requirements of a QUIC application protocol, but it is the app protocol that decides. If a given  QUIC transport API only supports \"OpenNextStreamOfType(x)\" that might be enough to support HTTP/3. But it should be be that all app protocols follow the same constraints.\r\n\r\nHowever, it is reasonable to recommend that application level protocols attempts to avoid a dependency on a specific stream ID in order to be able to target a broader range of QUIC transport libraries and to avoid unnecessary dependencies while at the same time permitting this for specific use cases.",
      "createdAt": "2021-02-23T12:02:48Z",
      "updatedAt": "2021-04-12T14:11:54Z",
      "closedAt": "2021-04-12T14:11:54Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I not sure what you are missing here or what you think should be changed. For me the text is inline with what you say, which basically is: to be on the safe side you better make no assumption about how non-yet assigned ID will be used because there is no unified way how this is specified in the protocol spec. So, basically saying even if the interface seem to provide that, be careful here!",
          "createdAt": "2021-03-04T14:58:51Z",
          "updatedAt": "2021-03-04T14:58:51Z"
        },
        {
          "author": "mikkelfj",
          "authorAssociation": "NONE",
          "body": "The text\r\n\r\n\"An application should\r\nnot assume a particular stream ID will be assigned to a stream that has not yet\r\nbeen allocated. \"\r\n\r\nbasically says that you should not design protocols that rely on stream IDs have any particular meaning. But you could easily design such protocols safely, but it will only work for transport libraries that permit such close coordination.\r\n\r\nPersonally I think it is best to avoid such dependencies in most cases, but that shouldn't prevent special purpose protocols from existing. For example, a telemetric protocol might define that streams 1 through 100 (modulo stream type) each indicate a log level of implied severity.",
          "createdAt": "2021-03-04T22:14:59Z",
          "updatedAt": "2021-03-04T22:14:59Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is a recommendation not a normative SHOULD. We are only trying to provide guidance but if you are a specialised application and you know what you are doing you can of course do that.",
          "createdAt": "2021-03-05T16:48:24Z",
          "updatedAt": "2021-03-05T16:48:24Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@mikkelfj can we close this issue or would you like to propose a wording change?",
          "createdAt": "2021-03-31T13:30:07Z",
          "updatedAt": "2021-03-31T13:30:07Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Seeing no further action/suggestion, closing. Please reopen if there's a concrete change to make.",
          "createdAt": "2021-04-12T14:11:54Z",
          "updatedAt": "2021-04-12T14:11:54Z"
        }
      ]
    },
    {
      "number": 286,
      "id": "MDU6SXNzdWU4MjQ3Nzk1NjU=",
      "title": "Make it more clear that streams are not ordered",
      "url": "https://github.com/quicwg/ops-drafts/issues/286",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability",
        "editor-ready"
      ],
      "body": "Based on the discussion in webtrans at IETF-110, I guess we could be more explicit that QUIC streams do not guarantee to be received in any particular order.",
      "createdAt": "2021-03-08T17:24:11Z",
      "updatedAt": "2021-04-19T08:03:44Z",
      "closedAt": "2021-04-19T08:03:44Z",
      "comments": []
    },
    {
      "number": 289,
      "id": "MDU6SXNzdWU4Mjc3MzAzODU=",
      "title": "draft-ietf-quic-manageability-10 Feedback",
      "url": "https://github.com/quicwg/ops-drafts/issues/289",
      "state": "CLOSED",
      "author": "jaredmauch",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "-manageability",
        "close without action?",
        "editorial"
      ],
      "body": "Some feedback:\r\n\r\nSections 4.1, 3.5, 3.6 and 3.7 are all related and related to the same underlying principle, related flows and the need for them to be delivered in a predictable and consistent manner.  Is there a reason these are not in their own section or more closely tied to each other?  Are there any additional fields that should not be included in the flow calculation for future hardware or software implementors?",
      "createdAt": "2021-03-10T13:21:19Z",
      "updatedAt": "2021-04-12T14:13:36Z",
      "closedAt": "2021-04-12T14:13:36Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "3.x sections talk about things on a per-field basis, while 4.x sections address specific network management use cases, so there's a reason there's a little redundancy here.\r\n\r\nWe might look into grouping 3.5-3.7 as subsections of a new overarching section, though...",
          "createdAt": "2021-03-24T13:40:37Z",
          "updatedAt": "2021-03-24T13:40:37Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@jaredmauch can we close this issue? ",
          "createdAt": "2021-04-09T13:48:56Z",
          "updatedAt": "2021-04-09T13:48:56Z"
        }
      ]
    },
    {
      "number": 290,
      "id": "MDU6SXNzdWU4Mjc3NTA2Nzk=",
      "title": "draft-ietf-quic-manageability-10 Feedback 4.5",
      "url": "https://github.com/quicwg/ops-drafts/issues/290",
      "state": "CLOSED",
      "author": "jaredmauch",
      "authorAssociation": "NONE",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "UDP Filtering",
        "close without action?"
      ],
      "body": "You should really cite the port avoidance prior art: avoid-v4-udp-ports.  bind9 implemented this in #1440 which was implemented to avoid the problems that occurred after UDP/1434 was filtered by providers in response to the SQL Slammer attacks and the long term filtering that was left in place after this.\r\n\r\nIs there a described technique or measurement to determine what ports may be problematic?  \r\n\r\nMany operators have had to mitigate the damage of UDP based protocols on their networks and in attempt to limit the impact to well behaving ports and protocols deployed things in a limited scope, eg:\r\n\r\nhttps://mailman.nanog.org/pipermail/nanog/2018-March/094350.html\r\nhttp://mailman.nlnog.net/pipermail/nlnog/2018-March/002697.html\r\n\r\nLarge and small network operators are known to block or restrict ports and protocols due to the impact.   Akamai also has this implemented at our network edge in some locations today.\r\n\r\nWe have seen other protocols, eg: NTP start to move from 123 <-> 123 communication eg: draft-ietf-ntp-port-randomization which will face similar issues.  \r\n\r\nIs there a way to provide feedback of what ports may be limited or should be avoided?  How would an operator signal or configure this?\r\n",
      "createdAt": "2021-03-10T13:36:08Z",
      "updatedAt": "2021-04-12T15:12:32Z",
      "closedAt": "2021-04-12T14:16:01Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Currently most QUIC implementations are HTTP/3 and therefore use the https port 443. However QUIC is a general purpose transport protocol and therefore future application will likely use different ports. Also ports are not really meaningful to identify applications and as such I don't think there is any good advise we could give here. Or what are you missing? Can you maybe propose text?\r\n\r\nPlease also note that PR #305 proposes a (mostly) editorial update of this section.",
          "createdAt": "2021-03-25T10:33:42Z",
          "updatedAt": "2021-03-31T13:19:16Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@jaredmauch can we close this issue?",
          "createdAt": "2021-04-09T13:57:53Z",
          "updatedAt": "2021-04-09T13:57:53Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think this is a very interesting question, but it's a bit outside the scope of this document (as a user's manual for the wire image)...",
          "createdAt": "2021-04-12T14:16:01Z",
          "updatedAt": "2021-04-12T14:16:01Z"
        },
        {
          "author": "jaredmauch",
          "authorAssociation": "NONE",
          "body": "> @jaredmauch can we close this issue?\r\n\r\nAt your own peril I guess.  The question here of how this protocol will work long distance on networks that have had to deal with abusive applications is still a going concern.  I'll review the changes that went in via #305 but ignoring how other UDP based applications have had to avoid ports but doing it at a protocol level will result in poor performance for some flows.\r\n\r\nnetwork operators deployed these only after the pain from the protocol and application users reached a tipping point where it was no longer feasible to operate a network without these protections.  It's unclear to me how this transport will work reliably as more ports are likely to be added to operator policers over time.",
          "createdAt": "2021-04-12T14:23:58Z",
          "updatedAt": "2021-04-12T14:23:58Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "I agree with Brian and Mirja. This is an interesting question but since there is no single port number for the QUIC transport, I find that the question verges into an applicability / deployment concern. We (the QUIC WG) don't really have a document that covers that aspect of things today and I don't think we have enough experience with QUIC deployments to write an answer to the question yet. If the market figures out that, for example, any port other that UDP 443 is slow, then that seems an ok outcome while we figure things out. \r\n\r\nThere is no transport-level mechanism defined by QUIC for service discovery. QUIC requires Application Protocol Layer Negotiation (ALPN) be used when opening a connection, so listening applications can share the same port number and dynamically dispatch QUIC flows based on the selected application. The reduces some of the concerns about QUIC-based applications competing for UDP numbers.\r\n",
          "createdAt": "2021-04-12T15:12:22Z",
          "updatedAt": "2021-04-12T15:12:32Z"
        }
      ]
    },
    {
      "number": 292,
      "id": "MDU6SXNzdWU4MzMwODc4MzA=",
      "title": "Applicability could say more about ALPN",
      "url": "https://github.com/quicwg/ops-drafts/issues/292",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "MEMBER",
      "assignees": [
        "LPardue"
      ],
      "labels": [
        "-applicability",
        "editor-ready"
      ],
      "body": "Sorry I missed this during the WGLC. https://quicwg.org/ops-drafts/draft-ietf-quic-applicability.html#section-6 contains a lot of good stuff but it seems like it could say more about ALPN.\r\n\r\n1) As an editorial comment ALPN is mentioned without expanding the acronym. The term `ALPN token` is used, which doesn't seem to be defined anywhere other than the HTTP/3 specification (which might be a problem or not)\r\n\r\n2) More substantial, there isn't really mention about any of the TLS or negotiation aspects of ALPN. We might see people try to offer multiple Application Protocols on the same UDP port, and using ALPN to select from them. Maybe this is more likely when QUIC can operate as both a stream-based and datagram-based protocol. \r\n\r\n3) Related to 2, new application protocols over QUIC need an ALPN protocol identifier. This is distinct from the Alt-Svc discussion in Section 6; since other protocols won't use Alt-Svc, they might overlook things. The ALPN space is large but we might benefit from some text that gives people pointers on how to register the ALPN IDs they want to use before someone gets them. For reference, I started a list of protocols at https://github.com/quicwg/base-drafts/wiki/ALPN-IDs-used-with-QUIC. Not all of those need formal registration but it is a nice illustration.",
      "createdAt": "2021-03-16T18:30:39Z",
      "updatedAt": "2021-03-31T13:12:33Z",
      "closedAt": "2021-03-31T13:12:33Z",
      "comments": [
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "I'm unfortunately not coming up with some useful/actionable text here. Maybe @martinthomson or @MikeBishop has some insight that could help?\r\n",
          "createdAt": "2021-03-24T06:39:20Z",
          "updatedAt": "2021-03-24T06:39:20Z"
        },
        {
          "author": "MikeBishop",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It feels like the best way to incorporate this is to expand the \"protocol doesn't imply port\" discussion to also include \"port doesn't imply protocol\" before concluding with \"not being able to safely make this inference is hard.\"  #302 has a first stab at this, though it doesn't cover as much as @LPardue first suggested.  Feel free to expand on it.",
          "createdAt": "2021-03-24T20:20:31Z",
          "updatedAt": "2021-03-24T20:20:31Z"
        }
      ]
    },
    {
      "number": 293,
      "id": "MDU6SXNzdWU4MzM5NzQ2NTE=",
      "title": "Stronger caution on using CID",
      "url": "https://github.com/quicwg/ops-drafts/issues/293",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "UDP Filtering"
      ],
      "body": "@ianswett said in PR #272 on section \"Passive Network Performance Measurement and Troubleshooting\":\r\n\r\n \"I think the caution against using Connection ID needs to be a lot stronger. Things will break, users will notice. I realize that implementations have to use this to enforce that, but I believe some already are. See a comment below as well.\"",
      "createdAt": "2021-03-17T16:35:18Z",
      "updatedAt": "2021-03-31T13:17:21Z",
      "closedAt": "2021-03-31T13:17:21Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ianswett is PR #306 better? Note that you should also review the previous paragraphs as I believe the problems are described there clearly already.",
          "createdAt": "2021-03-25T09:54:27Z",
          "updatedAt": "2021-03-25T09:54:27Z"
        }
      ]
    },
    {
      "number": 294,
      "id": "MDU6SXNzdWU4MzM5NzU0NDY=",
      "title": "UDP Policing or maybe Blocking?",
      "url": "https://github.com/quicwg/ops-drafts/issues/294",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "UDP Filtering",
        "has PR"
      ],
      "body": "@ianswett said in PR #272 on the section title \"UDP Policing\":\r\n\r\n\"Policing has a slightly different meaning(token bucket policer) that's widely used, so can we find a different term in this context?\"",
      "createdAt": "2021-03-17T16:36:17Z",
      "updatedAt": "2021-04-14T12:50:01Z",
      "closedAt": "2021-04-14T12:50:00Z",
      "comments": [
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Looks like #305 will resolve this.",
          "createdAt": "2021-04-08T16:09:23Z",
          "updatedAt": "2021-04-08T16:09:23Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, #305 is supposed to resolve this. Not sure why this is not correctly linked...",
          "createdAt": "2021-04-09T13:58:54Z",
          "updatedAt": "2021-04-09T13:58:54Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "#305 is merged",
          "createdAt": "2021-04-14T12:50:00Z",
          "updatedAt": "2021-04-14T12:50:00Z"
        }
      ]
    },
    {
      "number": 295,
      "id": "MDU6SXNzdWU4MzM5NzY4MTA=",
      "title": "Recommendation about using 4-tuple for NAT",
      "url": "https://github.com/quicwg/ops-drafts/issues/295",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "UDP Filtering"
      ],
      "body": "Comment from PR #272 from @ianswett on UDP policing:\r\n\r\n\"This is recommending something that relies on the 4-tuple, but particularly if there's another NAT involved, the 4-tuple may not be stable. So this puts connections in a situation where the handshake completes, they use the connection for a bit, a NAT rebind occurs, and then the connection is blackholed.\r\n\r\nThere are defenses against this problem, but this seems like a fairly dangerous recommendation.\"\r\n",
      "createdAt": "2021-03-17T16:37:56Z",
      "updatedAt": "2021-03-31T13:17:08Z",
      "closedAt": "2021-03-31T13:17:08Z",
      "comments": []
    },
    {
      "number": 296,
      "id": "MDU6SXNzdWU4MzM5Nzg2MDk=",
      "title": "Dropping of UDP traffic",
      "url": "https://github.com/quicwg/ops-drafts/issues/296",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "UDP Filtering",
        "has PR"
      ],
      "body": "Comment from @martinthomson from PR #272 on UDP Policing about this phrase:\r\n\r\n`space that corresponds to the fraction of UDP traffic one wishes to drop.`\r\n\r\n\"The extra words don't really help here. If anything, you need to highlight the need to block only a subset of addresses rather than a subset of packets.\"",
      "createdAt": "2021-03-17T16:40:04Z",
      "updatedAt": "2021-04-14T12:49:35Z",
      "closedAt": "2021-04-14T12:49:35Z",
      "comments": [
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'd like to question whether arbitrarily applying a limit to UDP flows is a sensible recommendation over the coming years. QUIC will dominate internet traffic (I will estimate 85% or more, by bandwidth, mainly due to HTTP/3). In that end state what is the protective value of setting a ceiling on the amount of UDP? Yes it permits continuation of service for some during an unmitigated UDP DDoS, if they can switch to TCP. But in the presence of active mitigation, perhaps a limit is unwise?",
          "createdAt": "2021-04-08T16:54:27Z",
          "updatedAt": "2021-04-08T16:54:27Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This document is not at all recommending to set such a limit. It's just saying that if you really think you need that limit, here is the way to do it right. However, maybe we should be more clear that this is not a recommendation for such a limit.",
          "createdAt": "2021-04-08T19:31:33Z",
          "updatedAt": "2021-04-08T19:31:33Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Proposed some wording updates in #305 ",
          "createdAt": "2021-04-09T14:06:09Z",
          "updatedAt": "2021-04-09T14:06:17Z"
        }
      ]
    },
    {
      "number": 297,
      "id": "MDU6SXNzdWU4MzkzMzMxOTQ=",
      "title": "Better discuss the nuance between transport error codes and application error codes",
      "url": "https://github.com/quicwg/ops-drafts/issues/297",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "MEMBER",
      "assignees": [
        "LPardue"
      ],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "Mention of error codes is restricted to the section `Connection Closure`, which ends up also talking about STOP_SENDING and RESET_STREAM. I think it would be clearer to have a standalone section that describes the different error code spaces and the xref that in the other sections that deal with stream usage and connection closure.",
      "createdAt": "2021-03-24T04:25:58Z",
      "updatedAt": "2021-04-14T12:15:10Z",
      "closedAt": "2021-04-14T12:15:10Z",
      "comments": []
    },
    {
      "number": 301,
      "id": "MDU6SXNzdWU4Mzk3MjQwNjI=",
      "title": "Merge sections 4.5 (Filtering Behavior) and 4.6 (UDP Policing)",
      "url": "https://github.com/quicwg/ops-drafts/issues/301",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "UDP Filtering"
      ],
      "body": "These two sections are slightly redundant, and could easily be merged because the advice they give is more or less identical.",
      "createdAt": "2021-03-24T13:27:42Z",
      "updatedAt": "2021-04-20T18:37:30Z",
      "closedAt": "2021-04-20T18:37:30Z",
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think better to group these two!\r\n\r\nThe current filtering text describes \"possible packet filtering behaviors that relate to NATs\". I suggest an initial series of packet *ALSO* traverse other domain edge devices (such as DDOS detection, NIDS, etc) in the same way, so we should be clear that NAT/NAPT is an example:-)",
          "createdAt": "2021-04-15T09:29:17Z",
          "updatedAt": "2021-04-15T09:29:17Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "discussion on 19 April editor's meeting: there's been a lot of minor editorial refactoring that improves the flow of the doc, making this merge less necessary. \r\n\r\nStill need to make sure we have examples other than NAT, though.",
          "createdAt": "2021-04-19T08:25:24Z",
          "updatedAt": "2021-04-19T08:25:24Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "multiple-examples fixed in #321 ",
          "createdAt": "2021-04-20T18:37:30Z",
          "updatedAt": "2021-04-20T18:37:30Z"
        }
      ]
    },
    {
      "number": 325,
      "id": "MDU6SXNzdWU4NjYwNzM3OTQ=",
      "title": "Guiding Path MTU will impact all IP traffic sharing path",
      "url": "https://github.com/quicwg/ops-drafts/issues/325",
      "state": "CLOSED",
      "author": "gloinul",
      "authorAssociation": "NONE",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "So Section 4.10 in manageability-11 \"Guiding Path MTU\" discusses dropping QUIC packets above a configured limits that are less than the normal PMTU and also sending an ICMP PTB message back when doing this. I think the text in this section would benefit from an additional clarification that implementing this can impact all IP traffic to and from the involved endpoint pairs. The reasons for this is that RFC 8201 recommend that endpoints that receive IPv6 ICMPv6 PTBs cache these messages in relation to a implementation specific representation of the path. Thus, any IPv6 packets sent from the endpoint towards a destination which the implementation considers being the same path will have a PMTU applied according to the value in the PTB. \r\n\r\nFor example if you have an endpoint in an access network and a datacenter front-end that fronts both HTTP/3 servers and a DNS service that the endpoint uses, then the DNS message size would be fragmented to the lower value than the absolute PMTU. \r\n\r\nI don't see any major issue with this, but I think the document should be clear on the potential implications of applying this method to QUIC flows. ",
      "createdAt": "2021-04-23T12:40:15Z",
      "updatedAt": "2021-05-19T13:15:17Z",
      "closedAt": "2021-05-19T13:15:17Z",
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes if a node updates it's IP cache (which is a valid approach), this impacts other flows sharing the same \"path\" where the notion of path needs thought (RFC8201, s5.2).\r\n\r\nI'm noting that RFC8899 explicity says: \"The PMTU value calculated from the PLPMTU MAY also be stored with the corresponding entry associated with the destination in the IP layer cache and used by other PL instances.\" This was a MAY because of the potential impact on other flows.\r\n\r\nWhen the IPv6 RFC was updated, we added some caution about ECMP, etc. which is a hint at the same problem.\r\n",
          "createdAt": "2021-05-10T13:10:49Z",
          "updatedAt": "2021-05-10T13:10:49Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I can review this.",
          "createdAt": "2021-05-12T13:52:57Z",
          "updatedAt": "2021-05-12T13:52:57Z"
        }
      ]
    },
    {
      "number": 329,
      "id": "MDU6SXNzdWU4NzcxMTE5MzQ=",
      "title": "Section 4.5 of applicability needs paragraph breaks",
      "url": "https://github.com/quicwg/ops-drafts/issues/329",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "editorial"
      ],
      "body": "That mega paragraph has a bunch of good concepts, but it's all run together into a single blob, which makes it a bit hard to follow.",
      "createdAt": "2021-05-06T06:05:55Z",
      "updatedAt": "2021-05-26T11:46:50Z",
      "closedAt": "2021-05-26T11:46:50Z",
      "comments": []
    },
    {
      "number": 330,
      "id": "MDU6SXNzdWU4NzcxMTQzNDE=",
      "title": "ACK generation",
      "url": "https://github.com/quicwg/ops-drafts/issues/330",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "check-on-list"
      ],
      "body": "There is text in the transport document on reducing ACK frequency.  I think that that is sufficient.  As this is more about performance tuning for implementers of the QUIC transport itself, it might be best to remove this section.",
      "createdAt": "2021-05-06T06:09:36Z",
      "updatedAt": "2021-06-30T11:09:01Z",
      "closedAt": "2021-06-30T11:09:01Z",
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am going to argue aganist this. It's a valid operational concern for a current network operator (at least any operator that does radio capacity assignment) and an apps developer. Although QUIC ACKs are something an endpoint might/ought to optimise, it was not really resolved in the core spec. QUIC can be more greedy on return capacity than TCP practically would when on-path mitigations are used.",
          "createdAt": "2021-05-10T12:54:41Z",
          "updatedAt": "2021-05-10T12:54:41Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This section was added based on comments from previous last call. I wouldn't want to remove it based on only one comment here. If more discussion is needed, we can bring it to the list. ",
          "createdAt": "2021-05-10T13:00:57Z",
          "updatedAt": "2021-05-10T13:00:57Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "I might agree with Martin.\r\n\r\nThe document states \"... Its intended audience is designers of application protocol mappings to QUIC, and implementors of these application protocols\", and arguably the concerns about ACK frequency are not the concerns of the target audience. What can an application layer person do about this realistically? I don't think we they can change the app protocol design around this transport behaviour.\r\n\r\nThat's not to say that the advice is bad. But I think the section would be stronger if it said plainly the caveat that Gorry just mentioned - applications using QUIC may find that the return traffic is more verbose than TCP, due to the differences in ACK generation and optimizations that have been applied. ",
          "createdAt": "2021-05-26T13:58:48Z",
          "updatedAt": "2021-05-26T13:58:48Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I have mixed feelings on this, but I think there may be some things worth saying that are applicable to this audience.\r\n\r\nI think we need to change the existing text to clearly state that applications using QUIC may find that ACKs consume more resources, and cite transport if possible.\r\n\r\nAdditionally, I think it's worth calling out that the ACK policy of QUIC v1 (without something like ACK-frequency) is designed to be similar to TCP, and may not be optimal for the full set of applications that QUIC can support.  Realtime/WebRTC as well as VPN applications come to mind.",
          "createdAt": "2021-05-27T14:25:24Z",
          "updatedAt": "2021-05-27T14:25:24Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@LPardue there is also a section on ACK traffic in the manageability statement:\r\n\r\n```\r\nDistinguishing Acknowledgment Traffic\r\n\r\nSome deployed in-network functions distinguish pure-acknowledgment (ACK) packets from packets carrying upper-layer data in order to attempt to enhance performance, for example by queueing ACKs differently or manipulating ACK signaling {{?RFC3449}}. Distinguishing ACK packets is possible in TCP, but is not supported by QUIC, since acknowledgment signaling is carried inside QUIC's encrypted payload, and ACK manipulation is impossible. Specifically, heuristics attempting to distinguish ACK-only packets from payload-carrying packets based on packet size are likely to fail, and are not recommended to use as a way to construe internals of QUIC's operation as those mechanisms can change, e.g., due to the use of extensions.\r\n```",
          "createdAt": "2021-06-02T16:30:06Z",
          "updatedAt": "2021-06-02T16:30:06Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gorryfair @ianswett can anybody propose a PR? However, I think this would be a PR against the section on ACK traffic in the manageability statement if the intended audience is network operators.",
          "createdAt": "2021-06-02T16:31:38Z",
          "updatedAt": "2021-06-02T16:31:38Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "For the applicability statement I created PR #386 providing some more explanations. Does that help or do people still prefer to drop/move more considerations to the manageability statement? @gorryfair @martinthomson @ianswett @LPardue ",
          "createdAt": "2021-06-02T16:42:58Z",
          "updatedAt": "2021-06-02T16:42:58Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for the PR, I think it's heading in a fairly good direction.  But if people want to remove it from this draft, I'm not going to stand in your way.",
          "createdAt": "2021-06-02T17:46:49Z",
          "updatedAt": "2021-06-02T17:46:49Z"
        }
      ]
    },
    {
      "number": 339,
      "id": "MDU6SXNzdWU4NzcxNTUzNDA=",
      "title": "QUIC *is* designed to be distinguishable",
      "url": "https://github.com/quicwg/ops-drafts/issues/339",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "> The QUIC wire image is not specifically designed to be distinguishable from other UDP traffic.\r\n\r\nIt is specifically designed to allow for multiplexing of QUIC with real-time protocols.  See RFC 7983.",
      "createdAt": "2021-05-06T07:06:12Z",
      "updatedAt": "2021-05-19T12:35:07Z",
      "closedAt": "2021-05-19T12:35:07Z",
      "comments": [
        {
          "author": "SpencerDawkins",
          "authorAssociation": "NONE",
          "body": "@martinthomson, is this issue conflating what endpoints can distinguish and what anyone else can distinguish?\r\n\r\nI'm guessing that's the case, but it would be good to be clear about this, especially in the ops drafts.\r\n\r\nAgain, I'm being informed here about what @LPardue's issue being addressed in https://github.com/ietf-wg-mops/draft-ietf-mops-streaming-opcons/pull/35 in MOPS should say. So thank you for opening the issue here!",
          "createdAt": "2021-05-09T16:07:43Z",
          "updatedAt": "2021-05-09T16:08:54Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "@SpencerDawkins, you are right to point that out.  If we consider this about observers, then this text is probably OK.  I would say that it needs qualification to be properly correct though.  We might reasonably assume that the statement applies only to \"a passive observer in the network\", as noted in the top of the section, but the risk that this statement be taken out of context is strong (it's a nice clear sound bite).\r\n\r\nThe same section later mentions RFC 7983.  That text could also be improved in this regard.",
          "createdAt": "2021-05-10T01:55:51Z",
          "updatedAt": "2021-05-10T01:55:51Z"
        }
      ]
    },
    {
      "number": 340,
      "id": "MDU6SXNzdWU4NzcxNTc0NDE=",
      "title": "HTTP/3 uses UDP port 443 by convention",
      "url": "https://github.com/quicwg/ops-drafts/issues/340",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "> HTTP/3 uses UDP port 443 by default\r\n\r\nThis is not entirely true.  As we have HTTPS records and Alternative Services, there is no case where HTTP/3 goes without a means of signaling a port number.  So there is no real \"default\" as far as it goes.  It's just that we reserved the number and we tend to use that port number by convention.",
      "createdAt": "2021-05-06T07:08:49Z",
      "updatedAt": "2021-05-19T12:23:59Z",
      "closedAt": "2021-05-19T12:23:59Z",
      "comments": [
        {
          "author": "SpencerDawkins",
          "authorAssociation": "NONE",
          "body": "For what it's worth, @LPardue and I were talking about this wrt https://github.com/ietf-wg-mops/draft-ietf-mops-streaming-opcons/pull/35 in MOPS, so the timing of this issue in QUIC was very helpful. Thank you for that. I'm using \"by convention\", at his suggestion. ",
          "createdAt": "2021-05-09T15:57:18Z",
          "updatedAt": "2021-05-09T15:57:18Z"
        }
      ]
    },
    {
      "number": 342,
      "id": "MDU6SXNzdWU4NzcxNjM2NDM=",
      "title": "Is identification of version 1 ossification?",
      "url": "https://github.com/quicwg/ops-drafts/issues/342",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "editor-ready"
      ],
      "body": "Is this a promise?\r\n\r\n> An in-network observer assuming that a set of packets belongs to a QUIC flow can infer the version number in use by observing the handshake: for QUIC version 1, if the version number in the Initial packet from a client is the same as the version number in the Initial packet of the server response, that version has been accepted by both endpoints to be used for the rest of the connection.\r\n\r\nBecause there are a number of designs floating around that would allow a client and server to agree - out of band or by prior arrangement - that version 1 means something else entirely.\r\n\r\nIf the above were a promise, that's perhaps reasonable.  It is an interpretation that seems consistent with the invariants.  However, the invariants don't make this particular (that was deliberate), so this is technically stretching it.\r\n\r\nThis might be better phrased with a \"might infer the version number in use\" to admit the possibility of error.",
      "createdAt": "2021-05-06T07:16:41Z",
      "updatedAt": "2021-06-02T12:05:45Z",
      "closedAt": "2021-06-02T12:05:45Z",
      "comments": []
    },
    {
      "number": 344,
      "id": "MDU6SXNzdWU4NzcxNzExNzY=",
      "title": "Parsing Initials to get the DCID",
      "url": "https://github.com/quicwg/ops-drafts/issues/344",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "... doesn't make it clear that only the Initial from the client (and only those sent before receiving packets from the server) contain a Destination Connection ID field that can be used to decrypt the packet.  Any initial from the server, or any initial sent by a client after receiving Initial packets from the server, probably won't work.",
      "createdAt": "2021-05-06T07:25:48Z",
      "updatedAt": "2021-06-02T12:08:42Z",
      "closedAt": "2021-06-02T12:08:42Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Hmm, this is the last paragraph.  Too late?",
          "createdAt": "2021-05-06T07:26:16Z",
          "updatedAt": "2021-05-06T07:26:16Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "More broadly, it would be nice if Sec 2.4 discussed the property that the server CID changes pretty much immediately. We wouldn't want people to bind to a 2-tuple of CIDs and have that immediately fail.",
          "createdAt": "2021-05-10T22:23:32Z",
          "updatedAt": "2021-05-10T22:23:32Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinduke I create PR #376 based on your comment. Is that sufficient?\r\n\r\n@martinthomson which section are you talking about?",
          "createdAt": "2021-05-26T08:50:11Z",
          "updatedAt": "2021-05-26T08:50:11Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think #380 will fix @martinthomson's comment here.",
          "createdAt": "2021-05-26T12:01:28Z",
          "updatedAt": "2021-05-26T12:01:28Z"
        }
      ]
    },
    {
      "number": 346,
      "id": "MDU6SXNzdWU4NzcxNzkzNDU=",
      "title": "Are we recommending shorter timeouts for middleboxes?",
      "url": "https://github.com/quicwg/ops-drafts/issues/346",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "> [RFC4787] requires a timeout that is not less than 2 minutes for most UDP traffic. However, in practice, timers are sometimes lower, in the range of 30 to 60 seconds.\r\n\r\nAs this is advice for network operators and middlebox vendors, this reads to me as permission to use a lower timeout.  I think that it still makes sense to maintain the recommendation in RFC 4787.  The advice for applications (don't rely on 2 minutes) still applies, but a 2 minute recommendation is worth sticking to.",
      "createdAt": "2021-05-06T07:35:55Z",
      "updatedAt": "2021-05-19T12:56:02Z",
      "closedAt": "2021-05-19T12:56:02Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I thought the text is pretty clear in saying that a bit later:\r\n\r\n```\r\nFor these reasons, the limits in {{?RFC4787}} are important to avoid black-holing of packets (and hence avoid interrupting the flow of data to the client), especially where devices are able to distinguish QUIC traffic from other UDP payloads.\r\n```\r\n\r\nI would rather want to keep this part because the message really is: yes we know these too short timers are implemented for UDP but please, please use at least 2 minutes for QUIC.\r\n\r\nMaybe removing some paragraph breaks would make it clearer that these parts belong together?\r\n\r\nAlso this part got now edited quite extensively, so I rather not change it again...",
          "createdAt": "2021-05-06T08:50:54Z",
          "updatedAt": "2021-05-06T08:50:54Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Each of the sentences looks fine to me, but together I also have a hard time seeing the recommendation v. current experience. Here is a proposal: #350.",
          "createdAt": "2021-05-10T12:05:25Z",
          "updatedAt": "2021-05-10T12:05:25Z"
        }
      ]
    },
    {
      "number": 351,
      "id": "MDU6SXNzdWU4ODQxODg0NjQ=",
      "title": "Remove text on distinguishing old gQUIC versions",
      "url": "https://github.com/quicwg/ops-drafts/issues/351",
      "state": "CLOSED",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "By the time this document is published, old(ie: Q043) versions of gQUIC that aren't compatible with the IETF QUIC invariants should be gone from the internet or very close, so I'd suggest removing any text specific to it.\r\n\r\nhttps://github.com/quicwg/ops-drafts/blob/master/draft-ietf-quic-manageability.md#distinguishing-ietf-quic-and-google-quic-versions-sec-google-version\r\n\r\nIt's possible some new text on distinguishing IETF QUIC version 1 is still useful, since two sections reference this appendix.\r\n\r\n\r\n",
      "createdAt": "2021-05-10T13:08:49Z",
      "updatedAt": "2021-05-26T11:52:38Z",
      "closedAt": "2021-05-26T11:52:38Z",
      "comments": []
    },
    {
      "number": 352,
      "id": "MDU6SXNzdWU4ODQyODE2MTI=",
      "title": "Clarify coalescing and multiple packets in \"The QUIC Handshake\" section",
      "url": "https://github.com/quicwg/ops-drafts/issues/352",
      "state": "CLOSED",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "ianswett"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "QUIC handshakes may or may not coalesce packets, which is stated, but I'm worried it could be missed by a reader.\r\n\r\nI think it'd be good to clarify that any portion of the server or client flight could span multiple datagrams.\r\n\r\nIn particular, I'm worried this paragraph could mislead people, because unless the connection is resumed, the Handshake CRYPTO data typically spans multiple datagrams.  Similarly, the client or server's Initial can span multiple datagrams, though that's not currently common:\r\n> A typical handshake starts with the client sending of a Client Initial datagram as shown in {{fig-client-initial}}, which elicits a Server Initial datagram as shown in {{fig-server-initial}} typically containing three packets: an Initial packet with the Server Initial, a Handshake packet with the rest of the server's side of the TLS handshake, and initial 1-RTT data, if present.\"\r\n\r\n",
      "createdAt": "2021-05-10T13:55:54Z",
      "updatedAt": "2021-06-14T07:28:35Z",
      "closedAt": "2021-06-14T07:28:35Z",
      "comments": [
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think some clarity about multiple packets/datagrams would be helpful in the Extracting SNI section as well: https://github.com/quicwg/ops-drafts/blob/master/draft-ietf-quic-manageability.md#extracting-server-name-indication-sni-information\r\n\r\nSpecifically:\r\n1) Client initial data can span multiple datagrams, and the SNI could be in any of them.\r\n2) A single client Initial packet can contain multiple CRYPTO frames, and there's no strict requirement they're in order of offset.",
          "createdAt": "2021-05-10T14:46:46Z",
          "updatedAt": "2021-05-10T14:46:46Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ianswett can you maybe propose a PR? :-)",
          "createdAt": "2021-05-10T14:52:47Z",
          "updatedAt": "2021-05-10T14:52:47Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, possibly later today after I finish reviewing the draft.",
          "createdAt": "2021-05-10T15:07:00Z",
          "updatedAt": "2021-05-10T15:07:00Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ianswett are you still planning to do a PR here?",
          "createdAt": "2021-05-26T09:40:09Z",
          "updatedAt": "2021-05-26T09:40:09Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I will unless someone beats me to it, but I've been on paternity leave for 10 days.  @DavidSchinazi had some suggested text for the SNI section, but I can try to fix \"The QUIC Handshake\" and assume David's text is a good start for SNI.",
          "createdAt": "2021-05-27T14:30:48Z",
          "updatedAt": "2021-05-27T14:30:48Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "While writing the PR, I discovered a problem I'm not sure how to fix, which is how does an observer know when the handshake is complete for the server, given the server can start using 1-RTT keys immediately after receiving the client hello?\r\n\r\nReceipt of the client's 1-RTT packet doesn't guarantee anything, because the server can't process it if it doesn't have keys.",
          "createdAt": "2021-06-03T08:30:43Z",
          "updatedAt": "2021-06-03T08:30:43Z"
        }
      ]
    },
    {
      "number": 354,
      "id": "MDU6SXNzdWU4ODQ4OTE0MjA=",
      "title": "Are client-requested Connection IDs atypical?",
      "url": "https://github.com/quicwg/ops-drafts/issues/354",
      "state": "CLOSED",
      "author": "MikeBishop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "editor-ready"
      ],
      "body": "> Client and server negotiate connection IDs during the handshake; typically, however, only the server will request a connection ID for the lifetime of the connection.\r\n\r\nFrom a discussion on this assertion with @nibanks, he observed that while client-side CIDs are uncommon on \"actual\" clients, they're likely to be very common on proxies (e.g. Masque).  Anyone monitoring traffic at the server network might well see lots of client-side CIDs.\r\n\r\nThat suggests this statement about what \"typically\" happens might be overly specific to one deployment or viewpoint.",
      "createdAt": "2021-05-10T19:03:46Z",
      "updatedAt": "2021-06-02T12:05:45Z",
      "closedAt": "2021-06-02T12:05:45Z",
      "comments": [
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed.  I think the strongest statement I could agree with are that they're more likely to be present in the client to server direction than server to client, but I'm not sure that's very useful in practice?",
          "createdAt": "2021-05-10T19:05:22Z",
          "updatedAt": "2021-05-10T19:05:22Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "How about:\r\n\r\n> Client and server each choose a connection ID during the handshake; for example, a server might request that a client use a connection ID, whereas the client might choose a zero-length value.",
          "createdAt": "2021-05-11T01:11:06Z",
          "updatedAt": "2021-05-11T01:11:06Z"
        }
      ]
    },
    {
      "number": 357,
      "id": "MDU6SXNzdWU4ODUyOTI4NTI=",
      "title": "Manageability Appendix A.1 is incorrect and should be removed",
      "url": "https://github.com/quicwg/ops-drafts/issues/357",
      "state": "CLOSED",
      "author": "DavidSchinazi",
      "authorAssociation": "NONE",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "[Appendix A.1 of the manageability draft](https://datatracker.ietf.org/doc/html/draft-ietf-quic-manageability-11#appendix-A.1) was copy-pasted from [a document I wrote](https://docs.google.com/document/d/1GV2j-PGl7YGFqmWbYvzu7-UNVIpFdbprtmN9tt6USG8/preview) and is no longer correct. In particular it assumes that the packet only contains PADDING frames and a single CRYPTO frame with offset 0. That assumption is not guaranteed to hold with modern browsers, so this text will do more harm than good when it becomes an immutable RFC. Since we also have #351, I'd suggest removing Appendix A entirely.",
      "createdAt": "2021-05-10T22:55:00Z",
      "updatedAt": "2021-05-26T11:52:38Z",
      "closedAt": "2021-05-26T11:52:38Z",
      "comments": []
    },
    {
      "number": 358,
      "id": "MDU6SXNzdWU4ODUzMTIzNTE=",
      "title": "Manageability: SNI extraction assumes a single CRYPTO frame",
      "url": "https://github.com/quicwg/ops-drafts/issues/358",
      "state": "CLOSED",
      "author": "DavidSchinazi",
      "authorAssociation": "NONE",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "The [SNI extraction section of the manageability draft](https://datatracker.ietf.org/doc/html/draft-ietf-quic-manageability-11#section-3.4.1) mentions `parsing the QUIC CRYPTO Frame containing the TLS ClientHello`. This makes the assumption that INITIAL packets carry a single CRYPTO frame. That assumption might not always hold in modern browsers, so the text should clarify that any middlebox that wishes to extract the SNI MUST perform reconstruction of the crypto stream from one or more CRYPTO frames in one or more INITIAL packets. The current assumption might lead middlebox vendors to write deploy software that doesn't work if there are multiple CRYPTO frames. The section correctly states `There might be multiple CRYPTO frames` but that comes late in the section and doesn't detail what middlebox vendors should do about it.\r\n\r\nThat section also contains another incorrect assumption: `In QUIC version 1, the packet is expected to contain only CRYPTO frames and optionally PADDING frames`. There are other frame types that are legal in INITIAL packets and may be sent by browsers.",
      "createdAt": "2021-05-10T23:05:40Z",
      "updatedAt": "2021-06-30T11:09:41Z",
      "closedAt": "2021-06-30T11:09:41Z",
      "comments": [
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think this is pretty similar to #352, though that one is a bit more broad.\r\n\r\nThanks for noticing the statement about Initials only containing CRYPTO and PADDING, I missed that.",
          "createdAt": "2021-05-11T13:29:47Z",
          "updatedAt": "2021-05-11T13:29:47Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The text already says the following now:\r\n\r\n`There might be multiple CRYPTO frames. Finally, an extension might define additional frame types which could be present.`\r\n\r\nNot sure when exactly this got added but I assume this is sufficient to address this issue? @DavidSchinazi @ianswett ?",
          "createdAt": "2021-05-26T09:44:37Z",
          "updatedAt": "2021-05-26T09:44:37Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "NONE",
          "body": "I don't think the new text fully addresses this issue.\r\n\r\nIn the new text, this statement is incorrect: `In QUIC version 1, the packet is expected to contain only CRYPTO frames and optionally PADDING frames.` What about PING frames for example?\r\n\r\nAdditionally, the client's first flight won't contain extension frames because the client has no way of knowing whether the server supports them so this statement is somewhat misleading: `Finally, an extension might define additional frame types which could be present.` What are middleboxes supposed to do if they see an unknown frame type, we should provide guidance there. I think we should just tell middlebox implementors to refer to that section of RFC 9000 and expect to parse all frame types, and fail parsing if they see a frame type they don't recognize.\r\n\r\nAnd while we're at it, we should also mention that CRYPTO frames might be out of order.",
          "createdAt": "2021-05-26T18:18:52Z",
          "updatedAt": "2021-05-26T18:18:52Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would expect ping frame in the initial... so that sentence might still be fine. I think there could actually be extension frame in the first flight, e.g. if information was cached about the support of the extension.\r\n\r\nIn any case, can you maybe propose text @DavidSchinazi ?",
          "createdAt": "2021-05-26T19:20:11Z",
          "updatedAt": "2021-05-26T19:20:11Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "NONE",
          "body": "Extension caching doesn't work for initials because the server can still reject 0-RTT at this point.\r\n\r\nHow about this text:\r\n\r\n> If the ClientHello is not encrypted, SNI can be derived from the client's Initial packet by calculating the Initial secret to decrypt the packet payload and parsing the QUIC CRYPTO frame(s) containing the TLS ClientHello.\r\n>\r\n> As both the derivation of the Initial secret and the structure of the Initial packet itself are version-specific, the first step is always to parse the version number (the second through fifth bytes of the long header). Note that only long header packets carry the version number, so it is necessary to also check if the first bit of the QUIC packet is set to 1, indicating a long header.\r\n>\r\n> Note that proprietary QUIC versions, that have been deployed before standardization, might not set the first bit in a QUIC long header packet to 1. However, it is expected that these versions will gradually disappear over time.\r\n>\r\n> When the version has been identified as QUIC version 1, the packet type needs to be verified as an Initial packet by checking that the third and fourth bits of the header are both set to 0. Then the Destination Connection ID needs to be extracted to calculate the Initial secret using the version-specific Initial salt, as described in Section 5.2 of [QUIC-TLS]. The length of the connection ID is indicated in the 6th byte of the header followed by the connection ID itself.\r\n>\r\n> To determine the end of the header and find the start of the payload, the packet number length, the source connection ID length, and the token length need to be extracted. The packet number length is defined by the seventh and eight bits of the header as described in Section 17.2 of [QUIC-TRANSPORT], but is obfuscated as described in Section 5.4 of [QUIC-TLS]. The source connection ID length is specified in the byte after the destination connection ID. The token length, which follows the source connection ID, is a variable-length integer as specified in Section 16 of [QUIC-TRANSPORT].\r\n>\r\n> After decryption, the client's Initial packet can be parsed to detect the CRYPTO frame(s) that contains the TLS ClientHello, which then can be parsed similarly to TLS over TCP connections. The client's Initial packet may contain other frames, so the first bytes of each frame need to be checked to identify the frame type, and if needed skip over it. Note that the length of the frames is dependent on the frame type, so it is necessary to refer to {{Section 18 of QUIC-TRANSPORT}}. Also note that there might be multiple CRYPTO frames, and they might not be in order, so reassembling the CRYPTO stream by parsing offsets and lengths is required. If an unknown frame type is encountered, it is impossible to know the length of that frame which prevents skipping over it, and therefore parsing fails.\r\n>\r\n> Note that subsequent Initial packets might contain a Destination Connection ID other than the one used to generate the Initial secret. Therefore, attempts to decrypt these packets using the procedure above might fail unless the Initial secret is retained by the observer.",
          "createdAt": "2021-05-26T19:42:03Z",
          "updatedAt": "2021-05-26T19:42:03Z"
        }
      ]
    },
    {
      "number": 360,
      "id": "MDU6SXNzdWU4ODUzMjUxODA=",
      "title": "1 ALPN per version.",
      "url": "https://github.com/quicwg/ops-drafts/issues/360",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "Applicability Sec 8:\r\n\r\n>Note that HTTP/3's ALPN token (\"h3\") identifies not only the version of the application protocol, but also the version of QUIC >itself; this approach allows unambiguous agreement between the endpoints on the protocol stack in use.\r\n\r\nI was going to start a discussion about this at IETF 111. I think we should think hard about this; if there are a lot of versions with small differences to the application, this could result in a ridiculous cloud of RFCs.",
      "createdAt": "2021-05-10T23:12:45Z",
      "updatedAt": "2021-06-30T11:04:12Z",
      "closedAt": "2021-06-30T11:04:12Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is there a change to make to this document in WGLC, or is this a note to be careful in the future?",
          "createdAt": "2021-05-19T12:43:51Z",
          "updatedAt": "2021-05-19T12:43:51Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I personally don't like this linkage, and think the ALPN should just define the application. While linking the version does smooth out version negotiation, it can result in an explosion in the ALPN registry.\r\n\r\nI'll start a thread on the list about this, since I suppose it can't wait for the discussion at 111 that I was planning.",
          "createdAt": "2021-05-19T14:25:45Z",
          "updatedAt": "2021-05-19T14:25:45Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The point this was discussed already at length and the manageability document is just reflecting what has been decided for h3. So if at all you'd need to raise an issue on the h3 draft but I guess that's also too late.",
          "createdAt": "2021-05-19T15:10:54Z",
          "updatedAt": "2021-05-19T15:10:54Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": " I disagree that the text of the H3 draft mandates this:\r\n\r\n`HTTP/3 relies on QUIC version 1 as the underlying transport. The use of other QUIC transport versions with HTTP/3 MAY be defined by future specifications.`\r\n\r\nThat is a long way from saying \"roll a new ALPN for each QUIC version\".\r\n\r\nMaybe everyone tacitly agrees we should roll a new ALPN, and I'm in the rough. But I'd like to confirm that.",
          "createdAt": "2021-05-19T15:13:52Z",
          "updatedAt": "2021-05-19T15:13:52Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See quicwg/base-drafts#3117",
          "createdAt": "2021-05-19T15:31:55Z",
          "updatedAt": "2021-05-19T15:31:55Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "How about rewording the sentence to reflect reality, roughly\r\n\r\nSince QUIC v1 (RFC9000) deferred defining a version negotiation mechanism. HTTP/3 (RFC-to-be-whatever) deferred deciding how it would map to other QUIC versions. HTTP/3 requires QUIC v1 and defines the ALPN token (\"h3\") to only apply to that version. This solves a versioning problem at the cost of future flexibility. Application protocol mappings written for QUIC v1 or other QUIC versions may be able to benefit from version negotiation mechanisms that did not exist during the development of HTTP/3 (RFC-to-be-whatever). Coupling QUIC version to ALPN tokens is one approach but not the only approach.\r\n\r\n",
          "createdAt": "2021-05-19T15:46:32Z",
          "updatedAt": "2021-05-19T15:46:32Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I believe the text already says that this doesn't have to be applied by other application. The cited text is really only meant to described what was decided from h3 as an example. We can definitely reword this for reflect the consensus more clearly as proposed by Lucas.",
          "createdAt": "2021-05-19T16:16:30Z",
          "updatedAt": "2021-05-19T16:16:30Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Lucas,\r\n\r\nI would welcome your proposal as kicking the can down the road and not enshrining an approach that I think is bad.\r\n\r\nI would also like to continue the ALPN/versioning discussion, but it doesn't have to block the applicability draft.",
          "createdAt": "2021-05-19T16:19:41Z",
          "updatedAt": "2021-05-19T16:19:41Z"
        }
      ]
    },
    {
      "number": 362,
      "id": "MDU6SXNzdWU4OTAxODI1NjU=",
      "title": "Manageability: Detailed Review Comments - NiTs",
      "url": "https://github.com/quicwg/ops-drafts/issues/362",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "This issue captires a number of minor wording issues, references etc:\r\n\r\nOperators should expect to observe packets with other version numbers as a result of various Internet experiments, future standards, and greasing.\r\n- Since greasing might not be understood by all operations staff, a reference here would help, e.g.: RFC8701.\r\n\r\nStyle:\r\n\u201cfour datagrams we'll call \u201c\r\n- why suddenly a use of \u201cwe\u201d, can you reword to remove that?\r\n\r\nThis could be clearer:\r\n\u201cWhen the client uses 0-RTT connection resumption, 0-RTT data may also be seen in the Client Initial datagram, as shown in Figure 6.\u201d\r\n- what does \u201cseen\u201d mean? is \u201ccan be present\u201d equivalent, in which case it is better than implying it is observable.\r\n\r\n\u201cwill result in connection establishment failing later on.\u201d\r\n- Can we just remove the spurious word \u201con\u201d at the end of the sentence?\r\n\r\n\u201cThis allows rebinding of a connection after one of one endpoint experienced an address change\u201d\r\n- what is \u201cone of one\u201d?\r\n\r\n\u201calso supports migration which opens an attack vector on specific servers or pools.\u201d\r\n- add comma before \u201cwhich\u201d or use \u201cthat\u201d?\r\n\r\nSection 2.7 could refer to https://datatracker.ietf.org/doc/draft-ietf-tsvwg-transport-encrypt, (now in RFC-Ed) for examples of sequence number observation and alternatives for encrypted transports.\r\n\r\nSection 3:\r\n\u201cThis section addresses the different kinds of observations and inferences that can be made about QUIC flows by a passive observer in the network based on the wire image in Section 2.\u201d\r\n- This seems correct, although may be helpful to also say this observer does not have access to keying information.\r\n\r\nActually the set of possible things that can be done is more than the say, please add a reference\r\nfor example by queueing ACKs differently or manipulating ACK....\r\n- It might be worth citing RFC3449 as example? or https://datatracker.ietf.org/doc/draft-ietf-tsvwg-transport-encrypt.\r\n- Although other things also are done and also some links compress ACKs, etc there is a more modern view in:  per https://datatracker.ietf.org/doc/draft-ietf-tsvwg-transport-encrypt./.\r\n\r\nThe title here: 4.8. Quality of Service handling and ECMP \r\n- should this title be \u201c 4.8. Quality of Service handling and ECMP Routing\u201d\r\n- just to complete the concept of ECMP in the section title?\r\n\r\n\r\n",
      "createdAt": "2021-05-12T15:01:46Z",
      "updatedAt": "2021-06-02T12:05:45Z",
      "closedAt": "2021-06-02T12:05:45Z",
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "And ... \r\nThe text says: \u201ca particularly unwise behavior is to admit a handful of UDP packets and then make a decision as to whether or not to filter it\u201d\r\n- \u201cit\u201d is presumably \u201clater packets in the flow\u201d?",
          "createdAt": "2021-05-12T15:07:00Z",
          "updatedAt": "2021-05-12T15:07:00Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "...check first to make sure we didn't already merge a PR for these...",
          "createdAt": "2021-05-19T12:44:32Z",
          "updatedAt": "2021-05-19T12:44:32Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Operators should expect to observe packets with other version numbers as a result of various Internet experiments, future standards, and greasing.\r\n>\r\n> Since greasing might not be understood by all operations staff, a reference here would help, e.g.: RFC8701.\r\n\r\nThere was already a reference but should we rather replace \"greasing\" with \"aliasing\" and refer to draft-duke-quic-version-aliasing ? ",
          "createdAt": "2021-05-26T08:02:57Z",
          "updatedAt": "2021-05-26T08:05:22Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Section 2.7 could refer to https://datatracker.ietf.org/doc/draft-ietf-tsvwg-transport-encrypt, (now in RFC-Ed) for examples of sequence number observation and alternatives for encrypted transports.\r\n>\r\n> Section 3:\r\n> \u201cThis section addresses the different kinds of observations and inferences that can be made about QUIC flows by a  passive observer in the network based on the wire image in Section 2.\u201d\r\n>\r\n> This seems correct, although may be helpful to also say this observer does not have access to keying information.\r\n> Actually the set of possible things that can be done is more than the say, please add a reference\r\nfor example by queueing ACKs differently or manipulating ACK....\r\n>\r\n> It might be worth citing RFC3449 as example? or https://datatracker.ietf.org/doc/draft-ietf-tsvwg-transport-encrypt.\r\n> Although other things also are done and also some links compress ACKs, etc there is a more modern view in: per https://datatracker.ietf.org/doc/draft-ietf-tsvwg-transport-encrypt./.\r\n\r\nI didn't add a reference to draft-ietf-tsvwg-transport-encrypt as I really wasn't sure where and how given it talks more about TCP and I think a lot of topics are otherwise already covered in this document. \r\n\r\n@gorryfair can you maybe propose a PR?",
          "createdAt": "2021-05-26T08:05:13Z",
          "updatedAt": "2021-05-26T08:05:13Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "My PR was #378.",
          "createdAt": "2021-05-26T09:35:18Z",
          "updatedAt": "2021-05-26T09:35:18Z"
        }
      ]
    },
    {
      "number": 363,
      "id": "MDU6SXNzdWU4OTAxODM5MzE=",
      "title": "Manageability: Not so trivial ACK detection for TCP",
      "url": "https://github.com/quicwg/ops-drafts/issues/363",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The text says: \u201cDistinguishing ACK packets is trivial in TCP,\u201d\r\n- arguably this is not trivial, since you need to handle data and ACKs and exclude implications of TCP options. I\u2019d prefer to say \u201cpossible\u201d than \u201ctrivial\u201d.\r\n\r\n",
      "createdAt": "2021-05-12T15:03:09Z",
      "updatedAt": "2021-05-19T12:24:28Z",
      "closedAt": "2021-05-19T12:24:28Z",
      "comments": [
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It's more than possible, it's easy.\r\n\r\nI don't quite follow which TCP options you're referring to. I can only think of SACK, which just reduces the number of them.\r\n\r\nWhy is this not as trivial as \"If only the ACK bit is set, and there's no payload, it's an ACK.\" ?\r\n(Yes, truly bidirectional flows will have payload, but then I would argue they are not simple ACK packets.)",
          "createdAt": "2021-05-12T17:01:50Z",
          "updatedAt": "2021-05-12T17:01:50Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "SACK adds an obvious widley deployed complication for TCP; ECN feedback also; some methods have simply used packet size. I know there are various forms ACK decimation/filtering/etc, some even delve into IP encaps to do this, I just don't want to convey a message that this \"trivial\" to get a good solution. The key point is that QUIC does not allow any of this without keying information.",
          "createdAt": "2021-05-13T08:11:20Z",
          "updatedAt": "2021-05-13T08:11:20Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I see. So we need a word that says it's a bit more complex than \"trivial\", but still reasonably simple (esp. in comparison with QUIC). \"Possible\" would work.",
          "createdAt": "2021-05-14T16:28:10Z",
          "updatedAt": "2021-05-14T16:28:10Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, \"possible\" is indeed fine. Shall I make a PR?\r\n\r\nGorry",
          "createdAt": "2021-05-14T17:00:24Z",
          "updatedAt": "2021-05-14T17:00:24Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'd say yes.",
          "createdAt": "2021-05-14T17:07:14Z",
          "updatedAt": "2021-05-14T17:07:14Z"
        }
      ]
    },
    {
      "number": 364,
      "id": "MDU6SXNzdWU4OTAxODQ4NTE=",
      "title": "Manageability: does the endpoint change address using a NAPT?",
      "url": "https://github.com/quicwg/ops-drafts/issues/364",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "In this text:\r\n\u201cWhen one endpoint unintentionally changes its address, as is the case with NAT rebinding, \u201c\r\n- actually the endpoint doesn\u2019t change the address, except in RSIP (odd to find that in use!), it is the \u201creceived endpoint address\u201d that changes,.\r\n",
      "createdAt": "2021-05-12T15:04:06Z",
      "updatedAt": "2021-06-02T12:05:45Z",
      "closedAt": "2021-06-02T12:05:45Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "passivize, perhaps: \"when one endpoint's address unintentionally changes?\"",
          "createdAt": "2021-05-19T12:45:05Z",
          "updatedAt": "2021-05-19T12:45:05Z"
        }
      ]
    },
    {
      "number": 365,
      "id": "MDU6SXNzdWU4OTAxODcxNjE=",
      "title": "Manageability: Is dropping intended to be random?",
      "url": "https://github.com/quicwg/ops-drafts/issues/365",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "Section 4.6\r\n\u201cFurther, if UDP traffic is desired to be throttled, it is recommended to block individual QUIC flows entirely rather than dropping packets randomly.\u201d\r\n- this implies \u201crandom\u201das a feature (rather than burst or flow-specific), I am not sure this was what I expected. \r\nBut my real question is whether the drop really *intended* to be random? or burst? or uncorrelated? Should this be more like:\r\n\u201cFurther, if UDP traffic is desired to be throttled, it is recommended to block individual QUIC flows entirely rather than dropping packets without considering the flow to which they belong.\u201d\r\n... this seems to be the point in the remainder of the section\r\n\r\n\r\n",
      "createdAt": "2021-05-12T15:06:33Z",
      "updatedAt": "2021-05-19T12:45:39Z",
      "closedAt": "2021-05-19T12:45:39Z",
      "comments": [
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think you're right; in a basic policer randomness is a consequence of the way it works, rather than being a goal.\r\n\r\nHere we want to say don't drop packets indiscriminately; please consider which flow they belong to and drop some flows.",
          "createdAt": "2021-05-12T16:56:15Z",
          "updatedAt": "2021-05-12T16:56:15Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "this has been fixed in another editorial PR; s/random/indiscriminate/",
          "createdAt": "2021-05-19T12:45:39Z",
          "updatedAt": "2021-05-19T12:45:39Z"
        }
      ]
    },
    {
      "number": 366,
      "id": "MDU6SXNzdWU4OTAxODgzMjQ=",
      "title": "Manageability: PMTU",
      "url": "https://github.com/quicwg/ops-drafts/issues/366",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "Some networks support 1500-byte packets, but can only do so by fragmenting at a lower layer before traversing a smaller MTU segment,\u201d\r\n- change segment to \u201cnetwork segment\u201d or \u201clink\u201d - just to avoid the unfortunate combination of  the word\u201csegment\u201d often associated with TCP.\r\nI like the way the new PMTU text is heading, but have various small suggestions:\r\n\r\nThis did not make sense:\r\n\u201cFor QUIC endpoints using DPLPMTUD it is recommended for the path to drop a packet larger than the supported size. A QUIC probe packet is used to discover the PMTU. If lost, this does not impact the flow of QUIC data.\u201d\r\n- the word endpoint appears in the wrong place, is this better:\r\n\u201cFor networks supporting QUIC it is recommended that a path drops any packet larger than the supported size. When a QUIC endpoint uses DPLPMTUD,  it will use a QUIC probe packet is used to discover the PMTU. If this probe is lost, it will not impact the flow of QUIC data.\u201d\r\n\r\nNot always (there are many exceptions such as rate control):\r\n\u201cSince a network cannot know in advance which discovery method a QUIC endpoint is using, it should always send a PTB message in addition to dropping the oversized packet. \u201c\r\nIs this more correct as:\r\n\u201cA network cannot know in advance which discovery method is used by a QUIC endpoint, so it should send a PTB message in addition to dropping an oversized packet. \u201c\r\n\r\n\u201cThis will likely provide the right signal for the endpoint to keep the packet size small and thereby avoid network fragmentation for that flow entirely.\u201d\r\nCould be better as:\r\n\u201cThis will likely provide a useful signal to the endpoint to prevent the packet size from growing too large and thereby entirely avoid network segment fragmentation for that flow.\u201d\r\n\r\n",
      "createdAt": "2021-05-12T15:07:47Z",
      "updatedAt": "2021-05-19T13:15:17Z",
      "closedAt": "2021-05-19T13:15:17Z",
      "comments": [
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Lots of points in there! Taking them one at a time:\r\n\r\n1. I agree that the word \"segment\" could be confusing, but not sure whether \"link\" or \"network segment\" is a better choice.\r\n2. Agree it's not particularly ideal to have \"endpoint\" at the beginning of the sentence. Your replacement is more readable, although we just need to remove the repetition of the verb \"use\".\r\n3. Your \"A network cannot know\" version looks better to me, but since the aim here is to encourage a complete implementation I would prefer to keep the word \"always\" in there. Without it, it seems too easy for an implementer to think \"PTB is optional, so I'll skip that\".\r\n4. Not so convinced about this one. I tend to think it is the right signal, not just one of a bag of useful signals.",
          "createdAt": "2021-05-12T16:52:37Z",
          "updatedAt": "2021-05-12T16:52:37Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks, see below:\r\n1. Link is the correct term, wrt IP. Although \"network segment\" would be OK and I suspect easier to read, the word segment on its own was confusing.\r\n2. OK, indeed the spurious \"used\" needs deleted.\r\n3. The word \"always\" is a problem. Even if a node were to send a PTB message for each packet, ICMP is often rate-limited and can be filtered, and assumes a symetric forwarding path. The \"should\" is OK, but the always isn't a strict requirement.\r\n4. I think we differ on optimisim that PMTUD is still workable. However, would it be OK just to remove /useful/ and leave it as a signal. I'd be OK to also remove \"likely\", if that seems stronger.",
          "createdAt": "2021-05-13T07:42:26Z",
          "updatedAt": "2021-05-13T07:42:26Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Some responses on the latter two:\r\n\r\n3. I think Mirja had an opinion on this phrasing when we were discussing #212 so it would be good to hear her thoughts.\r\n\r\n4. I agree PMTUD is on its way to obsolescence. But my reading of DPLPMTUD/RFC8899 is that it is still generally expected that PTBs are sent, hence the inclusion of section 4.6 on what to do when PTBs are received, and why totally ignoring PTBs is described as one extreme of the implementation spectrum. In that light, I suggest the best form of words is to remove both \"likely\" and \"useful\". The resulting sentence is then: \u201cThis will provide a signal to the endpoint to prevent the packet size from growing too large and thereby entirely avoid network segment fragmentation for that flow.\u201d",
          "createdAt": "2021-05-14T17:01:45Z",
          "updatedAt": "2021-05-14T17:01:45Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks @gorryfair and @chris-box! I will review the PR!",
          "createdAt": "2021-05-17T12:18:41Z",
          "updatedAt": "2021-05-17T12:18:41Z"
        }
      ]
    },
    {
      "number": 367,
      "id": "MDU6SXNzdWU4OTA5MTI4Mjc=",
      "title": "Applicability: Trying to avoid confusion when read in future years",
      "url": "https://github.com/quicwg/ops-drafts/issues/367",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "Three places where the text might avoid confusion when read in future years:\r\n\r\n1) \u201cFurther downgrades to older TLS versions than used in QUIC, which is 1.3, \u201c\r\n\u2026 will it always be 1.3, or should this be \u201cin QUIC [REF] is TLS 1.3\u201d\r\n\r\n2) \u201cCurrently, QUIC only provides fully reliable stream transmission, which means that prioritization of retransmissions will be beneficial in most cases, by filling in gaps and freeing up the flow control window. \u201c\r\n- I'm not so happy with currently here: Is this the best way to say this, might it be better to say this rather than even hinting that future QUIC might only be reliable:\r\n\u201cWhen a QUIC endpoint provides provides fully reliable stream transmission, prioritization of retransmissions will be beneficial in most cases, by filling in gaps and freeing up the flow control window. \u201c\r\n\r\n3)  I\u2019d prefer to see a ref here, since this something that the WG might later decide to work upon:\r\n\u201cCurrently QUIC only supports failover cases [Quic-Transport].\u201d\r\n\r\n",
      "createdAt": "2021-05-13T10:09:59Z",
      "updatedAt": "2021-05-26T11:46:50Z",
      "closedAt": "2021-05-26T11:46:50Z",
      "comments": []
    },
    {
      "number": 368,
      "id": "MDU6SXNzdWU4OTA5MTM1MjY=",
      "title": "Applicability: Add a cross ref to the network part in manageability?",
      "url": "https://github.com/quicwg/ops-drafts/issues/368",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "\u201cQUIC exposes some information to the network in the unencrypted part of the header, either before the encryption context is established or because the information is intended to be used by the network.\u201d\r\n- Could this benefit form a cross-reference to manageability, where this topic is also discussed from a network perspective?\r\n",
      "createdAt": "2021-05-13T10:11:06Z",
      "updatedAt": "2021-05-26T11:46:50Z",
      "closedAt": "2021-05-26T11:46:50Z",
      "comments": []
    },
    {
      "number": 369,
      "id": "MDU6SXNzdWU4OTA5MTU2NzI=",
      "title": "Applicability: Two more aspects of setting DSCPs",
      "url": "https://github.com/quicwg/ops-drafts/issues/369",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "-manageability",
        "check-on-list"
      ],
      "body": "\r\nIt could be worth noting two general further things about DSCPs :\r\n\r\n(a) \"When multiplexing multiple flows over a QUIC connection, the DSCP value selected should be the one associated with the highest priority requested for all multiplexed flows.\"\r\n\r\n(b) \"If a packet enters a network segment that does not support the DSCP value, this could result in the connection not receiving the network treatment it expects. The DSCP value in this packet could also be remarked as the packet travels along the network path.\"\r\n",
      "createdAt": "2021-05-13T10:14:22Z",
      "updatedAt": "2021-06-02T12:16:48Z",
      "closedAt": "2021-06-02T12:16:48Z",
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "A sample PR: \"More aspects of setting DSCPs\" #379",
          "createdAt": "2021-05-26T09:48:58Z",
          "updatedAt": "2021-05-26T09:48:58Z"
        }
      ]
    },
    {
      "number": 381,
      "id": "MDU6SXNzdWU5MDIyODM0OTc=",
      "title": "Nits for manageability",
      "url": "https://github.com/quicwg/ops-drafts/issues/381",
      "state": "CLOSED",
      "author": "larseggert",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "All comments below are about very minor potential issues that you may choose to\r\naddress in some way - or ignore - as you see fit. Some were flagged by\r\nautomated tools (via https://github.com/larseggert/ietf-reviewtool), so there\r\nwill likely be some false positives. There is no need to let me know what you\r\ndid with these suggestions.\r\n\r\n```\r\n\"Table of Contents\", paragraph 2, nit:\r\n> sion 1 was designed primarily as a transport for HTTP, with the resulting pro\r\n>                                  ^^^^^^^^^^^\r\nUncountable nouns are usually not used with an indefinite article. Use simply\r\n\"transport\".\r\n\r\nSection 2.4, paragraph 8, nit:\r\n> sed. The content of Initial packets are encrypted using Initial Secrets, whi\r\n>                                     ^^^\r\nPossible agreement error.\r\n\r\nSection 2.4, paragraph 17, nit:\r\n> IC ACK frame (acknowledging Server Initial Initial) | | +--------------------\r\n>                                    ^^^^^^^^^^^^^^^\r\nPossible typo: you repeated a word\r\n\r\nSection 2.5, paragraph 1, nit:\r\n> ving a new connection ID does not necessary indicate a new connection. [QUIC\r\n>                                   ^^^^^^^^^\r\nThe word \"necessary\" is an adjective and doesn't fit in this context. Did you\r\nmean the adverb \"necessarily\"?\r\n\r\nSection 2.6, paragraph 3, nit:\r\n> verify that they were authentic. Therefore any modification of this list wil\r\n>                                  ^^^^^^^^^\r\nDid you forget a comma after a conjunctive/linking adverb?\r\n\r\nSection 2.6, paragraph 4, nit:\r\n> ard versions, will be deployed in the Internet more often than with tradition\r\n>                                ^^^^^^^^^^^^^^^\r\nThe usual collocation for technology is \"on\", not \"in\".\r\n\r\nSection 2.8, paragraph 3, nit:\r\n> lid. HTTP/3 uses UDP port 443 by convention but various methods can be used t\r\n>                                  ^^^^^^^^^^\r\nUse a comma before 'but' if it connects two independent clauses (unless they\r\nare closely connected and short).\r\n\r\nSection 3.2, paragraph 1, nit:\r\n>  likely to fail, and are not recommended to use as a way to construe interna\r\n>                              ^^^^^^^^^^^^^^^^^^\r\nThe verb 'recommended' is used with the gerund form: \"recommended using\".\r\n\r\nSection 3.8.1, paragraph 2, nit:\r\n> lay (e.g., delayed sending of acknowledgements) and/or application layer del\r\n>                               ^^^^^^^^^^^^^^^^\r\nDo not mix variants of the same word ('acknowledgement' and 'acknowledgment')\r\nwithin a single text.\r\n\r\nSection 4.2, paragraph 2, nit:\r\n> tion is not visible to the path. Therefore using the connection ID as a flow\r\n>                                  ^^^^^^^^^\r\nDid you forget a comma after a conjunctive/linking adverb?\r\n\r\nSection 4.2, paragraph 10, nit:\r\n> ets and then make a decision as to whether or not to filter it. QUIC applicat\r\n>                              ^^^^^^^^^^^^^^^^^^^^\r\nWordiness: Consider shortening this phrase.\r\n\r\nSection 4.3, paragraph 4, nit:\r\n> ket loss (see also Section 4.5). Therefore UDP throttling should be realized\r\n>                                  ^^^^^^^^^\r\nDid you forget a comma after a conjunctive/linking adverb?\r\n\r\nSection 4.10, paragraph 3, nit:\r\n> se Version Negotiation packets are require to define a mechanism that is robu\r\n>                                    ^^^^^^^\r\nConsider using either the past participle \"required\" or the present participle\r\n\"requiring\" here.\r\n\r\nSection 4.10, paragraph 3, nit:\r\n> ainst version downgrade attacks. Therefore a network node should not attempt\r\n>                                  ^^^^^^^^^\r\nDid you forget a comma after a conjunctive/linking adverb?\r\n\r\nDocument references draft-ietf-dots-architecture, but that has been published\r\nas RFC8811.\r\n```",
      "createdAt": "2021-05-26T12:03:05Z",
      "updatedAt": "2021-06-02T12:05:45Z",
      "closedAt": "2021-06-02T12:05:45Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "thanks! added to #374",
          "createdAt": "2021-05-26T12:49:01Z",
          "updatedAt": "2021-05-26T12:49:01Z"
        }
      ]
    },
    {
      "number": 382,
      "id": "MDU6SXNzdWU5MDIyODUxNDc=",
      "title": "Nits for applicability",
      "url": "https://github.com/quicwg/ops-drafts/issues/382",
      "state": "CLOSED",
      "author": "larseggert",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "All comments below are about very minor potential issues that you may choose to\r\naddress in some way - or ignore - as you see fit. Some were flagged by\r\nautomated tools (via https://github.com/larseggert/ietf-reviewtool), so there\r\nwill likely be some false positives. There is no need to let me know what you\r\ndid with these suggestions.\r\n```\r\nSection 1, paragraph 2, nit:\r\n>  must consider when using QUIC as a transport for their application. 2. The N\r\n>                                   ^^^^^^^^^^^\r\nUncountable nouns are usually not used with an indefinite article. Use simply\r\n\"transport\".\r\n\r\nSection 2, paragraph 4, nit:\r\n>  and manipulation in the network. Further downgrades to older TLS versions t\r\n>                                   ^^^^^^^\r\nDid you forget a comma after a conjunctive/linking adverb?\r\n\r\nSection 2, paragraph 7, nit:\r\n> lishment is qualitatively different than one that does not from the point of\r\n>                                     ^^^^\r\nDid you mean 'different \"from\"? 'Different than' is often considered colloquial\r\nstyle.\r\n\r\nSection 3.1, paragraph 3, nit:\r\n> -idempotent sequence of operations. Once a server accepts 0-RTT data there is\r\n>                                     ^^^^\r\n\"Once\" at the beginning of a sentence usually requires a 2nd clause. Maybe a\r\ncomma, question or exclamation mark is missing, or the sentence is incomplete\r\nand should be joined with the following sentence.\r\n\r\nSection 3.1, paragraph 5, nit:\r\n> st 124 minutes, though there is not evidence of widespread implementation of\r\n>                                 ^^^^^^^^^^^^\r\nIt seems that the adverb \"not\" is incorrect in this context.\r\n\r\nSection 3.2, paragraph 4, nit:\r\n> l consists only of interactions with no or very short idle periods, or the p\r\n>                                      ^^\r\nDid you mean \"now\" (=at this moment) instead of 'no' (negation)?\r\n\r\nSection 4, paragraph 12, nit:\r\n> acket is visible to the network. Therefore stream multiplexing is not intend\r\n>                                  ^^^^^^^^^\r\nDid you forget a comma after a conjunctive/linking adverb?\r\n\r\nSection 4.2, paragraph 3, nit:\r\n> ction 2.2 of [QUIC]. To support this receive logic, an endpoint will send str\r\n>                                 ^^^^^^^^^^^^\r\nThe verb 'receive' is plural. Did you mean: \"this receives\"? Did you use a verb\r\ninstead of a noun?\r\n\r\nSection 4.5, paragraph 2, nit:\r\n> ulative stream limit would allow. Instead the client would create a new conn\r\n>                                   ^^^^^^^\r\nDid you forget a comma after a conjunctive/linking adverb?\r\n\r\nSection 4.5, paragraph 3, nit:\r\n> cate to QUIC that all data should be send out immediately. Alternatively, if\r\n>                                      ^^^^\r\nConsider using the past participle \"sent\".\r\n\r\nSection 5, paragraph 4, nit:\r\n> e an error code space that is independent from QUIC or other applications (s\r\n>                               ^^^^^^^^^^^^^^^^\r\nThe usual collocation for \"independent\" is \"of\", not \"from\". Did you mean\r\n\"independent of\"?\r\n\r\nSection 6, paragraph 2, nit:\r\n> ance, for both network processing as well as application-relevant metrics. 8\r\n>                                   ^^^^^^^^^^\r\nProbable usage error. Use \"and\" after 'both'.\r\n\r\nSection 8, paragraph 4, nit:\r\n> ded when migration is supported. Currently QUIC only supports the use of a s\r\n>                                  ^^^^^^^^^\r\nDid you forget a comma after a conjunctive/linking adverb?\r\n\r\nSection 8, paragraph 5, nit:\r\n> hat endpoints validate paths before use to avoid address spoofing attacks. Pa\r\n>                                     ^^^^^^\r\nMake sure that 'use to' is correct. For habitual actions in the past or to mean\r\n'accustomed to', use \"used to\".\r\n\r\nSection 8, paragraph 5, nit:\r\n> o be reset after path migration. Therefore migration usually has a performan\r\n>                                  ^^^^^^^^^\r\nDid you forget a comma after a conjunctive/linking adverb?\r\n\r\nSection 8, paragraph 6, nit:\r\n> n learned from probing to inform a decisions to switch paths. Only the clien\r\n>                                  ^^^^^^^^^^^\r\nThe plural noun \"decisions\" cannot be used with the article \"a\". Did you mean\r\n\"a decision\" or \"decisions\"?\r\n\r\nSection 11.2, paragraph 4, nit:\r\n> ut to the congestion controller. Therefore it is not recommended to use diff\r\n>                                  ^^^^^^^^^\r\nDid you forget a comma after a conjunctive/linking adverb?\r\n\r\nSection 13, paragraph 2, nit:\r\n> es once all server instances are able accept new connections with the new ve\r\n>                                  ^^^^^^^^^^^\r\nThe preposition 'to' is required in front of the verb 'accept'.\r\n\r\nSection 14, paragraph 4, nit:\r\n> UIC streams, the datagram service has a unordered message-based interface. I\r\n>                                       ^\r\nUse \"an\" instead of 'a' if the following word starts with a vowel sound, e.g.\r\n'an article', 'an hour'.\r\n\r\nObsolete reference to RFC5077, obsoleted by RFC8446.\r\n```",
      "createdAt": "2021-05-26T12:04:27Z",
      "updatedAt": "2021-06-02T12:17:02Z",
      "closedAt": "2021-06-02T12:17:02Z",
      "comments": []
    },
    {
      "number": 391,
      "id": "MDU6SXNzdWU5NDAxNjAyNzA=",
      "title": "Double-check contributors",
      "url": "https://github.com/quicwg/ops-drafts/issues/391",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The merge of PR #390 was probably not fully correct but we need to check that these lists and the acks are correct for both drafts!",
      "createdAt": "2021-07-08T19:34:28Z",
      "updatedAt": "2021-08-19T08:54:20Z",
      "closedAt": "2021-08-19T08:54:20Z",
      "comments": []
    },
    {
      "number": 393,
      "id": "MDU6SXNzdWU5NTQxOTc3NzQ=",
      "title": "Ports and ALPN",
      "url": "https://github.com/quicwg/ops-drafts/issues/393",
      "state": "CLOSED",
      "author": "huitema",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Do we want to say something in the draft about usage of ports vs usage of ALPN? For example, it is possible in theory to have a server listening to both H3 and DoQ on port 443. Should the draft say anything about that?",
      "createdAt": "2021-07-27T19:24:53Z",
      "updatedAt": "2021-07-27T21:13:09Z",
      "closedAt": "2021-07-27T21:13:09Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It does: https://www.ietf.org/archive/id/draft-ietf-quic-applicability-12.html#name-port-selection-and-applicat",
          "createdAt": "2021-07-27T20:13:52Z",
          "updatedAt": "2021-07-27T20:13:52Z"
        },
        {
          "author": "huitema",
          "authorAssociation": "NONE",
          "body": "OK. Not quite what I had in mind but it works.",
          "createdAt": "2021-07-27T21:13:09Z",
          "updatedAt": "2021-07-27T21:13:09Z"
        }
      ]
    },
    {
      "number": 397,
      "id": "MDU6SXNzdWU5OTE1NTE5MjI=",
      "title": "Update references to QUIC RFCs",
      "url": "https://github.com/quicwg/ops-drafts/issues/397",
      "state": "OPEN",
      "author": "LPardue",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I noticed that there are references to QUIC I-Ds. Applicability even references both -34 and RFC9000 :smile: ",
      "createdAt": "2021-09-08T21:34:00Z",
      "updatedAt": "2021-09-08T21:34:00Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 399,
      "id": "I_kwDOBaRfW848cHcg",
      "title": "Caution that there are other protocols that amplify in packets and bytes",
      "url": "https://github.com/quicwg/ops-drafts/issues/399",
      "state": "OPEN",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "These have the potential of creating infinite loops when used with stateless reset.\r\n\r\nOne is ISAKMP/IKE, which conveniently does not look like a QUIC packet, but there could be others(ie: Chargegen) that are easily capable of creating infinite loops with stateless resets.",
      "createdAt": "2021-10-02T10:14:30Z",
      "updatedAt": "2021-10-04T12:34:19Z",
      "closedAt": null,
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Are you proposing to add additional new text to the applicability statement to address this issue?",
          "createdAt": "2021-10-04T12:03:29Z",
          "updatedAt": "2021-10-04T12:03:29Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I was thinking this would be a change to manageability, because that draft has some text about amplification and DDoS.  I can try to write some text if you'd like?",
          "createdAt": "2021-10-04T12:14:17Z",
          "updatedAt": "2021-10-04T12:14:17Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I guess that's a question for the chairs as the document has already passed WGLC.",
          "createdAt": "2021-10-04T12:23:21Z",
          "updatedAt": "2021-10-04T12:23:21Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Sure, there's always IETF LC.",
          "createdAt": "2021-10-04T12:32:22Z",
          "updatedAt": "2021-10-04T12:32:22Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "Seeing a PR will help, we can raise this during AD evaluation",
          "createdAt": "2021-10-04T12:34:19Z",
          "updatedAt": "2021-10-04T12:34:19Z"
        }
      ]
    },
    {
      "number": 401,
      "id": "I_kwDOBaRfW849dr0g",
      "title": "Update Acknowledgment Efficiency Text isn't great.",
      "url": "https://github.com/quicwg/ops-drafts/issues/401",
      "state": "OPEN",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Previously scope of this text was agreed, but what appeared seems to me to have various NiTs:\r\n\u2022 Saying \"every other packet is acknowledged\" is a recommendation in RC9000. I suggest citing also.\r\n\u2022 The text seems to conflate endpoint processing optimisation, and network path performance optimisation:  /constraint/ wasn't the correct word, but even /constrained/ was a value judgment on design traedoffs for any mobile/RF link - and many bandwidth-limited cabled link, which could be avoided by simply saying what is intended and saying either /which can impact performance of some types of network/ or /which can impact performance across  some types of network/ ... depending on your viewpoint as an operator or application.\r\n\u2022 I think we can do better than /Some...might/, suggesting removing some and leaving might.\r\n\r\nThis might be resolved in a PR #400. ",
      "createdAt": "2021-10-20T09:35:16Z",
      "updatedAt": "2021-10-20T09:35:16Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 402,
      "id": "I_kwDOBaRfW84_TwmZ",
      "title": "clarify the TAPS context in this document",
      "url": "https://github.com/quicwg/ops-drafts/issues/402",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "This is a good piece of information. However, I could not put it into the context of this document. Please clarity how this TAPS arch matters here.\r\n\r\nhttps://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-applicability.md?plain=1#L153",
      "createdAt": "2021-11-24T08:38:20Z",
      "updatedAt": "2021-11-24T08:38:20Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 404,
      "id": "I_kwDOBaRfW84_Ty7g",
      "title": "Clarification on application binding external state to the connection",
      "url": "https://github.com/quicwg/ops-drafts/issues/404",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Event if I can parse this, I think an example of such binding will point the readers to the right direction.\r\n\r\nhttps://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-applicability.md?plain=1#L300",
      "createdAt": "2021-11-24T08:49:18Z",
      "updatedAt": "2021-11-24T08:49:18Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 405,
      "id": "I_kwDOBaRfW84_T0wA",
      "title": "Flow control ref to RFC9000",
      "url": "https://github.com/quicwg/ops-drafts/issues/405",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-applicability.md?plain=1#L423 should this be pointing to Section 2.2  or section 4.0 , flow control credit is described there? I also think it will be good if section 4.4 of this document points to Section 4.0 of RFC9000. specially when it talks about flow control credit updates.  ",
      "createdAt": "2021-11-24T08:57:50Z",
      "updatedAt": "2021-11-24T08:57:50Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 406,
      "id": "I_kwDOBaRfW84_T24N",
      "title": "Clarification on allowed ecvryption schemes",
      "url": "https://github.com/quicwg/ops-drafts/issues/406",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-applicability.md?plain=1#L870, this sounds to me that older versions of TLS are still on the card to be picked up, even if that is not the intention here. can we be more explicit about the exclusion here? see the proposal below - \r\n\r\n\"A new version could use other encryption schemes than TSL 1.3 or newer and higher versions of TLS than TLS1.3 (older versions of TLS would not be used)\"",
      "createdAt": "2021-11-24T09:06:56Z",
      "updatedAt": "2021-11-24T09:06:56Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 407,
      "id": "I_kwDOBaRfW84_T3-y",
      "title": "Normative references in Applicablity document",
      "url": "https://github.com/quicwg/ops-drafts/issues/407",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I didn't expect any other normative reference than RFC 9000, 9001 in this document. Why are other references needed to be listed in the normative reference? \r\n\r\nThe reference list also have duplicate entries  (i.e. same ref named differently) this need to be fixed as well.",
      "createdAt": "2021-11-24T09:11:33Z",
      "updatedAt": "2021-11-24T09:11:33Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 408,
      "id": "I_kwDOBaRfW84_UEcU",
      "title": "Interpretation of recommendations need clarification in abstract and/or Introduction",
      "url": "https://github.com/quicwg/ops-drafts/issues/408",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "As this document does not use normative language and still makes number of recommendations, I think it is best that the abstract and/or introduction of thid document need some text to clarify how the readers should interpret those recommendations \r\nhttps://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L60",
      "createdAt": "2021-11-24T10:04:11Z",
      "updatedAt": "2021-11-24T10:04:11Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 409,
      "id": "I_kwDOBaRfW84_UF3G",
      "title": "Clarify control signal is QUIC protocol control signal",
      "url": "https://github.com/quicwg/ops-drafts/issues/409",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L85 , can we be more specific here about the control signal we are talking about is QUIC protocol control signal not really other kind of control signal that the network might have? also here it is compared with TCP, should it also mention TCP with TLS?",
      "createdAt": "2021-11-24T10:09:39Z",
      "updatedAt": "2021-11-24T10:09:39Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 410,
      "id": "I_kwDOBaRfW84_UJPR",
      "title": "Clarification on troubleshooting and in-network modification is needed in the introduction",
      "url": "https://github.com/quicwg/ops-drafts/issues/410",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L88, I am not sure I get what this paragraph is supposed to mean. Number of things -\r\n\r\n- first of all it is not clear that integrity protection actually simply the troubleshooting without defining that kind of troubleshooting we are referring to here and who is doing those, even though it is true that now network nodes cannot modify the transport layer information.\r\n- we are making a statement that in-network operations depends on modification of data, what is the data here? payload? header information? both? I think here we can reference to the I-D.ietf-tsvwg-transport-encrypt to setup the background information required to parse the statement correctly.\r\n- I am not sure how a proxy here can support modification of data. Yes, that is my read of this last of the statement. Hence, hence we might want to clarify what is the scope of this collaboration that we are referring to . ",
      "createdAt": "2021-11-24T10:22:53Z",
      "updatedAt": "2021-11-24T10:22:53Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 411,
      "id": "I_kwDOBaRfW84_ULdO",
      "title": "RFC9000 has better figure than what we have here",
      "url": "https://github.com/quicwg/ops-drafts/issues/411",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L250 here, I propose to rewrite the first part of the paragraph so that it is easy to read. for example -\r\n\r\nPackets in the handshake belong to three separate cryptographic and transport contexts -\r\n \r\n - \"Initial\", which contains observable payload, \r\n - \"Handshake\", which is not observable \r\n - \"1-RTT\", which is not observable\r\n\r\nHere we are repeating stuffs from RFC9000 without referring to them but I found the figure in RFC9000 more explanatory. why are we rewriting it here instead of just referring to RFC9000 ?\r\n",
      "createdAt": "2021-11-24T10:31:56Z",
      "updatedAt": "2021-11-24T10:31:56Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 412,
      "id": "I_kwDOBaRfW84_UNor",
      "title": "What does padding do to the observablity or manageblity?",
      "url": "https://github.com/quicwg/ops-drafts/issues/412",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L728, padding and padding frames have been discussed/mentioned several times but I haven't got a clear indication on what does the padding to the manageability.  Please point me to the description if I am mistaken.",
      "createdAt": "2021-11-24T10:39:42Z",
      "updatedAt": "2021-11-24T10:39:42Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 413,
      "id": "I_kwDOBaRfW84_UQBB",
      "title": "Otherthan HTTP3 whatelse have already been defined and deployed over QUIC?",
      "url": "https://github.com/quicwg/ops-drafts/issues/413",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L536,  this needs examples. what about DNS over QUIC as some defined over QUIC? but I would love to get educated on the deployment part and refer that from this doc to support this statement.",
      "createdAt": "2021-11-24T10:49:51Z",
      "updatedAt": "2021-11-24T10:49:51Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 414,
      "id": "I_kwDOBaRfW84_UROo",
      "title": "what is a pure-acknowledgment (ACK) packet?",
      "url": "https://github.com/quicwg/ops-drafts/issues/414",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L607, what is a pure-acknowledgment (ACK) packet?",
      "createdAt": "2021-11-24T10:55:01Z",
      "updatedAt": "2021-11-24T10:55:01Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 415,
      "id": "I_kwDOBaRfW84_UR8c",
      "title": "something for appllicablity draft instead?",
      "url": "https://github.com/quicwg/ops-drafts/issues/415",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L728 I am not sure what does the last sentence supposed to add to the context and see  it is something more important for the applicability part than manageability part.",
      "createdAt": "2021-11-24T10:58:04Z",
      "updatedAt": "2021-11-24T10:58:04Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 416,
      "id": "I_kwDOBaRfW84_UTOD",
      "title": "Clarificaton on any transport- and application-layer delay in RTT measurements",
      "url": "https://github.com/quicwg/ops-drafts/issues/416",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L753, why are we so specific about TLS crypto operations here, it could be anything like later mentioned (waiting for a response to be send) or simply work load in the endpoints. Overall the inclusion of the transport- and application-layer delay in RTT measurements has been described in different ways without mentioning why one matters more than the others in certain context while pointing to same thing. This need to be fixed.",
      "createdAt": "2021-11-24T11:03:15Z",
      "updatedAt": "2021-11-24T11:03:15Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 417,
      "id": "I_kwDOBaRfW84_UVgh",
      "title": "Clarify CE marking is observed at IP packet header",
      "url": "https://github.com/quicwg/ops-drafts/issues/417",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L835, clarify that the CE marking is observed at IP packet header and also provide a ref to CE marking",
      "createdAt": "2021-11-24T11:11:29Z",
      "updatedAt": "2021-11-24T11:11:29Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 418,
      "id": "I_kwDOBaRfW84_UYAZ",
      "title": "end-of-flow or end-of-connection?",
      "url": "https://github.com/quicwg/ops-drafts/issues/418",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L857, in the section 4.2, end-of-flow and end-of-connection both are used in a way that they both point to the same observation event. if these are same then lets stick to only one of them otherwise lets describe in a way that they point to different observation points.",
      "createdAt": "2021-11-24T11:22:03Z",
      "updatedAt": "2021-11-24T11:22:03Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 419,
      "id": "I_kwDOBaRfW84_UYb3",
      "title": "lower timeout experienced by QUIC endpoints",
      "url": "https://github.com/quicwg/ops-drafts/issues/419",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L865, where does this data come from? any reference will be great here.",
      "createdAt": "2021-11-24T11:23:52Z",
      "updatedAt": "2021-11-24T11:23:52Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 420,
      "id": "I_kwDOBaRfW84_Ua41",
      "title": "right ref to amplification attack description?",
      "url": "https://github.com/quicwg/ops-drafts/issues/420",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/quicwg/ops-drafts/blob/3893028c41567d89a6f416049cff901ce87a5c21/draft-ietf-quic-manageability.md?plain=1#L929, is this referring to the right section? if yes then can it be made specific to a particular subsection? I noted that RFC9000 describes the potential amplification attack in section 21.3",
      "createdAt": "2021-11-24T11:34:54Z",
      "updatedAt": "2021-11-24T11:34:54Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 421,
      "id": "I_kwDOBaRfW84_UciX",
      "title": "Non-adaptive application faking as QUIC flow to avoid UDP traffic blocking or filtering or throtlling.",
      "url": "https://github.com/quicwg/ops-drafts/issues/421",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "is there a possibility that non-adaptive UDP based application faking as QUIC flow to avoid UDP blocking or throttling? any advice or acknowledge to this issue to inform the network operations?",
      "createdAt": "2021-11-24T11:42:44Z",
      "updatedAt": "2021-11-24T11:42:44Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 422,
      "id": "I_kwDOBaRfW84_UfYH",
      "title": "How does conection migration impacts the per-flow basis flow treatment?",
      "url": "https://github.com/quicwg/ops-drafts/issues/422",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Section 4.8 of manageability draft expects that a per-flow basis DSCP and ECMP routing policy is used to ensure same treatment for all the packets belonging to same QUIC connection. I was wondering how does path migration impacts this? As the new path ,potentially via another network, has no idea about QUIC connection insuring all packets belonging to the same QUIC connection get uniform treatment will be difficult. what am I missing here?",
      "createdAt": "2021-11-24T11:55:16Z",
      "updatedAt": "2021-11-24T11:55:16Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 423,
      "id": "I_kwDOBaRfW84_UgEh",
      "title": "duplicate reference entries in the manageablity draft",
      "url": "https://github.com/quicwg/ops-drafts/issues/423",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "There are some outdated references those I goes will go away with further revisions. However, there are duplicate references those I believe need to be fixed manually.\r\n\r\n-- Duplicate reference: draft-ietf-quic-applicability, mentioned in\r\n     'QUIC-APPLICABILITY', was also mentioned in 'I-D.ietf-quic-applicability'.\r\n\r\n-- Duplicate reference: RFC8899, mentioned in 'RFC8899', was also mentioned\r\n     in 'DPLPMTUD'.\r\n",
      "createdAt": "2021-11-24T11:57:48Z",
      "updatedAt": "2021-11-24T11:57:48Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 427,
      "id": "I_kwDOBaRfW84_Uk1j",
      "title": "Referecne to fast resumption mechanism",
      "url": "https://github.com/quicwg/ops-drafts/issues/427",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Section 4.7 of the manageability draft needs a reference to the fast resumption mechanism.",
      "createdAt": "2021-11-24T12:18:10Z",
      "updatedAt": "2021-11-24T12:18:10Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 428,
      "id": "I_kwDOBaRfW84_dEBg",
      "title": "UDP Ports and QUIC version",
      "url": "https://github.com/quicwg/ops-drafts/issues/428",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "@martinduke  started this discussion in the mailing list (https://mailarchive.ietf.org/arch/msg/quic/SWe2q7KFbq6Xqejq_KiB5cfQ01o/), which made me think that the distinguishable QUIC version number practice should be written in the applicability draft. would like to know what others think about it.",
      "createdAt": "2021-11-26T15:09:24Z",
      "updatedAt": "2021-11-26T22:06:57Z",
      "closedAt": null,
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "I don't think that it needs consideration. We haven't talked about sharing ports before, so while QUIC gives us that option under certain narrow conditions, those are special enough that burning text on it is wasteful.",
          "createdAt": "2021-11-26T22:06:57Z",
          "updatedAt": "2021-11-26T22:06:57Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI2MjM2NTQ3",
      "title": "contributing/readme, rename drafts (-00 in progress), add missing commit on 0rtt",
      "url": "https://github.com/quicwg/ops-drafts/pull/1",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-06-19T07:10:52Z",
      "updatedAt": "2017-06-19T07:28:48Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "cb4423b432fc110e4cd2b0365561e336f1511ddf",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "draft-rename-reorg",
      "headRefOid": "12fe83118b75719a05bb71ef8c58e2d1e579b04c",
      "closedAt": "2017-06-19T07:28:34Z",
      "mergedAt": "2017-06-19T07:28:34Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "5d8aa7b0f15b955c8245f99d84f0738806748368"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI2MjQwMzQ2",
      "title": "Fix README links",
      "url": "https://github.com/quicwg/ops-drafts/pull/2",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I wonder if this isn't a consequence of an editor configuration issue, maybe in @mnot's editor, because there was definitely no spaces in the script that generated this file.",
      "createdAt": "2017-06-19T07:38:44Z",
      "updatedAt": "2017-10-20T12:56:35Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5d8aa7b0f15b955c8245f99d84f0738806748368",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "fix_readme_links",
      "headRefOid": "2b2888a0c72f18b9b834e9e001c7f728427c1211",
      "closedAt": "2017-06-21T08:13:42Z",
      "mergedAt": "2017-06-21T08:13:42Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "c0091865c64170353491d819af85264969f8b24d"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "this was my editor, my bad... need to hack vs code's reflow stuff to be nice to links.",
          "createdAt": "2017-06-21T08:14:12Z",
          "updatedAt": "2017-06-21T08:14:12Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI2NjcyNTM4",
      "title": "Cleanup",
      "url": "https://github.com/quicwg/ops-drafts/pull/4",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "This brings the ops drafts into line with the base ones.  The configuration (circle.yml, Makefile, .editorconfig) is copied over.\r\n\r\nI removed trailing whitespace from the drafts and reflowed paragraphs.\r\n\r\nI changed the references so that they are a little cleaner.  Other than the reflow, I didn't touch the text, other than to change \"section\" to \"Section\" where I noticed some errors.",
      "createdAt": "2017-06-21T03:29:01Z",
      "updatedAt": "2017-06-21T08:14:26Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5d8aa7b0f15b955c8245f99d84f0738806748368",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "cleanup",
      "headRefOid": "5d07e1a68f86ececd7c4a65666aaff473d064550",
      "closedAt": "2017-06-21T08:14:21Z",
      "mergedAt": "2017-06-21T08:14:21Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "6ddd33975d3e9cbbced93e72ba8fda1dcd22fe74"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "thanks!",
          "createdAt": "2017-06-21T08:14:26Z",
          "updatedAt": "2017-06-21T08:14:26Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI4Mzg3MDky",
      "title": "Language for Zero RTT subsection in applicability",
      "url": "https://github.com/quicwg/ops-drafts/pull/7",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "@janaiyengar -- you mentioned wanting to have a more balanced view of zero RTT in the applicability draft: is this something like what you had in mind?",
      "createdAt": "2017-06-30T14:51:16Z",
      "updatedAt": "2017-07-03T08:21:44Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "96fffa33720ce62f1b4a2129f4bedef48dd5a01a",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "thinking-in-0rtt",
      "headRefOid": "1c3e69de1abe4aa56b23ff26a3847736c7f7f352",
      "closedAt": "2017-07-03T08:21:44Z",
      "mergedAt": "2017-07-03T08:21:44Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "fcb1a06e4f4dcf39653f23c27430d8387f9b2e95"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'll go ahead and merge this to have one less editor's note in the ietf-00 submission; file an issue if this doesn't address the \"thinking in 0rtt\" point adequately.\r\n\r\nCloses #5.",
          "createdAt": "2017-07-03T08:17:29Z",
          "updatedAt": "2017-07-03T08:17:29Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 16,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ3NzYyNjQy",
      "title": "Draft reorg: add section on network-visible information",
      "url": "https://github.com/quicwg/ops-drafts/pull/16",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-10-20T10:01:25Z",
      "updatedAt": "2017-10-20T12:31:45Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "4feffd045bc2f424ae108029a7dba3f5b8a0f8cb",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "observables",
      "headRefOid": "a82f6ffba3d67f942fbf15dc3a693c7a43bd322f",
      "closedAt": "2017-10-20T12:31:45Z",
      "mergedAt": "2017-10-20T12:31:45Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "2d3f3317f562299b2439fb0b285e557604917cda"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA4MjYxMTQ=",
          "commit": {
            "abbreviatedOid": "a82f6ff"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2017-10-20T12:28:37Z",
          "updatedAt": "2017-10-20T12:28:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ3NzYzODg0",
      "title": "reflow applicability draft",
      "url": "https://github.com/quicwg/ops-drafts/pull/17",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-10-20T10:07:15Z",
      "updatedAt": "2017-10-20T10:16:53Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "4feffd045bc2f424ae108029a7dba3f5b8a0f8cb",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "app-linting-00",
      "headRefOid": "cf2e7e080d097ff5d43431a470116dff7e27781d",
      "closedAt": "2017-10-20T10:16:42Z",
      "mergedAt": "2017-10-20T10:16:42Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "11d88b4d0981843dd42355e5f4c0aa2656a61108"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 18,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ3NzkxMjA2",
      "title": "Update of wire image to transport draft version 07",
      "url": "https://github.com/quicwg/ops-drafts/pull/18",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-10-20T12:44:41Z",
      "updatedAt": "2017-10-20T12:45:38Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "2d3f3317f562299b2439fb0b285e557604917cda",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "update-of-wire-image-to-transport-draft-version-07-1",
      "headRefOid": "4c1a700c2f65327d0874634af6b7a62906c8b9ba",
      "closedAt": "2017-10-20T12:45:28Z",
      "mergedAt": "2017-10-20T12:45:28Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "0f539f6e8996fe40e7e72de097af712b8240c976"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 19,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ3NzkyODcx",
      "title": "Update authors of draft-ietf-quic-manageability",
      "url": "https://github.com/quicwg/ops-drafts/pull/19",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-10-20T12:53:13Z",
      "updatedAt": "2017-10-24T09:50:24Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "0f539f6e8996fe40e7e72de097af712b8240c976",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "authors-changed",
      "headRefOid": "a326273f138cd2893b41ac063ce6817793ba7d93",
      "closedAt": "2017-10-24T09:50:18Z",
      "mergedAt": "2017-10-24T09:50:18Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "a737531da4e0350a567c2a40ffca590ebac52ce9"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 20,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ4Nzg4NDA2",
      "title": "- Minor fixes around spell checks",
      "url": "https://github.com/quicwg/ops-drafts/pull/20",
      "state": "MERGED",
      "author": "hirenp",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "- Tried to make '4.  Use of Streams' a little more readable around\r\nexposing max allowed/used/open stream info to applications.\r\n\r\n(Not a native speaker but my best-effort after reading the draft.)",
      "createdAt": "2017-10-25T21:41:13Z",
      "updatedAt": "2017-11-02T06:10:27Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "ef9c2bb761f96d8cbc7f23e20d070978da07baa4",
      "headRepository": "hirenp/ops-drafts",
      "headRefName": "draft-ietf-quic-applicability-01",
      "headRefOid": "ba544596d17ba783ddba45573221619d7bbc2dbc",
      "closedAt": "2017-11-02T06:10:27Z",
      "mergedAt": "2017-11-02T06:10:27Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "7f3b3f5dcf783557dbb28b08f578b357320e28f3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 21,
      "id": "MDExOlB1bGxSZXF1ZXN0MTUwMDcwMzQ4",
      "title": "add application identification section",
      "url": "https://github.com/quicwg/ops-drafts/pull/21",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-11-01T15:40:13Z",
      "updatedAt": "2017-11-03T10:08:20Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "ef9c2bb761f96d8cbc7f23e20d070978da07baa4",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "handshake-is-clear",
      "headRefOid": "6f84cba1e10346865eaac085a0f9494bb4d0b350",
      "closedAt": "2017-11-03T10:08:20Z",
      "mergedAt": "2017-11-03T10:08:20Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "9059ce7b9b37b7d74bb73750ee22d2e78ab79fb1"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Re SNI and ALPN: we can certainly point at the work in progress in TLS that will encrypt this information, but IMO the document should describe the current state of the world.\r\n\r\nI've just added something pointing to the SNI encryption document; while it seems that the tunneling technique described there could pretty clearly be applied to ALPN fronting as well, is there a reference for encrypting ALPN we can use here that doesn't leave details as an exercise for the reader?",
          "createdAt": "2017-11-02T07:38:25Z",
          "updatedAt": "2017-11-02T07:52:52Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would actually prefer to describe the wire image of TLS and associated protocols in a separate document and just point to it because that's actually not only applicable for quic",
          "createdAt": "2017-11-02T09:21:00Z",
          "updatedAt": "2017-11-02T09:21:00Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "I don't have a reference for encrypting ALPN.  We don't have one.  Maybe I should write one...  On the plus side, it's something that benefits from the same techniques as SNI (and less likely to cause deployment issues, though that is only because we haven't ossified around it as much).\r\n\r\nAs for the general point about now vs. later.  One of the things we've tried to do is be very clear about what the invariants are, or what promises we are making.  It's not the same thing as true ossification defense, but if we make it clear what we are committing to, maybe we won't have people relying on stuff we might want to change.",
          "createdAt": "2017-11-02T22:38:47Z",
          "updatedAt": "2017-11-02T22:38:47Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM2MDIwOTU=",
          "commit": {
            "abbreviatedOid": "6a72b5a"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I'm a little reluctant to say that the SNI and ALPN are in the Initial packet.  The TLS working group is actively working on finding ways to avoid these being exposed.  This probably needs to be a little more nuanced.",
          "createdAt": "2017-11-01T20:08:14Z",
          "updatedAt": "2017-11-01T20:12:38Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "We just changed the name of these packets.  Sorry.",
              "createdAt": "2017-11-01T20:08:14Z",
              "updatedAt": "2017-11-02T07:47:30Z"
            },
            {
              "originalPosition": 27,
              "body": "This isn't accurate.  The client list of ALPN options is in the clear, but the server choice from that list is not.",
              "createdAt": "2017-11-01T20:08:46Z",
              "updatedAt": "2017-11-02T07:47:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM2OTI3MDM=",
          "commit": {
            "abbreviatedOid": "6a72b5a"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-11-02T06:15:30Z",
          "updatedAt": "2017-11-02T06:15:30Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "NP, was tracking -07. \r\n\r\nThe change also affects other bits of the document, which I'll address in a separate PR.",
              "createdAt": "2017-11-02T06:15:30Z",
              "updatedAt": "2017-11-02T07:47:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM5ODA2NjU=",
          "commit": {
            "abbreviatedOid": "6f84cba"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2017-11-03T00:58:15Z",
          "updatedAt": "2017-11-03T00:58:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 22,
      "id": "MDExOlB1bGxSZXF1ZXN0MTUwMjIxNzAz",
      "title": "Change packet names to track post -07",
      "url": "https://github.com/quicwg/ops-drafts/pull/22",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-11-02T07:36:00Z",
      "updatedAt": "2017-11-03T10:07:45Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "7f3b3f5dcf783557dbb28b08f578b357320e28f3",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "there-can-be-only-one-initial",
      "headRefOid": "6cb5b77efd6cdbf95c31ed3c2175f71956e4b9b0",
      "closedAt": "2017-11-03T10:07:45Z",
      "mergedAt": "2017-11-03T10:07:45Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "49171c4fae881171b9221ea13afd2399d862dd4e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 24,
      "id": "MDExOlB1bGxSZXF1ZXN0MTYxOTAxOTIx",
      "title": "Use of the Latency Spin Bit",
      "url": "https://github.com/quicwg/ops-drafts/pull/24",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR takes text from [draft-trammell-quic-spin](https://tools.ietf.org/html/draft-trammell-quic-spin) to explain the on-path use of the latency spin bit. It is the manageability draft companion of the new [latency spin bit PR](https://github.com/quicwg/base-drafts/pull/1046).",
      "createdAt": "2018-01-09T15:33:05Z",
      "updatedAt": "2018-07-03T07:34:33Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "9059ce7b9b37b7d74bb73750ee22d2e78ab79fb1",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "spin-bit-2018-edition",
      "headRefOid": "fbc84902329824c9fb8086eb8c30f7180d1e8e73",
      "closedAt": "2018-07-02T10:19:34Z",
      "mergedAt": "2018-07-02T10:19:34Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "5158113364b61d5213c368a7f9fb839fdd9c2f6e"
      },
      "comments": [
        {
          "author": "larseggert",
          "authorAssociation": "MEMBER",
          "body": "I don't think we want to merge this until we have consensus that the spin bit itself is merged?",
          "createdAt": "2018-07-02T10:22:37Z",
          "updatedAt": "2018-07-02T10:22:37Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@larseggert: fbc8490 changes this to point to the experiment (quic-spin-exp), not to the protocol, and to be clear that it's an experiment. It also pretends the VEC doesn't exist, since quic-spin-exp does so as well.\r\n\r\nIf the experiment merges into the protocol, then we update this draft to point to it; if not, then the text changes in a subsequent draft to omit in-flow RTT.",
          "createdAt": "2018-07-02T11:22:30Z",
          "updatedAt": "2018-07-02T11:25:03Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "To further clarify, the draft was mentioning that there is a discussion about the spin bit before. This PR mainly only now points to the respective draft. I think it is far to have this pointer in there for now.",
          "createdAt": "2018-07-02T11:35:31Z",
          "updatedAt": "2018-07-02T11:35:31Z"
        },
        {
          "author": "larseggert",
          "authorAssociation": "MEMBER",
          "body": "Well, as long as you are prepared to possibly remove this, fine",
          "createdAt": "2018-07-02T15:14:06Z",
          "updatedAt": "2018-07-02T15:14:06Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The nice thing about Internet-Drafts is that they are endlessly mutable. :)",
          "createdAt": "2018-07-03T07:34:33Z",
          "updatedAt": "2018-07-03T07:34:33Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMzNTYwNDQz",
          "commit": {
            "abbreviatedOid": "fbc8490"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-07-02T09:52:15Z",
          "updatedAt": "2018-07-02T09:52:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk4NjMyOTg2",
      "title": "packet number and CID changes",
      "url": "https://github.com/quicwg/ops-drafts/pull/32",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-07-02T10:14:53Z",
      "updatedAt": "2018-07-02T14:10:54Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "afabc1373d52c00fc0e679290ef21b089edb0ecd",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "header-13",
      "headRefOid": "93c02b1ed6f1fafe59d8fc194763c8d9d0e69a19",
      "closedAt": "2018-07-02T14:10:54Z",
      "mergedAt": "2018-07-02T14:10:54Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "48d3ee29d66b9c978e3fefcc450a38d60717d5fc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMzNTcwMDA3",
          "commit": {
            "abbreviatedOid": "8a62f52"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-07-02T10:19:40Z",
          "updatedAt": "2018-07-02T10:29:09Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "s/from version/from version to version/",
              "createdAt": "2018-07-02T10:19:40Z",
              "updatedAt": "2018-07-02T14:10:42Z"
            }
          ]
        }
      ]
    },
    {
      "number": 33,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk4NjM5NjM1",
      "title": "remove pmtu heading, close #8",
      "url": "https://github.com/quicwg/ops-drafts/pull/33",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-07-02T10:41:36Z",
      "updatedAt": "2018-07-02T10:53:32Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5158113364b61d5213c368a7f9fb839fdd9c2f6e",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "icmp-and-pmtu-8-23",
      "headRefOid": "8e8feb3c40c0234a3218dd1cf04e3c11dc825f05",
      "closedAt": "2018-07-02T10:53:27Z",
      "mergedAt": "2018-07-02T10:53:27Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "afabc1373d52c00fc0e679290ef21b089edb0ecd"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 36,
      "id": "MDExOlB1bGxSZXF1ZXN0MjAzMDEwNjYy",
      "title": "Clarity/grammar nits",
      "url": "https://github.com/quicwg/ops-drafts/pull/36",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A pass of clarity/grammar nits in applicability draft after reading through",
      "createdAt": "2018-07-21T13:53:46Z",
      "updatedAt": "2018-10-17T14:37:51Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "ea7f971b290bc78ffd3690d16398ea20c9988707",
      "headRepository": "tfpauly/ops-drafts",
      "headRefName": "tfp/nits",
      "headRefOid": "e8711853410a1074283548b25ed20935608c8a2c",
      "closedAt": "2018-10-17T14:37:51Z",
      "mergedAt": "2018-10-17T14:37:51Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "d6365344c89b463819d6c4c2b49d9ef1a13faf66"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1NjY2NDIz",
          "commit": {
            "abbreviatedOid": "e871185"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-10-17T14:37:26Z",
          "updatedAt": "2018-10-17T14:37:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 41,
      "id": "MDExOlB1bGxSZXF1ZXN0MjIzNjQ2MDE4",
      "title": "Text to section on keep-alives vs. resumption",
      "url": "https://github.com/quicwg/ops-drafts/pull/41",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "address issue #6",
      "createdAt": "2018-10-17T15:17:00Z",
      "updatedAt": "2020-08-21T13:41:54Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d6365344c89b463819d6c4c2b49d9ef1a13faf66",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "keep-alives",
      "headRefOid": "25497df34cc63f0e8fc6b18add9b36d46037427d",
      "closedAt": "2018-10-22T08:24:57Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "replaced by #50 ",
          "createdAt": "2018-10-22T08:24:56Z",
          "updatedAt": "2018-10-22T08:24:56Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "replaced by #50 ",
          "createdAt": "2018-10-22T08:51:39Z",
          "updatedAt": "2018-10-22T08:51:39Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "replaced by #50 ",
          "createdAt": "2018-10-22T09:04:11Z",
          "updatedAt": "2018-10-22T09:04:11Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "replaced by #50 ",
          "createdAt": "2018-10-22T09:04:51Z",
          "updatedAt": "2018-10-22T09:04:51Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "replaced by #50 ",
          "createdAt": "2018-10-22T09:08:05Z",
          "updatedAt": "2018-10-22T09:08:05Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1NjkwMDAz",
          "commit": {
            "abbreviatedOid": "7aad275"
          },
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-17T15:19:31Z",
          "updatedAt": "2018-10-17T15:19:32Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "s/time-out/time out/",
              "createdAt": "2018-10-17T15:19:31Z",
              "updatedAt": "2018-10-18T14:53:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1NjkwMjcz",
          "commit": {
            "abbreviatedOid": "7aad275"
          },
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-17T15:20:03Z",
          "updatedAt": "2018-10-17T15:20:03Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "s/re-connection/reconnect/",
              "createdAt": "2018-10-17T15:20:03Z",
              "updatedAt": "2018-10-18T14:53:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1ODY4MTA2",
          "commit": {
            "abbreviatedOid": "7aad275"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "The structure of the argument here is a bit stilted.\r\n\r\nYou want to start with the problem: UDP, middleboxes, short timers, connections become unusable.  Then, explain that QUIC provides PING, a mechanism that allows endpoints to test if a path is live and - where there are middleboxes with state that is refreshed by activity - keep any state in the path alive.\r\n\r\nThen you can say that this is extremely expensive if pinging is constant.  Mention bandwidth and also cost to battery-powered devices where maintaining an open radio channel is energy-intensive.\r\n\r\nNote then that it might be appropriate to limit use of keep-alives, but that will depend on application.  In HTTP, the recommendation is to only use them when there are outstanding requests.  At other times, allowing connections to time out or shutdown is preferable.  Then note that - with 0-RTT - the latency impact of opening a new connection is not that high.\r\n\r\nYou start and end with comments about keep-alives being application-specific.  That's not really the key point here.  You are simply trying to explain what the constraints are.  By making this your book-end statements, you shift a ton of emphasis onto the point, when it is really just a consequence of understanding the constraints you operate under.  Concentrate on documenting those constraints first and foremost, and then explain what options are available.",
          "createdAt": "2018-10-17T22:53:45Z",
          "updatedAt": "2018-10-17T22:53:45Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2MDE2NzMz",
          "commit": {
            "abbreviatedOid": "7aad275"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-18T10:02:44Z",
          "updatedAt": "2018-10-18T10:02:45Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nand simply reconnect for the next message exchange. Such an approach can\r\n```",
              "createdAt": "2018-10-18T10:02:45Z",
              "updatedAt": "2018-10-18T14:53:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 42,
      "id": "MDExOlB1bGxSZXF1ZXN0MjIzNjUxMDQy",
      "title": "removing/adding/changing section refs to other quic docs",
      "url": "https://github.com/quicwg/ops-drafts/pull/42",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Also addresses #38",
      "createdAt": "2018-10-17T15:30:24Z",
      "updatedAt": "2018-10-18T14:39:41Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d6365344c89b463819d6c4c2b49d9ef1a13faf66",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "section-refs",
      "headRefOid": "7ab7658a45256df4bf635d4bd067f602e40007f9",
      "closedAt": "2018-10-18T14:39:34Z",
      "mergedAt": "2018-10-18T14:39:34Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "17b19d61ed9646494862242b6cf7841915731265"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2MDE3MjA5",
          "commit": {
            "abbreviatedOid": "4caa371"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2018-10-18T10:03:59Z",
          "updatedAt": "2018-10-18T10:03:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 43,
      "id": "MDExOlB1bGxSZXF1ZXN0MjIzNjY3NTYx",
      "title": "New Section on Port Selection",
      "url": "https://github.com/quicwg/ops-drafts/pull/43",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "hopefully addresses issue #26",
      "createdAt": "2018-10-17T16:15:24Z",
      "updatedAt": "2020-08-21T13:41:55Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d6365344c89b463819d6c4c2b49d9ef1a13faf66",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "port-selection",
      "headRefOid": "bb253d23d77716649dbb7c00ab2fdd87b6d19cfc",
      "closedAt": "2018-10-22T14:41:19Z",
      "mergedAt": "2018-10-22T14:41:19Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "0d240836e0afe9166864051c2bea107cb0e43b5f"
      },
      "comments": [
        {
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "body": "I don't think \"the same port number as would be used for the same application over TCP\" is necessary general-purpose guidance.  I would argue for something more like:\r\n\r\n> As QUIC is a general purpose transport protocol, there is no requirement that servers use a particular UDP port for all QUIC traffic.  Instead, applications which use QUIC can specify a port number to represent the combination of that application protocol and the QUIC transport, if desired.  Using the same port number that the application uses over TCP can be a useful mnemonic in some cases.",
          "createdAt": "2018-10-17T16:57:25Z",
          "updatedAt": "2018-10-17T17:01:16Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2MTg4MjMy",
          "commit": {
            "abbreviatedOid": "a4b4b02"
          },
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-18T16:35:09Z",
          "updatedAt": "2018-10-18T16:39:38Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I'd put a sentence break after \"...in general.  Instead, the same port number is used as....\"",
              "createdAt": "2018-10-18T16:35:09Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 16,
              "body": "\"In **the** case\"",
              "createdAt": "2018-10-18T16:35:27Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 17,
              "body": "\"is used**,** which has already been register**ed**....\"",
              "createdAt": "2018-10-18T16:36:13Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 20,
              "body": "\"announce ~~of~~ a\"",
              "createdAt": "2018-10-18T16:36:31Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 22,
              "body": "\"In general**,**\"",
              "createdAt": "2018-10-18T16:36:50Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 28,
              "body": "\"...less true today due to encapsulation, mechanism**s** for **dynamic** port assignments, and NATs.\"",
              "createdAt": "2018-10-18T16:37:35Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 30,
              "body": "non~~e~~**-**standard\r\n\"used which\"",
              "createdAt": "2018-10-18T16:39:23Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTQ5Nzc3",
          "commit": {
            "abbreviatedOid": "3b84977"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm, minor edits",
          "createdAt": "2018-10-19T14:28:10Z",
          "updatedAt": "2018-10-19T14:29:25Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "typofix:\r\n\r\n```suggestion\r\nHowever, whenever a non-standard port is used which does not enable simple\r\n```",
              "createdAt": "2018-10-19T14:28:11Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 4,
              "body": "no longer necessary, RFC references can happen inline:\r\n```suggestion\r\n```",
              "createdAt": "2018-10-19T14:28:46Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 25,
              "body": "make this explicitly informative:\r\n```suggestion\r\nprotocol and associated service to which processes connect\" {{?RFC6335}}.\r\n```",
              "createdAt": "2018-10-19T14:29:11Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2OTE4MzY0",
          "commit": {
            "abbreviatedOid": "6bef3c7"
          },
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-22T13:04:37Z",
          "updatedAt": "2018-10-22T13:04:37Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Two sentences in a row begin with \"however.\"",
              "createdAt": "2018-10-22T13:04:37Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2OTMxMzgw",
          "commit": {
            "abbreviatedOid": "6bef3c7"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-22T13:44:13Z",
          "updatedAt": "2018-10-22T13:44:13Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "With QUIC, multiple different application layers can easily be multiplexed on the same port, by ALPN. For instance, all the different services on a single server could be run over UDP 443. Should this be called out in this section?",
              "createdAt": "2018-10-22T13:44:13Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2OTUwMDg0",
          "commit": {
            "abbreviatedOid": "bb253d2"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-22T14:38:26Z",
          "updatedAt": "2018-10-22T14:38:26Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "I think this is a related point -- is there anything we should say in general about ALPN in this document? Probably. Prefer to file a new issue and land this one now, though...",
              "createdAt": "2018-10-22T14:38:26Z",
              "updatedAt": "2018-10-22T14:38:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 44,
      "id": "MDExOlB1bGxSZXF1ZXN0MjIzNjczMTM3",
      "title": "Section on use of ports",
      "url": "https://github.com/quicwg/ops-drafts/pull/44",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "also to address issue #26",
      "createdAt": "2018-10-17T16:33:21Z",
      "updatedAt": "2018-10-19T13:21:46Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "89d3f71df11a9fa40ea15aa65971712c5e31ab14",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "manage-ports",
      "headRefOid": "065c3c3e00ddf75209cfdd2cee0cb1e0ece84237",
      "closedAt": "2018-10-19T13:21:41Z",
      "mergedAt": "2018-10-19T13:21:41Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "d4fd96607ff30fea1a19f13b6d50161e1b81d607"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1NzM2NDUx",
          "commit": {
            "abbreviatedOid": "e6d91d2"
          },
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2018-10-17T16:57:48Z",
          "updatedAt": "2018-10-17T17:00:36Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I disagree; see comment on #43.",
              "createdAt": "2018-10-17T16:57:48Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 7,
              "body": "s/similar as today for/as with/",
              "createdAt": "2018-10-17T16:58:36Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 8,
              "body": "s/are/is/",
              "createdAt": "2018-10-17T16:58:51Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 10,
              "body": "or *that* ... belong*ing*",
              "createdAt": "2018-10-17T16:59:07Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 14,
              "body": "**h**as a",
              "createdAt": "2018-10-17T16:59:59Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 15,
              "body": "connection**s**",
              "createdAt": "2018-10-17T17:00:24Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1NzQzNjcx",
          "commit": {
            "abbreviatedOid": "e6d91d2"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-17T17:15:34Z",
          "updatedAt": "2018-10-17T17:15:34Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "RFC3556 say \"IANA strives to assign only one assigned port number per service or application\" which implies that you use the same port for the same service even if a different transport is used. What is wrong about this sentence is that I talk about two/both services because it's the same service effectively",
              "createdAt": "2018-10-17T17:15:34Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2MTkwODk2",
          "commit": {
            "abbreviatedOid": "f6b83c5"
          },
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-18T16:41:38Z",
          "updatedAt": "2018-10-18T16:43:27Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "\"information **is** encrypted\"",
              "createdAt": "2018-10-18T16:41:39Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 9,
              "body": "\"there **is** no guarantee\" or \"there are no guarantee**s**\"; \"specific application will use the\"",
              "createdAt": "2018-10-18T16:42:46Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 11,
              "body": "I'm not sure \"Respectively\" is the word you want here.  \"For example,\" perhaps?",
              "createdAt": "2018-10-18T16:43:17Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTEzMjY4",
          "commit": {
            "abbreviatedOid": "f6b83c5"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:05:51Z",
          "updatedAt": "2018-10-19T13:05:51Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nTCP-based services, especially when application layer information is\r\n```",
              "createdAt": "2018-10-19T13:05:51Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTEzNDEw",
          "commit": {
            "abbreviatedOid": "f6b83c5"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:06:11Z",
          "updatedAt": "2018-10-19T13:06:11Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nencrypted, there is no guarantee that a specific application will use the\r\n```",
              "createdAt": "2018-10-19T13:06:11Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTEzNjU0",
          "commit": {
            "abbreviatedOid": "f6b83c5"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:06:52Z",
          "updatedAt": "2018-10-19T13:06:52Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nrespective registered service. For example, {{QUIC-TRANSPORT}} specifies\r\n```",
              "createdAt": "2018-10-19T13:06:52Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            }
          ]
        }
      ]
    },
    {
      "number": 45,
      "id": "MDExOlB1bGxSZXF1ZXN0MjIzODk1MjQz",
      "title": "Timing and CID linkability",
      "url": "https://github.com/quicwg/ops-drafts/pull/45",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Add a section about being careful with timing with respect to CID migration if you actually care about linkability.",
      "createdAt": "2018-10-18T10:01:24Z",
      "updatedAt": "2018-10-19T10:13:42Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d6365344c89b463819d6c4c2b49d9ef1a13faf66",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "timing-link-anonset-31",
      "headRefOid": "f41fbeffe6b1b16de3717c1f8c85f7852c77fe25",
      "closedAt": "2018-10-19T10:13:39Z",
      "mergedAt": "2018-10-19T10:13:39Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "8e5e6bc2bb7bcbc8bcb0777c423986f7d93a89d1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2MTQ2NDU1",
          "commit": {
            "abbreviatedOid": "f768c51"
          },
          "author": "chris-wood",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-10-18T15:09:59Z",
          "updatedAt": "2018-10-18T15:10:03Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Perhaps: In practice, a finite set of flows will be undergoing migration within any one time window from the perspective of a given observation point in the network. A key insight here is that any migration must keep at least one endpoint address constant during the migration. This finite set...\r\n\r\nThe key insight here is that , a finite ",
              "createdAt": "2018-10-18T15:09:59Z",
              "updatedAt": "2018-10-19T10:05:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 46,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0MjMzMzQ4",
      "title": "Illustration of the observable part of the QUIC handshake",
      "url": "https://github.com/quicwg/ops-drafts/pull/46",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "fix #35 ",
      "createdAt": "2018-10-19T10:01:44Z",
      "updatedAt": "2018-10-20T22:54:28Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "17b19d61ed9646494862242b6cf7841915731265",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "illustrate-handshake-35",
      "headRefOid": "66d802d847782f0bf0e1dd274eb517fcb0daeb8e",
      "closedAt": "2018-10-19T13:07:31Z",
      "mergedAt": "2018-10-19T13:07:31Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "89d3f71df11a9fa40ea15aa65971712c5e31ab14"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NDYwODYy",
          "commit": {
            "abbreviatedOid": "9e19345"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-10-19T10:15:57Z",
          "updatedAt": "2018-10-19T10:24:07Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "maybe add more sentence that the clear text handshake information can/should not be sent in the same quic packet as the encrypted stuff for security reason and therefore coalescing makes sense here (compared to just sending everything in one packet). ",
              "createdAt": "2018-10-19T10:15:58Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            },
            {
              "originalPosition": 19,
              "body": "remove the word 'sent'",
              "createdAt": "2018-10-19T10:17:21Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            },
            {
              "originalPosition": 21,
              "body": "Add \"the number of 0-RTT is limited by the initial congestion windows which is usually 10.\"...?",
              "createdAt": "2018-10-19T10:18:13Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            },
            {
              "originalPosition": 51,
              "body": "missing word, maybe 'regard'",
              "createdAt": "2018-10-19T10:19:17Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            },
            {
              "originalPosition": 53,
              "body": "maybe s/handshake/initial handshake exchange/ -> it just confusing because the packets are called Handshake",
              "createdAt": "2018-10-19T10:20:40Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            },
            {
              "originalPosition": 59,
              "body": "s/stream/context/",
              "createdAt": "2018-10-19T10:22:18Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTA3MjU4",
          "commit": {
            "abbreviatedOid": "9e19345"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T12:49:50Z",
          "updatedAt": "2018-10-19T12:49:50Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nper-version constant; we therefore consider these as visible in our illustration. The\r\n```",
              "createdAt": "2018-10-19T12:49:50Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTA3Mzkx",
          "commit": {
            "abbreviatedOid": "9e19345"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T12:50:15Z",
          "updatedAt": "2018-10-19T12:50:15Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nillustration, as shown in {{fig-handshake}}. As shown here, the client can\r\n```",
              "createdAt": "2018-10-19T12:50:15Z",
              "updatedAt": "2018-10-19T12:58:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTIxMDc2",
          "commit": {
            "abbreviatedOid": "66d802d"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:25:14Z",
          "updatedAt": "2018-10-19T13:25:15Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Is this `(optional 0RTT completion)` referring to EOED? That was removed from the spec in draft 15. I believe this should be removed.",
              "createdAt": "2018-10-19T13:25:15Z",
              "updatedAt": "2018-10-19T13:25:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTIyMTUw",
          "commit": {
            "abbreviatedOid": "66d802d"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:27:43Z",
          "updatedAt": "2018-10-19T13:27:43Z",
          "comments": [
            {
              "originalPosition": 181,
              "body": "Where the padding is placed is implementation specific. For instance, with WinQuic the last QUIC packet always gets the padding (the 0-RTT one in this case).",
              "createdAt": "2018-10-19T13:27:43Z",
              "updatedAt": "2018-10-19T13:27:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTI0MzYy",
          "commit": {
            "abbreviatedOid": "66d802d"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:32:55Z",
          "updatedAt": "2018-10-19T13:32:56Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "No, should probably just be \"optional 0RTT continuation\".",
              "createdAt": "2018-10-19T13:32:55Z",
              "updatedAt": "2018-10-19T13:32:56Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTI0NTY1",
          "commit": {
            "abbreviatedOid": "66d802d"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:33:21Z",
          "updatedAt": "2018-10-19T13:33:21Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Ah, yep. (It's still in section 6.5 of -15, which I used as a reference here). Will fix in a new PR.",
              "createdAt": "2018-10-19T13:33:21Z",
              "updatedAt": "2018-10-19T13:33:21Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTI1MzM0",
          "commit": {
            "abbreviatedOid": "66d802d"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:35:09Z",
          "updatedAt": "2018-10-19T13:35:10Z",
          "comments": [
            {
              "originalPosition": 181,
              "body": "hm, point. so there's a balance between completeness and usefulness of the illustration here (which is why I use \"Typical\" a lot). Will do a new PR to make it clear that the padding isn't always in the Initial domain.",
              "createdAt": "2018-10-19T13:35:09Z",
              "updatedAt": "2018-10-19T13:35:10Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NzY0Nzgy",
          "commit": {
            "abbreviatedOid": "66d802d"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "The problem with examples is that they might be typical, but they rarely capture the breadth of options well.  Maybe you should purposefully diverge from established practice in these to avoid certain illusions from being formed. For instance, put PADDING first. ",
          "createdAt": "2018-10-20T22:41:24Z",
          "updatedAt": "2018-10-20T22:54:28Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Datagams",
              "createdAt": "2018-10-20T22:41:24Z",
              "updatedAt": "2018-10-20T22:54:28Z"
            },
            {
              "originalPosition": 33,
              "body": "Be consistent in your use of hyphens on these. QWIK uses hyphens.",
              "createdAt": "2018-10-20T22:42:36Z",
              "updatedAt": "2018-10-20T22:54:28Z"
            },
            {
              "originalPosition": 79,
              "body": "This sets a dangerous pattern.  I am going to strongly recommend that people a. Put PADDING frames before CRYPTO, and b. Split CRYPTO frames.\r\n\r\nAlso there are multiple PADDING frames. ",
              "createdAt": "2018-10-20T22:46:48Z",
              "updatedAt": "2018-10-20T22:54:28Z"
            },
            {
              "originalPosition": 86,
              "body": "Minimum",
              "createdAt": "2018-10-20T22:47:32Z",
              "updatedAt": "2018-10-20T22:54:28Z"
            },
            {
              "originalPosition": 99,
              "body": " the ordering here is similarly problematic",
              "createdAt": "2018-10-20T22:48:40Z",
              "updatedAt": "2018-10-20T22:54:28Z"
            },
            {
              "originalPosition": 206,
              "body": "s/even//",
              "createdAt": "2018-10-20T22:51:20Z",
              "updatedAt": "2018-10-20T22:54:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 47,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0Mjg5ODQx",
      "title": "move ConnID generation language to -applicability",
      "url": "https://github.com/quicwg/ops-drafts/pull/47",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "-manageability"
      ],
      "body": "-manageablility has guidelines on how to select ConnIDs at a server, which is really more an -applicability thing. This fixes that.",
      "createdAt": "2018-10-19T13:36:32Z",
      "updatedAt": "2018-10-19T13:51:41Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d4fd96607ff30fea1a19f13b6d50161e1b81d607",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "move-cid-applicability",
      "headRefOid": "e4ad8dbcf261667dc9419a5d5ea1506e434b7175",
      "closedAt": "2018-10-19T13:51:37Z",
      "mergedAt": "2018-10-19T13:51:37Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "65b31e2208ede833eab4f747387a3c052ebff30a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTI2NTMw",
          "commit": {
            "abbreviatedOid": "1038651"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:38:00Z",
          "updatedAt": "2018-10-19T13:38:01Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nServer-generated Connection IDs must not encode any information other than that\r\n```",
              "createdAt": "2018-10-19T13:38:00Z",
              "updatedAt": "2018-10-19T13:47:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTI4NTI3",
          "commit": {
            "abbreviatedOid": "7fcee92"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "It does seem a bit weird that you start talking about Server-generated Connection IDs here and then immediately follow it with a new section called `Server-Generated Connection IDs`. Perhaps this entire section (`Information exposure and the Connection ID`) should be after the `Server-Generated Connection IDs`?",
          "createdAt": "2018-10-19T13:42:23Z",
          "updatedAt": "2018-10-19T13:42:23Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTI5NDQ3",
          "commit": {
            "abbreviatedOid": "7fcee92"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:44:31Z",
          "updatedAt": "2018-10-19T13:44:32Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Hey, wait... this entire blurb is already in the following section it looks like. Right?",
              "createdAt": "2018-10-19T13:44:32Z",
              "updatedAt": "2018-10-19T13:47:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTMwNzkw",
          "commit": {
            "abbreviatedOid": "e4ad8db"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:47:38Z",
          "updatedAt": "2018-10-19T13:47:39Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "oh, indeed. we already copied this over, but didn't remove it from -manageability.",
              "createdAt": "2018-10-19T13:47:39Z",
              "updatedAt": "2018-10-19T13:47:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 48,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0MjkyNjUx",
      "title": "followup to #46 addressing @nibanks handshake comments",
      "url": "https://github.com/quicwg/ops-drafts/pull/48",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-10-19T13:45:45Z",
      "updatedAt": "2018-10-19T13:51:52Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d4fd96607ff30fea1a19f13b6d50161e1b81d607",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "handshake-fixes",
      "headRefOid": "ce59ee970c3dd044db7ab3bc66bcad09d7259b03",
      "closedAt": "2018-10-19T13:51:52Z",
      "mergedAt": "2018-10-19T13:51:52Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "3f9281d7e233abfc5afc4e6537ea3ec4ba7f719a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTMwMzQ4",
          "commit": {
            "abbreviatedOid": "ce59ee9"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-10-19T13:46:36Z",
          "updatedAt": "2018-10-19T13:46:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 49,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0MzEzMjE1",
      "title": "Remove irrelevant text from security considerations",
      "url": "https://github.com/quicwg/ops-drafts/pull/49",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "The last two paragraphs of the security considerations section were for a (much earlier, probably pre-WG) version of the document. Now that -manageability is basically a wire image users' guide, they don't belong. So let's cut them.",
      "createdAt": "2018-10-19T14:49:44Z",
      "updatedAt": "2018-10-22T13:45:15Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3f9281d7e233abfc5afc4e6537ea3ec4ba7f719a",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "fix-seccon",
      "headRefOid": "6fe14bb275521941d8812268eb57afeadb5a38fa",
      "closedAt": "2018-10-22T13:45:10Z",
      "mergedAt": "2018-10-22T13:45:10Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "784f599c4dbd11c7a0b33da36762497e0c8d30d8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 50,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0MzIzNjgz",
      "title": "Keepalives versus 0RTT, remix",
      "url": "https://github.com/quicwg/ops-drafts/pull/50",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "An alternate approach to #41, following from @martinthomson's comment thereon.",
      "createdAt": "2018-10-19T15:19:44Z",
      "updatedAt": "2018-10-22T21:48:14Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3f9281d7e233abfc5afc4e6537ea3ec4ba7f719a",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "alternate-keepalive",
      "headRefOid": "efa01ffd0bc53a7bb0b6464de1985ea1e91e43de",
      "closedAt": "2018-10-22T14:41:35Z",
      "mergedAt": "2018-10-22T14:41:35Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "6a76919f999db4a61597cc104ea8b5f40d92263f"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the new text is now missing two points: \r\n1) It might make sense to send keep-alives if the application know that is there is new data coming, e.g. an outstating reply or a following request. I think this is what is recommended for http.\r\n2) as meantion in the transport draft we should probably say again that it must be clearly specified which party is performing the active ping-ing\r\n\r\nAlso the text basically \"just\" explains the situation but doesn't really make any recommendation. Do we maybe what to say more than that?",
          "createdAt": "2018-10-22T09:00:00Z",
          "updatedAt": "2018-10-22T09:00:00Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Yay, unicorns mean that I can't see @mirjak's comments here, though they appeared in email.\r\n\r\nIn response to those, maybe it is OK to point to HTTP/QUIC's recommendations about keep-alives.  There, it recommends limiting use of PING for keep-alive to while a request is outstanding.",
          "createdAt": "2018-10-22T11:15:44Z",
          "updatedAt": "2018-10-22T11:15:44Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 51,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0NTE5ODg2",
      "title": "Added text on generating CIDs.",
      "url": "https://github.com/quicwg/ops-drafts/pull/51",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Tries to resolve #12. I resisted the urge to reference the QUIC-LB draft, which isn't adopted.\r\n\r\nThe major substantive change is that I removed the prohibition on non-routing information in the CID. I'm happy to discuss this if people have object.",
      "createdAt": "2018-10-21T05:46:28Z",
      "updatedAt": "2018-11-17T06:02:03Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3f9281d7e233abfc5afc4e6537ea3ec4ba7f719a",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "patch-1",
      "headRefOid": "6d6eb1a201811ff634ede43d9e156f19b126938c",
      "closedAt": "2018-10-22T13:54:18Z",
      "mergedAt": "2018-10-22T13:54:18Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "cf0292450f0d3c78d4dabda2dfcca99eb2c6f441"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "LGTM. will go ahead and land this, then fix up the lint issues.",
          "createdAt": "2018-10-22T13:54:03Z",
          "updatedAt": "2018-10-22T13:54:03Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ianswett missed this during the inconsistency, will fix in working copy",
          "createdAt": "2018-10-23T06:32:06Z",
          "updatedAt": "2018-10-23T06:32:06Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "(this is done)",
          "createdAt": "2018-10-23T13:16:02Z",
          "updatedAt": "2018-10-23T13:16:02Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "BTW, this was meant to address #29 ",
          "createdAt": "2018-11-17T06:02:03Z",
          "updatedAt": "2018-11-17T06:02:03Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2ODExMDE3",
          "commit": {
            "abbreviatedOid": "6d6eb1a"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-22T00:58:51Z",
          "updatedAt": "2018-10-22T15:58:28Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "nit: propose a -> change the \r\n\r\nAlso, there's an extra space after 'to'",
              "createdAt": "2018-10-22T15:58:27Z",
              "updatedAt": "2018-10-22T15:58:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 52,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI1OTUwNjA2",
      "title": "Upgrade and rollback processes",
      "url": "https://github.com/quicwg/ops-drafts/pull/52",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "@kazuho should probably double-check my work here.\r\n\r\nThis assumes that we take the compatible version upgrade stuff, but if we don't, there's only one sentence to remove.  I've tried to keep it abstract enough that the details won't matter.\r\n\r\nCloses #28.\r\n\r\n",
      "createdAt": "2018-10-26T01:25:56Z",
      "updatedAt": "2018-10-31T09:36:06Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8488b32e895195f989280eb565a4de19debd2b4a",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "version-rollout",
      "headRefOid": "9632d31b23f39cc2b5bf6d82706d32e41c2107a3",
      "closedAt": "2018-10-31T09:36:06Z",
      "mergedAt": "2018-10-31T09:36:06Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "98cbd7f5536cb31874dfc6557c87915c3129c719"
      },
      "comments": [
        {
          "author": "kazuho",
          "authorAssociation": "MEMBER",
          "body": "LGTM. Thank you for writing it down!",
          "createdAt": "2018-10-26T01:48:49Z",
          "updatedAt": "2018-10-26T01:48:49Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY4OTgwNDQ2",
          "commit": {
            "abbreviatedOid": "9632d31"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2018-10-26T20:04:45Z",
          "updatedAt": "2018-10-26T20:04:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 53,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI3MTI1MjUw",
      "title": "Flow control deadlocks",
      "url": "https://github.com/quicwg/ops-drafts/pull/53",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "This provides some advice about flow control and how it might produce\r\ndeadlocks.  This was originally quicwg/base-drafts#1927.",
      "createdAt": "2018-10-31T00:41:26Z",
      "updatedAt": "2018-11-06T07:52:04Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8488b32e895195f989280eb565a4de19debd2b4a",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "flow-control-deadlocks",
      "headRefOid": "178c8cce71d4f3ffeb1a0ffee2de1ca8cf02cfc5",
      "closedAt": "2018-11-06T07:52:04Z",
      "mergedAt": "2018-11-06T07:52:04Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "eb677854c1c22ef20ddd757bd93d7782e6943a84"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTcwMDYwNjk5",
          "commit": {
            "abbreviatedOid": "7c3af0e"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "nits.",
          "createdAt": "2018-10-31T01:07:06Z",
          "updatedAt": "2018-10-31T01:08:20Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nwhich it depends.  A deadlock can occur if the first stream is left unread,\r\n```",
              "createdAt": "2018-10-31T01:07:06Z",
              "updatedAt": "2018-10-31T23:04:20Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nsender should ensure that dependent data is not sent until the data\r\n```",
              "createdAt": "2018-10-31T01:08:00Z",
              "updatedAt": "2018-10-31T23:04:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTcwMTYwMDAx",
          "commit": {
            "abbreviatedOid": "7c3af0e"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm modulo @janaiyengar's nits",
          "createdAt": "2018-10-31T09:37:31Z",
          "updatedAt": "2018-10-31T09:37:31Z",
          "comments": []
        }
      ]
    },
    {
      "number": 55,
      "id": "MDExOlB1bGxSZXF1ZXN0MjMwNzI3Njc0",
      "title": "For privacy concerns, the spin bit may be disabled in specific use cases.",
      "url": "https://github.com/quicwg/ops-drafts/pull/55",
      "state": "CLOSED",
      "author": "loganaden",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-11-14T06:46:57Z",
      "updatedAt": "2019-04-17T13:38:57Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "eb677854c1c22ef20ddd757bd93d7782e6943a84",
      "headRepository": "cyberstormdotmu/ops-drafts",
      "headRefName": "master",
      "headRefOid": "cec507ba3c4c9058a160951e3e969fe1c24404d1",
      "closedAt": "2019-04-17T13:38:57Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "loganaden",
          "authorAssociation": "NONE",
          "body": "ping",
          "createdAt": "2018-12-20T04:12:06Z",
          "updatedAt": "2018-12-20T04:12:06Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "pong, back from leave, looking at these drafts this week...",
          "createdAt": "2019-01-09T09:47:41Z",
          "updatedAt": "2019-01-09T09:47:41Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The document definitely needs to be updated to reflect this decision from BKK (see #58), but I think the reasons here are more comprehensive than just proxies.",
          "createdAt": "2019-01-09T10:19:18Z",
          "updatedAt": "2019-01-09T10:19:18Z"
        },
        {
          "author": "loganaden",
          "authorAssociation": "NONE",
          "body": "Thank you for your feedback. I will update the proposed patch.",
          "createdAt": "2019-01-09T10:30:49Z",
          "updatedAt": "2019-01-09T10:30:49Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "AFAICT this has been overtaken by changes to the spin bit text in -transport as well as by #66 ",
          "createdAt": "2019-04-17T13:38:57Z",
          "updatedAt": "2019-04-17T13:38:57Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 59,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQzMzQzOTQ3",
      "title": "update to recent header changes and quic-transport restructure",
      "url": "https://github.com/quicwg/ops-drafts/pull/59",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #57.",
      "createdAt": "2019-01-09T14:02:38Z",
      "updatedAt": "2019-01-24T09:11:15Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "eb677854c1c22ef20ddd757bd93d7782e6943a84",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "header-updates-57",
      "headRefOid": "9ce2058a694cbcf7da67895abff09592b3693d77",
      "closedAt": "2019-01-24T09:11:15Z",
      "mergedAt": "2019-01-24T09:11:15Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "865a567eba77947a9ca799d2e63832ca320e69be"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkwOTY2NjQy",
          "commit": {
            "abbreviatedOid": "5ac3e3e"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-01-09T22:19:21Z",
          "updatedAt": "2019-01-09T22:22:22Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Is this style of statement something you want to keep?  You could just say:\r\n\r\n> The following information is exposed is QUIC packet headers:\r\n\r\nAnd allow for the possibility of some skew.  That seems increasingly unlikely now though.",
              "createdAt": "2019-01-09T22:19:21Z",
              "updatedAt": "2019-01-14T15:07:02Z"
            },
            {
              "originalPosition": 25,
              "body": "list construction isn't parallel here",
              "createdAt": "2019-01-09T22:19:45Z",
              "updatedAt": "2019-01-14T15:07:02Z"
            },
            {
              "originalPosition": 50,
              "body": "add the token field (with accompanying length) from the Initial packet",
              "createdAt": "2019-01-09T22:20:49Z",
              "updatedAt": "2019-01-14T15:07:02Z"
            },
            {
              "originalPosition": 70,
              "body": "Separately observe that Retry and Version Negotiation packets are not encrypted or obfuscated in any way.",
              "createdAt": "2019-01-09T22:21:11Z",
              "updatedAt": "2019-01-14T15:07:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkyMTk4Mjky",
          "commit": {
            "abbreviatedOid": "9ce2058"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-01-14T15:11:14Z",
          "updatedAt": "2019-01-14T15:11:14Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "done, ignoring skew possibility...",
              "createdAt": "2019-01-14T15:11:14Z",
              "updatedAt": "2019-01-14T15:11:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkyMTk4NDUw",
          "commit": {
            "abbreviatedOid": "9ce2058"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-01-14T15:11:29Z",
          "updatedAt": "2019-01-14T15:11:29Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "yeah that annoyed me as i typed it. fixed.",
              "createdAt": "2019-01-14T15:11:29Z",
              "updatedAt": "2019-01-14T15:11:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkyMTk4NTM3",
          "commit": {
            "abbreviatedOid": "9ce2058"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-01-14T15:11:37Z",
          "updatedAt": "2019-01-14T15:11:37Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "done.",
              "createdAt": "2019-01-14T15:11:37Z",
              "updatedAt": "2019-01-14T15:11:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkyMTk4NjI0",
          "commit": {
            "abbreviatedOid": "9ce2058"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-01-14T15:11:45Z",
          "updatedAt": "2019-01-14T15:11:45Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "also done",
              "createdAt": "2019-01-14T15:11:45Z",
              "updatedAt": "2019-01-14T15:11:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 60,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQ0NDc3MDU3",
      "title": "upgrade to circleci 2.0 from template",
      "url": "https://github.com/quicwg/ops-drafts/pull/60",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-01-14T15:09:30Z",
      "updatedAt": "2019-01-14T15:10:32Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "eb677854c1c22ef20ddd757bd93d7782e6943a84",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "circleci-2",
      "headRefOid": "34a26ca0f2123641bb1cdd156efcc6d92b666eb9",
      "closedAt": "2019-01-14T15:10:32Z",
      "mergedAt": "2019-01-14T15:10:32Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "349dd9060409c73378250eb4fb63ad18aa96a455"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 64,
      "id": "MDExOlB1bGxSZXF1ZXN0MjY3Njg3NzE1",
      "title": "Explain how QUIC simplifies troubleshooting",
      "url": "https://github.com/quicwg/ops-drafts/pull/64",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Address #63.",
      "createdAt": "2019-04-05T04:38:13Z",
      "updatedAt": "2019-04-17T11:43:28Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "865a567eba77947a9ca799d2e63832ca320e69be",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "patch-2",
      "headRefOid": "3b3e6c7d2e8a20b408b0d696b0a5fa9307b43203",
      "closedAt": "2019-04-17T11:43:28Z",
      "mergedAt": "2019-04-17T11:43:28Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "358d090efed011258cdeada966862bafac2cef77"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI0MDQwNDA2",
          "commit": {
            "abbreviatedOid": "3b3e6c7"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "One nit, but LGTM. The nit is to avoid ambiguity that might arise from \"transport\" -- one might read that QUIC integrity-protects UDP headers as well, since those are technically transport.",
          "createdAt": "2019-04-08T19:25:10Z",
          "updatedAt": "2019-04-08T19:26:58Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\ncan modify QUIC's transport layer information.\r\n```",
              "createdAt": "2019-04-08T19:25:10Z",
              "updatedAt": "2019-04-08T19:26:58Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3NzAxMzg1",
          "commit": {
            "abbreviatedOid": "3b3e6c7"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM, will fix Jana's suggestion manually.",
          "createdAt": "2019-04-17T11:43:19Z",
          "updatedAt": "2019-04-17T11:43:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 65,
      "id": "MDExOlB1bGxSZXF1ZXN0MjcxMjc1MzQw",
      "title": "Add note about small packets not being ACKs",
      "url": "https://github.com/quicwg/ops-drafts/pull/65",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "...addressing @janaiyengar's #61",
      "createdAt": "2019-04-17T11:57:38Z",
      "updatedAt": "2019-04-18T07:14:07Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "358d090efed011258cdeada966862bafac2cef77",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "small-packets-61",
      "headRefOid": "23851d6f40a3e4c758f71df2965b159a5df34e36",
      "closedAt": "2019-04-18T07:14:07Z",
      "mergedAt": "2019-04-18T07:14:07Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "0fbbdb7dd237eb849656f02907337e1f0ed87ffc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3NzI3ODA2",
          "commit": {
            "abbreviatedOid": "23851d6"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-04-17T12:43:32Z",
          "updatedAt": "2019-04-17T12:43:32Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3ODcxNzQw",
          "commit": {
            "abbreviatedOid": "23851d6"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thanks for writing this up!",
          "createdAt": "2019-04-17T16:42:17Z",
          "updatedAt": "2019-04-17T16:42:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 66,
      "id": "MDExOlB1bGxSZXF1ZXN0MjcxMjg0MDgw",
      "title": "Update and restructuring on spin bit text",
      "url": "https://github.com/quicwg/ops-drafts/pull/66",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Merge/update based on text from spin-exp draft + new subsections for spin based RTT measurement and initial RTT measurement + new text on disabled spin bit ",
      "createdAt": "2019-04-17T12:24:34Z",
      "updatedAt": "2020-08-21T13:41:56Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "358d090efed011258cdeada966862bafac2cef77",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "spin-bit-text",
      "headRefOid": "541accb8219cfffdee3287e8213aca4db8aba085",
      "closedAt": "2019-04-23T15:10:06Z",
      "mergedAt": "2019-04-23T15:10:06Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "cf4cbdb0b030a7a992a5614e89e4f9972e04b2ce"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Includes PR #55 and address #58 ",
          "createdAt": "2019-04-17T12:32:06Z",
          "updatedAt": "2019-04-17T12:32:06Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "merging, though this needs some 80col cleanup (will fix in subsequent commit)",
          "createdAt": "2019-04-23T15:10:00Z",
          "updatedAt": "2019-04-23T15:10:00Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3NzI3Nzgy",
          "commit": {
            "abbreviatedOid": "efe5ff4"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm, thanks!",
          "createdAt": "2019-04-17T12:43:29Z",
          "updatedAt": "2019-04-17T12:43:29Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3ODcyOTY2",
          "commit": {
            "abbreviatedOid": "efe5ff4"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "drive by",
          "createdAt": "2019-04-17T16:44:41Z",
          "updatedAt": "2019-04-17T16:56:37Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "```suggestion\r\nThe spin bit provides an additional method to measure per-flow RTT\r\n```",
              "createdAt": "2019-04-17T16:44:41Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 79,
              "body": "You may want to clarify what \"support\" means. How about:\r\n\"Supporting the spin bit is an optional feature in QUIC.  That is, while its location is fixed in this version of QUIC, an endpoint can unilaterally choose to not support \"spinning\" the bit.  Use of the spin bit for RTT measurement by devices on path is only possible when both endpoints enable it.\"",
              "createdAt": "2019-04-17T16:49:49Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 84,
              "body": "```suggestion\r\nidentifiable based on the usage of the spin bit, it is recommended that all endpoints\r\n```",
              "createdAt": "2019-04-17T16:51:46Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 85,
              "body": "```suggestion\r\ndisable \"spinning\" randomly for at least one eighth of connections, even if\r\n```",
              "createdAt": "2019-04-17T16:52:27Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 88,
              "body": "This last sentence needs work.",
              "createdAt": "2019-04-17T16:52:58Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 98,
              "body": "```suggestion\r\nand/or application layer delay (e.g., waiting for a response to be generated). It\r\n```",
              "createdAt": "2019-04-17T16:54:13Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 111,
              "body": "```suggestion\r\nSince the spin bit logic at each endpoint considers only samples from packets\r\n```",
              "createdAt": "2019-04-17T16:55:02Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 112,
              "body": "```suggestion\r\nthat advance the largest packet number, signal generation itself is\r\n```",
              "createdAt": "2019-04-17T16:55:12Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 115,
              "body": "```suggestion\r\nreordering occurs across a spin-bit flip in the stream.\r\n```",
              "createdAt": "2019-04-17T16:55:44Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4MTMyMDAw",
          "commit": {
            "abbreviatedOid": "93f0727"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-04-18T07:19:08Z",
          "updatedAt": "2019-04-18T07:19:08Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "maybe \"Endpoint participation in spin bit signaling is optional in QUIC.\" as the first sentence, but yep...",
              "createdAt": "2019-04-18T07:19:08Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4MTMyNTYw",
          "commit": {
            "abbreviatedOid": "93f0727"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-04-18T07:20:48Z",
          "updatedAt": "2019-04-18T07:20:49Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "```suggestion\r\n{{QUIC-TRANSPORT}}, section 17.3.1.\r\n```\r\n(This is the present location in the editor's draft. Otherwise, we can omit the section reference.)",
              "createdAt": "2019-04-18T07:20:48Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4MTMzMTA0",
          "commit": {
            "abbreviatedOid": "93f0727"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-04-18T07:22:20Z",
          "updatedAt": "2019-04-18T07:22:20Z",
          "comments": [
            {
              "originalPosition": 88,
              "body": "how about \"An endpoint not participating in spin bit signaling for a given connection can use a fixed spin value for the duration of the connection, or can set the bit randomly on each packet sent.\"",
              "createdAt": "2019-04-18T07:22:20Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4MTQ5NjQw",
          "commit": {
            "abbreviatedOid": "541accb"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-04-18T08:06:26Z",
          "updatedAt": "2019-04-18T08:06:27Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "Done",
              "createdAt": "2019-04-18T08:06:26Z",
              "updatedAt": "2019-04-18T08:06:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4MTQ5Nzk2",
          "commit": {
            "abbreviatedOid": "541accb"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-04-18T08:06:50Z",
          "updatedAt": "2019-04-18T08:06:50Z",
          "comments": [
            {
              "originalPosition": 88,
              "body": "Sorry there were a bunch of nits in this sentence but used Brian's proposal now.",
              "createdAt": "2019-04-18T08:06:50Z",
              "updatedAt": "2019-04-18T08:06:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 67,
      "id": "MDExOlB1bGxSZXF1ZXN0MjcyNzc2Mjc2",
      "title": "fix 80col, minor wording tweaks to #66",
      "url": "https://github.com/quicwg/ops-drafts/pull/67",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-04-23T15:13:50Z",
      "updatedAt": "2019-04-23T15:14:58Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "cf4cbdb0b030a7a992a5614e89e4f9972e04b2ce",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "spinbit-fixup",
      "headRefOid": "39cd5a4fb903be78e8308bf3c97e0f0b1b891ec9",
      "closedAt": "2019-04-23T15:14:54Z",
      "mergedAt": "2019-04-23T15:14:54Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "edefb8a8c5018f1642f81b159de61558be33527c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 69,
      "id": "MDExOlB1bGxSZXF1ZXN0MjczMDQ3NjM5",
      "title": "fix section organization in -manageability",
      "url": "https://github.com/quicwg/ops-drafts/pull/69",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-04-24T09:29:51Z",
      "updatedAt": "2019-04-24T09:31:48Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "edefb8a8c5018f1642f81b159de61558be33527c",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "section-fix",
      "headRefOid": "8bc7c14f8fc602bff6eb34112137087bb7617239",
      "closedAt": "2019-04-24T09:31:48Z",
      "mergedAt": "2019-04-24T09:31:48Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "a3efc734e5859988e26aedfdc5dd0f65b09f1c1a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 70,
      "id": "MDExOlB1bGxSZXF1ZXN0MjczNDk2NDEy",
      "title": "change editor affiliations",
      "url": "https://github.com/quicwg/ops-drafts/pull/70",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Mirja's at Ericsson and Brian's at Google now.",
      "createdAt": "2019-04-25T12:06:14Z",
      "updatedAt": "2019-07-02T14:13:51Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "a3efc734e5859988e26aedfdc5dd0f65b09f1c1a",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "editor-affiliation",
      "headRefOid": "ba48b2e580bccd902762007f7653636935b5da48",
      "closedAt": "2019-07-02T14:13:51Z",
      "mergedAt": "2019-07-02T14:13:51Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "2be57594844bbb6be6ef7a30cb52d1f41880fb63"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU2OTIxMTc2",
          "commit": {
            "abbreviatedOid": "ba48b2e"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-07-02T14:13:46Z",
          "updatedAt": "2019-07-02T14:13:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 73,
      "id": "MDExOlB1bGxSZXF1ZXN0MjgxMjQyMDYy",
      "title": "fix a bunch of typos",
      "url": "https://github.com/quicwg/ops-drafts/pull/73",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-05-22T15:14:13Z",
      "updatedAt": "2019-05-23T10:00:34Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "a3efc734e5859988e26aedfdc5dd0f65b09f1c1a",
      "headRepository": "thomas-fossati/ops-drafts",
      "headRefName": "typos",
      "headRefOid": "2d610f18c49d0f425e11a44f8a03fb0ca4c05aab",
      "closedAt": "2019-05-23T10:00:34Z",
      "mergedAt": "2019-05-23T10:00:34Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "bec11fb6a724e50dc445fdf03cd2e45b25b94ae0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQxMTAzMjU5",
          "commit": {
            "abbreviatedOid": "2d610f1"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "excellent, thanks!",
          "createdAt": "2019-05-23T09:59:22Z",
          "updatedAt": "2019-05-23T09:59:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 74,
      "id": "MDExOlB1bGxSZXF1ZXN0MjgxNTI1OTU3",
      "title": "@thomas-fossati editorial pass: manageability",
      "url": "https://github.com/quicwg/ops-drafts/pull/74",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-05-23T09:53:52Z",
      "updatedAt": "2019-07-02T14:14:29Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "bec11fb6a724e50dc445fdf03cd2e45b25b94ae0",
      "headRepository": "thomas-fossati/ops-drafts",
      "headRefName": "edit-pass-manageability",
      "headRefOid": "3859f4a81d2bc5c659dd76aed3635d4836c2f660",
      "closedAt": "2019-07-02T14:14:29Z",
      "mergedAt": "2019-07-02T14:14:29Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "42576be7d6ac1d4bc3e8a0c5603860766c7098f1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQxMTAxMTg5",
          "commit": {
            "abbreviatedOid": "01df32c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "This is good, thanks. A couple of nits to address.\r\n\r\n(@mirjak can you review and approve? i can't since GitHub thinks it's my PR :) )",
          "createdAt": "2019-05-23T09:55:29Z",
          "updatedAt": "2019-05-23T09:57:51Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "\"ascribable\" is possibly confusing to non-native speakers; suggest simplification.\r\n\r\n```suggestion\r\ncaused by the asymmetric crypto operations associated with the TLS\r\n```",
              "createdAt": "2019-05-23T09:55:29Z",
              "updatedAt": "2019-05-23T10:14:37Z"
            },
            {
              "originalPosition": 81,
              "body": "rewrap this para (and possibly a few others); the 80col linter will choke on it.",
              "createdAt": "2019-05-23T09:56:42Z",
              "updatedAt": "2019-05-23T10:14:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU2OTIwNjI3",
          "commit": {
            "abbreviatedOid": "3859f4a"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-07-02T14:12:55Z",
          "updatedAt": "2019-07-02T14:12:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 77,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0MzAxMTk5",
      "title": "Changes from Tuesday editor's call: fix #3, fix #23",
      "url": "https://github.com/quicwg/ops-drafts/pull/77",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-07-03T19:28:14Z",
      "updatedAt": "2019-07-04T14:35:25Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8a197fec30831f4f36c361d3f6c8398e64b4136e",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "sync-rollup",
      "headRefOid": "29339155689a7d60a599fc9df041ab3341004ee7",
      "closedAt": "2019-07-04T14:35:25Z",
      "mergedAt": "2019-07-04T14:35:25Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "c961da0cc14cb1eca3dfaa57688d6a6fde9fc88e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU3ODQxMzIw",
          "commit": {
            "abbreviatedOid": "4a6638e"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-07-04T06:04:33Z",
          "updatedAt": "2019-07-04T06:04:33Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "How old is this PR?  omit_connection_id was removed in draft-ietf-quic-transport-09.",
              "createdAt": "2019-07-04T06:04:33Z",
              "updatedAt": "2019-07-04T14:32:56Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU3ODk3NzM0",
          "commit": {
            "abbreviatedOid": "4a6638e"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-07-04T08:25:04Z",
          "updatedAt": "2019-07-04T08:25:04Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Ups, this was meant to address issue #23 which was like to an old PR... we will fix that.",
              "createdAt": "2019-07-04T08:25:04Z",
              "updatedAt": "2019-07-04T14:32:56Z"
            }
          ]
        }
      ]
    },
    {
      "number": 78,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NTgwNzQy",
      "title": "Text on connection closure",
      "url": "https://github.com/quicwg/ops-drafts/pull/78",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This section was still empty so far. This PR also address issue #14.",
      "createdAt": "2019-07-04T13:23:03Z",
      "updatedAt": "2020-08-21T13:41:57Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8a197fec30831f4f36c361d3f6c8398e64b4136e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "conn-closure",
      "headRefOid": "8ae4676476cf33747ca0a67a73503e7b75e37ba9",
      "closedAt": "2019-07-04T14:16:59Z",
      "mergedAt": "2019-07-04T14:16:59Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "982851b2909a3afcb0e225a755e317b599a54f69"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MDY0MTgy",
          "commit": {
            "abbreviatedOid": "12099cb"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This is good, modulo typos (all edits as suggestions)",
          "createdAt": "2019-07-04T14:07:54Z",
          "updatedAt": "2019-07-04T14:11:20Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nQUIC connections are closed either by expiration of an idle timeout or by an\r\n```",
              "createdAt": "2019-07-04T14:07:54Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nis that an immediate close was negotiated at the application layer and\r\n```",
              "createdAt": "2019-07-04T14:08:20Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\ndefine application-specific error codes, e.g. see {{QUIC-HTTP}} section 8.1. In\r\n```",
              "createdAt": "2019-07-04T14:08:53Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nlayer negotiation, a NO_ERROR code is expected. Further, the CONNECTION_CLOSE frame\r\n```",
              "createdAt": "2019-07-04T14:09:16Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nprovides an optional reason field, that can be used to append human-readable\r\n```",
              "createdAt": "2019-07-04T14:09:31Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\ninformation to an error code. Note that QUIC RESET_STREAM and STOP_SENDING frames\r\n```",
              "createdAt": "2019-07-04T14:10:05Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nAlternatively, a QUIC connection will be silently closed by each endpoint\r\n```",
              "createdAt": "2019-07-04T14:10:24Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 31,
              "body": "```suggestion\r\napplication. If an application desires to keep the connection open for longer\r\n```",
              "createdAt": "2019-07-04T14:10:40Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nthan the announced timeout, it can send keep-alives messages. See\r\n```",
              "createdAt": "2019-07-04T14:11:01Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            }
          ]
        }
      ]
    },
    {
      "number": 80,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NTg5MTA4",
      "title": "Text on packet sizes",
      "url": "https://github.com/quicwg/ops-drafts/pull/80",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR also moves the whole section on Packetization as it shouldn't be under \"Use of Streams\" and adds an additional paragraph on packet sizes and padding.",
      "createdAt": "2019-07-04T13:45:07Z",
      "updatedAt": "2020-08-21T13:41:58Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8a197fec30831f4f36c361d3f6c8398e64b4136e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "packet-sizes",
      "headRefOid": "f7fb3c557c3394a164a5f2af7cd618bcb95d00d9",
      "closedAt": "2019-07-04T14:19:30Z",
      "mergedAt": "2019-07-04T14:19:30Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "83c32c7d8d39d9a4c208c1d0bf6711e0f57a67f4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MDY2OTE4",
          "commit": {
            "abbreviatedOid": "6dd6815"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "also good modulo typos.",
          "createdAt": "2019-07-04T14:13:09Z",
          "updatedAt": "2019-07-04T14:15:08Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nimpact the packet size. This is mainly used by QUIC itself in the first packet\r\n```",
              "createdAt": "2019-07-04T14:13:09Z",
              "updatedAt": "2019-07-04T14:18:52Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nin order to ensure that the path is capable of transferring packets of at least\r\n```",
              "createdAt": "2019-07-04T14:13:22Z",
              "updatedAt": "2019-07-04T14:18:52Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\ngreedy. Note the initial packet must have a minimum size of 1200 bytes\r\n```",
              "createdAt": "2019-07-04T14:14:14Z",
              "updatedAt": "2019-07-04T14:18:53Z"
            },
            {
              "originalPosition": 54,
              "body": "```suggestion\r\naccording to the QUIC specification. A receiver of a smaller initial packet may reject\r\n```",
              "createdAt": "2019-07-04T14:14:26Z",
              "updatedAt": "2019-07-04T14:18:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 81,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NTk2NTQ3",
      "title": "New section on connection migration",
      "url": "https://github.com/quicwg/ops-drafts/pull/81",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses issue #68",
      "createdAt": "2019-07-04T14:04:29Z",
      "updatedAt": "2020-08-21T13:42:00Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "83c32c7d8d39d9a4c208c1d0bf6711e0f57a67f4",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "migration-sec",
      "headRefOid": "d7c8a4b542ddb045f9582e01a7705f29e1f5a65a",
      "closedAt": "2019-07-04T14:24:28Z",
      "mergedAt": "2019-07-04T14:24:28Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "99477cbb6c549f69940086fc05cdddfff71de5bf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MDY4NDA2",
          "commit": {
            "abbreviatedOid": "0ce6873"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "good modulo typos",
          "createdAt": "2019-07-04T14:16:05Z",
          "updatedAt": "2019-07-04T14:17:35Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nQUIC supports connection migration. Even if lower-layer\r\n```",
              "createdAt": "2019-07-04T14:16:06Z",
              "updatedAt": "2019-07-04T14:24:03Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\naddresses (usually the 4-tuple of IP addresses and ports) changes,\r\n```",
              "createdAt": "2019-07-04T14:16:26Z",
              "updatedAt": "2019-07-04T14:24:03Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nQUIC packets can still be associated with an existing connection based on the\r\n```",
              "createdAt": "2019-07-04T14:16:43Z",
              "updatedAt": "2019-07-04T14:24:03Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nrebinding or change of the local interface. Currently QUIC only supports\r\n```",
              "createdAt": "2019-07-04T14:17:01Z",
              "updatedAt": "2019-07-04T14:24:03Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nfailover cases. Only one \"path\" can be used at a time, and as soon\r\n```",
              "createdAt": "2019-07-04T14:17:22Z",
              "updatedAt": "2019-07-04T14:24:03Z"
            }
          ]
        }
      ]
    },
    {
      "number": 82,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NjE3MzY4",
      "title": "Make it clear in the intro that we don't do proxies here.",
      "url": "https://github.com/quicwg/ops-drafts/pull/82",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-07-04T15:01:04Z",
      "updatedAt": "2019-07-04T20:07:02Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c961da0cc14cb1eca3dfaa57688d6a6fde9fc88e",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "mitm-just-say-no",
      "headRefOid": "872c5dad313b821da26199714dd934d28c96c837",
      "closedAt": "2019-07-04T20:06:41Z",
      "mergedAt": "2019-07-04T20:06:41Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "62c8be583f6f9d64d0af75e0ba2baf35562a0bde"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MTAxOTY4",
          "commit": {
            "abbreviatedOid": "761f586"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-07-04T15:27:44Z",
          "updatedAt": "2019-07-04T15:27:51Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Maybe add another half sentence saying something like \"and therefore should follow guidance provided in the QUIC base specs {{...}} and the applicability statement {{...}}\"...?",
              "createdAt": "2019-07-04T15:27:45Z",
              "updatedAt": "2019-07-04T19:57:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MTU4NjM4",
          "commit": {
            "abbreviatedOid": "761f586"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-07-04T19:46:21Z",
          "updatedAt": "2019-07-04T19:46:21Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "yep",
              "createdAt": "2019-07-04T19:46:21Z",
              "updatedAt": "2019-07-04T19:57:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 83,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NjE3ODA5",
      "title": "Use of Conn ID for entropy for stateful firewalls",
      "url": "https://github.com/quicwg/ops-drafts/pull/83",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses issue #56",
      "createdAt": "2019-07-04T15:02:19Z",
      "updatedAt": "2020-08-21T13:42:01Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c961da0cc14cb1eca3dfaa57688d6a6fde9fc88e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "conn-id-entropy",
      "headRefOid": "85bbb9fda66c94812d61edfd4342293dcb8a4568",
      "closedAt": "2019-07-04T16:26:44Z",
      "mergedAt": "2019-07-04T16:26:44Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "628004c2497f963177f56c07422e3bcd800cf2c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MTIwMTY2",
          "commit": {
            "abbreviatedOid": "c55dcee"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "lgtm modulo wording",
          "createdAt": "2019-07-04T16:21:23Z",
          "updatedAt": "2019-07-04T16:24:43Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nadditional entropy beyond the 5-tuple, if needed. The QUIC handshake needs\r\n```",
              "createdAt": "2019-07-04T16:21:23Z",
              "updatedAt": "2019-07-04T16:25:53Z"
            },
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nto be observed in order to understand whether the Connection ID is present and\r\n```",
              "createdAt": "2019-07-04T16:21:41Z",
              "updatedAt": "2019-07-04T16:25:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MTIxMDM0",
          "commit": {
            "abbreviatedOid": "c55dcee"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-07-04T16:24:54Z",
          "updatedAt": "2019-07-04T16:24:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 84,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NjIxNjQx",
      "title": "Use of one stream to achieve in-order delivery",
      "url": "https://github.com/quicwg/ops-drafts/pull/84",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "One sentences added to address remaining bits for #39",
      "createdAt": "2019-07-04T15:14:05Z",
      "updatedAt": "2020-08-21T13:42:01Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c961da0cc14cb1eca3dfaa57688d6a6fde9fc88e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "in-order-delivery",
      "headRefOid": "b274d6071809891e056533678562071caccb9dea",
      "closedAt": "2019-07-05T08:42:21Z",
      "mergedAt": "2019-07-05T08:42:21Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "03b30687f036638f843373efacb0c216e3033234"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@britram I didn't replace \"five-tuple\" with \"connection\" in this sentence in this PR:\r\n\"QUIC\u2019s stream multiplexing feature allows applications to run multiple streams over a single connection, without head-of-line blocking between streams, associated at a point in time with a single five-tuple. \"\r\nbecause it already has connection in the sentence; so we could only remove the last half sentence, but I actually think there is a value in leaving this in because some application may actually care about the 5-tuple.\r\n\r\n",
          "createdAt": "2019-07-04T15:20:25Z",
          "updatedAt": "2019-07-04T15:20:25Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "WFM. We should probably do an editorial pass to make sure we're using terms like \"5-tuple\" and \"connection\" and \"path\" properly everywhere anyway.",
          "createdAt": "2019-07-04T19:42:50Z",
          "updatedAt": "2019-07-04T19:42:50Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MTU4MjU3",
          "commit": {
            "abbreviatedOid": "6bfc940"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm modulo editorial. circleci doesn't like this but can fix after it lands.",
          "createdAt": "2019-07-04T19:43:34Z",
          "updatedAt": "2019-07-04T19:45:50Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nand therefore would suffer from head of line blocking if forced to be received\r\n```",
              "createdAt": "2019-07-04T19:43:34Z",
              "updatedAt": "2019-07-05T08:41:26Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nin order, should be transmitted over different streams. If the application\r\n```",
              "createdAt": "2019-07-04T19:43:50Z",
              "updatedAt": "2019-07-05T08:41:26Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nrequires certain data to be received in order, the same stream should\r\n```",
              "createdAt": "2019-07-04T19:44:02Z",
              "updatedAt": "2019-07-05T08:41:26Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nchunk/message. If one message is mapped to a single stream, resetting the stream\r\n```",
              "createdAt": "2019-07-04T19:44:21Z",
              "updatedAt": "2019-07-05T08:41:26Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nto expire an unacknowledged message can be used to emulate partial reliability\r\n```",
              "createdAt": "2019-07-04T19:45:11Z",
              "updatedAt": "2019-07-05T08:41:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 88,
      "id": "MDExOlB1bGxSZXF1ZXN0MzUwNzUzMjUz",
      "title": "No CIDs for NATs, addresses #87",
      "url": "https://github.com/quicwg/ops-drafts/pull/88",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-12-09T14:44:26Z",
      "updatedAt": "2020-08-21T13:42:03Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "03b30687f036638f843373efacb0c216e3033234",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "no-nat-cid-87",
      "headRefOid": "1a9fe848663534d12b4b5bd09b7fadc3a02c4255",
      "closedAt": "2020-01-06T13:24:38Z",
      "mergedAt": "2020-01-06T13:24:38Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "ba185424199ffa8b6689b77f1b3830c31e502fab"
      },
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "At Gorry's suggestion I put the NAT guidance into a different draft:\r\nhttps://datatracker.ietf.org/doc/draft-duke-quic-natsupp/\r\n\r\nSorry, I thought the notification went out automatically. Regardless, this change is fine.",
          "createdAt": "2019-12-09T16:21:47Z",
          "updatedAt": "2019-12-09T16:21:47Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4OTg3NjUw",
          "commit": {
            "abbreviatedOid": "bdb1f59"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Looks good to me. It might be worth adding a bit more (see my detailed comment).",
          "createdAt": "2019-12-09T15:08:33Z",
          "updatedAt": "2019-12-09T15:08:58Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Perhaps it should be explicitly mentioned that even the length of the CIDs can change. A change in length could break any logic that observes a handshake and assumes all CIDs have the same length.\r\n\r\nNot to mention that the tuple itself could be shared by several parallel connections, each with different CIDs (possibly with different lengths).",
              "createdAt": "2019-12-09T15:08:33Z",
              "updatedAt": "2020-01-06T13:24:01Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5MDQ0Mjg3",
          "commit": {
            "abbreviatedOid": "bdb1f59"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-12-09T16:22:09Z",
          "updatedAt": "2019-12-09T16:22:09Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5MDc0MjQ2",
          "commit": {
            "abbreviatedOid": "bdb1f59"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-12-09T17:02:19Z",
          "updatedAt": "2019-12-09T17:02:20Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nof state in the middle of a connection. Use of Connection ID is specifically \r\n```",
              "createdAt": "2019-12-09T17:02:19Z",
              "updatedAt": "2020-01-06T13:24:01Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5MDc0NDg3",
          "commit": {
            "abbreviatedOid": "bdb1f59"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-12-09T17:02:38Z",
          "updatedAt": "2019-12-09T17:02:38Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Or maybe you want the is below, but I think something is missing?",
              "createdAt": "2019-12-09T17:02:38Z",
              "updatedAt": "2020-01-06T13:24:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 89,
      "id": "MDExOlB1bGxSZXF1ZXN0MzUwNzU5NjY0",
      "title": "Don't look at version numbers. We mean it.",
      "url": "https://github.com/quicwg/ops-drafts/pull/89",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-12-09T14:56:57Z",
      "updatedAt": "2020-08-21T13:42:04Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "03b30687f036638f843373efacb0c216e3033234",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "no-version-peeking-62",
      "headRefOid": "4dae240674e92b6f0c9f9a1236da88ebe39a5973",
      "closedAt": "2020-01-06T13:27:04Z",
      "mergedAt": "2020-01-06T13:27:04Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "601878b4f4cdb81ee1995df7ff3f85c99092b75c"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixes #62 when merged.",
          "createdAt": "2019-12-09T20:00:44Z",
          "updatedAt": "2019-12-09T20:00:44Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4OTg5MjQz",
          "commit": {
            "abbreviatedOid": "48adc57"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "I'm wondering if we should use even stronger language; not that anything can really enforce it.",
          "createdAt": "2019-12-09T15:10:32Z",
          "updatedAt": "2019-12-09T15:10:32Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4OTk1Nzcx",
          "commit": {
            "abbreviatedOid": "48adc57"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I think we should make this stronger, so I made some suggestions.  Feel free to ignore or rework them.",
          "createdAt": "2019-12-09T15:19:10Z",
          "updatedAt": "2019-12-09T15:21:32Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nQUIC is expected to evolve rapidly, so new versions, both experimental and IETF standard versions, will be deployed in the\r\n```",
              "createdAt": "2019-12-09T15:19:10Z",
              "updatedAt": "2020-01-06T13:26:25Z"
            },
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nUsing a particular version number to recognize valid QUIC traffic is likely to persistently miss a fraction of QUIC flows and completely fail in the multi-year timeframe so \r\n```",
              "createdAt": "2019-12-09T15:21:11Z",
              "updatedAt": "2020-01-06T13:26:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5MTk2MDA3",
          "commit": {
            "abbreviatedOid": "a87cb9d"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "My comments left the lines >80 characters, but otherwise LG",
          "createdAt": "2019-12-09T20:24:27Z",
          "updatedAt": "2019-12-09T20:24:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 90,
      "id": "MDExOlB1bGxSZXF1ZXN0MzYyMDIxMDQ2",
      "title": "remove stale link to flow end flag discussion",
      "url": "https://github.com/quicwg/ops-drafts/pull/90",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-01-13T09:44:33Z",
      "updatedAt": "2020-08-21T13:42:05Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "601878b4f4cdb81ee1995df7ff3f85c99092b75c",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "no-stop-bit",
      "headRefOid": "b11f129db6863395d19dec9912a87489d101a856",
      "closedAt": "2020-01-27T14:06:15Z",
      "mergedAt": "2020-01-27T14:06:15Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "c41bd139038d6bf4ddd9b225461b45d05d2be394"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 94,
      "id": "MDExOlB1bGxSZXF1ZXN0NDI1MzAwNzcy",
      "title": "DDoS mitigations - linking after NAT rebinding and UDP Policing",
      "url": "https://github.com/quicwg/ops-drafts/pull/94",
      "state": "MERGED",
      "author": "igorlord",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR describes how a stateful DDoS system may link flows after a NAT rebinding event.\r\n\r\nAlso, the PR adds a section on how to police QUIC packets to minimize disruption to application that are able to failover to TCP.  Namely, avoid blocking a random fraction of UDP packets and, instead, focus on either blocking all packets from a subset of users or none at all.\r\n\r\nThis is related to areas discussed in #93.",
      "createdAt": "2020-05-29T20:00:40Z",
      "updatedAt": "2020-07-06T18:56:55Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c41bd139038d6bf4ddd9b225461b45d05d2be394",
      "headRepository": "igorlord/quic-ops-drafts",
      "headRefName": "ilubashe/ddos-mitigations",
      "headRefOid": "170feceddb079b921577ef0e4398035320f9e01d",
      "closedAt": "2020-07-06T14:14:28Z",
      "mergedAt": "2020-07-06T14:14:28Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "4540f2d82001fa5f61c6f3db96c89f827cbbf443"
      },
      "comments": [
        {
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "body": "There's no mention of the QUIC Retry mechanism here. At the very least, for long header packets, a cooperating DDoS protection device can maintain a white-list of peer IP addresses, and only let through those addresses that successfully go through the Retry scenario.\r\n\r\nThe question then is what to do with short header packets. The backend server will not have any connection state for any junk short header packets, so the server should either quickly discard the packet silently or send a stateless reset if it happens to look like a valid QUIC packet. Assuming the short header packet traffic is enough to overwhelm the server, then this PR's text would come into play. Though it'd be interesting to see some perf numbers on what kind of CPU cost there is to just reject these packets. From my previous tests with the QUIC server running in the Windows kernel, the network was the limiting factor in these type of attacks, not the CPU. So if the network is the bottleneck, does it really matter if you drop it at the server or just in front of it?",
          "createdAt": "2020-05-29T22:18:17Z",
          "updatedAt": "2020-05-29T22:18:17Z"
        },
        {
          "author": "igorlord",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@nibanks I think this section could be expanded a lot more, and Retry mechanism with a cooperating DDoS protection device definitely has a place. I am happy to give it a try in a different PR, or I can leave it to you, since you've likely thought more about this topic. The cooperation should include an agreement on the format of the Token to:\r\n1. For a Retry tokens generated by DDoS protection device, decode original_destination_connection_id.\r\n1. DDoS protection device to understand and validate server's token provided by a NEW_TOKEN frame\r\n1. DDoS protection device to understand and validate server's Retry tokens\r\n\r\nAs for the CPU cost, this consideration only comes into play, if the attack was allowed to reach backend servers.  Volumetric DDoS can saturate network links and/or be targeting networking infrastructure and not just backend servers.  As @britram is saying in #93, volumetric attacks are often mitigated further away from the edge of the network.  This kind of mitigation is the focus of UDP Policing section.",
          "createdAt": "2020-05-31T17:03:21Z",
          "updatedAt": "2020-05-31T17:10:39Z"
        },
        {
          "author": "igorlord",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Looks like https://tools.ietf.org/html/draft-ietf-quic-load-balancers-02#section-5 is an excellent discussion of Retry mechanics.  It definitely deserves a reference from this doc.\r\n\r\nThe Retry mechanisms described in LB draft are all cooperating boxes, and servers are aware of them.\r\n\r\nUnfortunately, Retry system protects only server's memory state and some CPU cycles spent on crypto.  (Servers still need to decrypt CID to decide it is invalid, and if the attacker is clever enough to establish one valid connection and use that CID in a flood, the server will also be decrypting packets.)  Retry does nothing to protect network resources.\r\n\r\nThis PR is about transparent boxes that try to mitigate volumetric attacks.",
          "createdAt": "2020-06-19T14:59:06Z",
          "updatedAt": "2020-06-19T14:59:24Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjg5MDYy",
          "commit": {
            "abbreviatedOid": "170fece"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-02T13:41:02Z",
          "updatedAt": "2020-07-02T13:41:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 98,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODA3OTg0",
      "title": "make clear we're serious about invariants",
      "url": "https://github.com/quicwg/ops-drafts/pull/98",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-07-06T14:21:05Z",
      "updatedAt": "2020-07-06T15:05:02Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "4540f2d82001fa5f61c6f3db96c89f827cbbf443",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "invariants-we-mean-it",
      "headRefOid": "9c179c3fce4358b1cf5684cff5615f27b7355182",
      "closedAt": "2020-07-06T15:04:58Z",
      "mergedAt": "2020-07-06T15:04:58Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "273a562abfb38920a0a854e11963e65a4258ca29"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addresses #96 ",
          "createdAt": "2020-07-06T14:40:11Z",
          "updatedAt": "2020-07-06T14:40:11Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 99,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODE4MzI4",
      "title": "Edits on UDP policing section",
      "url": "https://github.com/quicwg/ops-drafts/pull/99",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-07-06T14:38:30Z",
      "updatedAt": "2020-07-07T11:11:17Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "4540f2d82001fa5f61c6f3db96c89f827cbbf443",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-udp-pol",
      "headRefOid": "599e4762244eccbe588e7f6ed31f287dd004a14d",
      "closedAt": "2020-07-06T15:05:31Z",
      "mergedAt": "2020-07-06T15:05:31Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "b7f558cd8362fbd37b8c8690445b5a7ae2ed77d9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMTYxNDIz",
          "commit": {
            "abbreviatedOid": "599e476"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-06T15:05:24Z",
          "updatedAt": "2020-07-06T15:05:24Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTc5MTg1",
          "commit": {
            "abbreviatedOid": "599e476"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Belated",
          "createdAt": "2020-07-07T05:50:11Z",
          "updatedAt": "2020-07-07T05:51:48Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "\"When then\"",
              "createdAt": "2020-07-07T05:50:11Z",
              "updatedAt": "2020-07-07T05:51:48Z"
            },
            {
              "originalPosition": 31,
              "body": "\"may\" only really applies if there is a path to TCP.  If you have addressed that point elsewhere, fine, but otherwise you need to say something about that.",
              "createdAt": "2020-07-07T05:50:58Z",
              "updatedAt": "2020-07-07T05:51:48Z"
            },
            {
              "originalPosition": 34,
              "body": "\"a severe\" might be better as \"from severe\" or just \"severe\"",
              "createdAt": "2020-07-07T05:51:43Z",
              "updatedAt": "2020-07-07T05:51:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjc1ODI5",
          "commit": {
            "abbreviatedOid": "599e476"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T08:32:15Z",
          "updatedAt": "2020-07-07T08:32:16Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "done. thanks!",
              "createdAt": "2020-07-07T08:32:16Z",
              "updatedAt": "2020-07-07T08:32:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjc1ODU0",
          "commit": {
            "abbreviatedOid": "599e476"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T08:32:19Z",
          "updatedAt": "2020-07-07T08:32:22Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "done",
              "createdAt": "2020-07-07T08:32:21Z",
              "updatedAt": "2020-07-07T08:32:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjc2ODAy",
          "commit": {
            "abbreviatedOid": "599e476"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T08:33:29Z",
          "updatedAt": "2020-07-07T08:33:30Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "What do you mean by \"path to TCP\"? Doesn't \"may\" already include that is may also not work (for whatever reason)? Should we just say \"may try to failover\"? ",
              "createdAt": "2020-07-07T08:33:29Z",
              "updatedAt": "2020-07-07T08:33:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzkwMDY0",
          "commit": {
            "abbreviatedOid": "599e476"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T11:11:16Z",
          "updatedAt": "2020-07-07T11:11:17Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "This usage of \"may\" implies that this is an option.  As in \"can\". As does your \"try to\". This is more about the various ways in which failures are handled. Even in HTTP, we don't fall back, we just fail to upgrade to QUIC.  Implying that callbacks are involved might be a convenient colloquialism, but it isn't accurate. And then there are those protocols that might come to only use QUIC, which will just fail.",
              "createdAt": "2020-07-07T11:11:16Z",
              "updatedAt": "2020-07-07T11:11:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 101,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODI3MTY3",
      "title": "add ref to load balancers doc",
      "url": "https://github.com/quicwg/ops-drafts/pull/101",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-07-06T14:53:09Z",
      "updatedAt": "2020-08-21T13:41:47Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "4540f2d82001fa5f61c6f3db96c89f827cbbf443",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-ref-lb",
      "headRefOid": "3cc454d537297e120bddae66e7b58a8170a7b946",
      "closedAt": "2020-07-06T15:06:17Z",
      "mergedAt": "2020-07-06T15:06:16Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "76ec5c29655726704d268242f9213ce61f97f680"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 102,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTAyNTA0",
      "title": "More guidance on idle timeouts",
      "url": "https://github.com/quicwg/ops-drafts/pull/102",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-07-07T15:51:42Z",
      "updatedAt": "2020-08-21T13:41:35Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-idle-timeout",
      "headRefOid": "73f77f3cb85514d909639aef8abc074ffa429dfa",
      "closedAt": "2020-08-17T11:48:44Z",
      "mergedAt": "2020-08-17T11:48:44Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "43c5695112b7604735cfe1e1ea2beb211dd5f418"
      },
      "comments": [
        {
          "author": "pravb",
          "authorAssociation": "NONE",
          "body": "One concern I have with short idle timeout is impact on VM live migration. The current guidance with TCP default timeouts allows LM to have a blackout period of under 9 seconds. Do we need any guidance here to not use very low default timeouts?",
          "createdAt": "2020-07-29T14:49:50Z",
          "updatedAt": "2020-07-29T14:49:50Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzgxMzQ0",
          "commit": {
            "abbreviatedOid": "5e3060b"
          },
          "author": "marten-seemann",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T03:05:39Z",
          "updatedAt": "2020-07-08T03:07:35Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I don\u2019t understand why an implementation needs access to the computed value. A reasonable QUIC implementation could take the application\u2019s idle timeout and then take care of sending PINGs to the peer to keep the connection open. ",
              "createdAt": "2020-07-08T03:05:39Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            },
            {
              "originalPosition": 21,
              "body": "Not every application protocol has a keep-alive option. I view keep-alives as the responsibility of the QUIC stack instead. ",
              "createdAt": "2020-07-08T03:07:32Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NTI0NjUx",
          "commit": {
            "abbreviatedOid": "5e3060b"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T08:30:37Z",
          "updatedAt": "2020-07-08T08:30:37Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "The text here, I think, is appropriate for general-purpose QUIC implementations (atop which multiple applications could be bound), but yeah, it could be either-or for applications tightly bound to their implementation, based on application keepalive logic.",
              "createdAt": "2020-07-08T08:30:37Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0ODQ5Mjc2",
          "commit": {
            "abbreviatedOid": "5e3060b"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T14:54:49Z",
          "updatedAt": "2020-07-08T14:54:50Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Both might have benefits depending on the application, e.g. if you anyway need to exchange certain status update messages on application layer. Should be more explicit about that in the text?",
              "createdAt": "2020-07-08T14:54:50Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MTk3NDg4",
          "commit": {
            "abbreviatedOid": "5e3060b"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "This is reasonable advice.  A little redundant with the advice in the spec, but not overly so, I think.",
          "createdAt": "2020-07-08T23:37:06Z",
          "updatedAt": "2020-07-08T23:40:48Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nseparately after an idle timeout. If enabled as indicated by a transport\r\n```",
              "createdAt": "2020-07-08T23:37:07Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nconnection is the minimum of the two advertised values. An application\r\n```",
              "createdAt": "2020-07-08T23:37:22Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nimplementation may provide an option to defer the time-out to avoid unnecessary\r\n```",
              "createdAt": "2020-07-08T23:38:04Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            },
            {
              "originalPosition": 22,
              "body": "Be aware that this anchor is likely to change to 10.1.2.",
              "createdAt": "2020-07-08T23:38:21Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nSee {{resumption-v-keepalive}} for further guidance on keep-alives.\r\n```",
              "createdAt": "2020-07-08T23:38:35Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            },
            {
              "originalPosition": 16,
              "body": "I think that - at the level of this document - this is fine advice.  Applications do benefit from knowing when a timeout is imminent because they might want to manage the risk of failure for transactions that can't be easily retried.  At or near the timeout is not a great time to start something.",
              "createdAt": "2020-07-08T23:39:55Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 103,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTE0MjA5",
      "title": "Recommend longer timeouts",
      "url": "https://github.com/quicwg/ops-drafts/pull/103",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "But how long...?",
      "createdAt": "2020-07-07T16:12:35Z",
      "updatedAt": "2020-08-21T13:41:45Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-nat-timeout",
      "headRefOid": "b8df688c346340efefcb0cc6167f6d138adada66",
      "closedAt": "2020-07-08T08:37:24Z",
      "mergedAt": "2020-07-08T08:37:24Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "ae07a96b21a252d2523e511d96df8fd6651744de"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 104,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTIxOTY0",
      "title": "retry service and validation token",
      "url": "https://github.com/quicwg/ops-drafts/pull/104",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "References to quic-load-balancers and RFC5077 (due to lack of a better reference) added",
      "createdAt": "2020-07-07T16:26:57Z",
      "updatedAt": "2020-08-17T11:36:03Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-retry-token",
      "headRefOid": "32898e2eca0b3886df3cd7abb9314d7a809b3e01",
      "closedAt": "2020-08-17T11:35:56Z",
      "mergedAt": "2020-08-17T11:35:56Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "f8af11ac94eff91d5c91f76fcf4882948bb93e49"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I thought the plan was to have a dependency on the load balancing draft rather than merging this part into the applicability draft. However, I would also be fine to add more text here and only have an informational reference, if some is willing to provide text!",
          "createdAt": "2020-07-21T15:53:21Z",
          "updatedAt": "2020-07-21T15:53:21Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjM1MjMy",
          "commit": {
            "abbreviatedOid": "9441dac"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Are you prepared to take a dependency on QUIC-LB?",
          "createdAt": "2020-07-09T01:42:47Z",
          "updatedAt": "2020-07-09T01:43:03Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I would use \"cryptographic\".",
              "createdAt": "2020-07-09T01:42:47Z",
              "updatedAt": "2020-07-21T15:52:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNTk5NDA4",
          "commit": {
            "abbreviatedOid": "32898e2"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-21T15:53:30Z",
          "updatedAt": "2020-07-21T15:53:30Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Done",
              "createdAt": "2020-07-21T15:53:30Z",
              "updatedAt": "2020-07-21T15:53:30Z"
            }
          ]
        }
      ]
    },
    {
      "number": 105,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTI4MDc3",
      "title": "mention possibility to embed length in CID and point to quic-load-bal\u2026",
      "url": "https://github.com/quicwg/ops-drafts/pull/105",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026ancers for further algos",
      "createdAt": "2020-07-07T16:38:53Z",
      "updatedAt": "2020-08-17T11:36:54Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-cid-generate",
      "headRefOid": "e6f01326875c751b9f7b78c7b7ac251b44fbaf68",
      "closedAt": "2020-08-17T11:36:46Z",
      "mergedAt": "2020-08-17T11:36:46Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "1a9e362961af92283b45a06c7f45cff69880b5e5"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The intention was not to encrypt the length (as you say that would not be helpful) but you should probably \"grease\" the length such that those bit can not be used to identify a certain system. That was the intention here. However, maybe this is too much detail and we should remove that sentence and only refer to the load-balancer draft instead...?",
          "createdAt": "2020-07-08T14:52:38Z",
          "updatedAt": "2020-07-08T14:52:38Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NzkxNzQw",
          "commit": {
            "abbreviatedOid": "191b603"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I'm not sure if it's intended, but this paragraph implies that the length is encrypted, which is definitely not the case. The length self-encoding is there specifically to facilitate hardware lookup to obtain the keys.",
          "createdAt": "2020-07-08T13:57:29Z",
          "updatedAt": "2020-07-08T14:03:05Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "instead [of]",
              "createdAt": "2020-07-08T13:57:29Z",
              "updatedAt": "2020-07-21T15:46:11Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0ODQ3ODU0",
          "commit": {
            "abbreviatedOid": "6eb2dcb"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T14:53:23Z",
          "updatedAt": "2020-07-08T14:53:23Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "done. thx.",
              "createdAt": "2020-07-08T14:53:23Z",
              "updatedAt": "2020-07-21T15:46:11Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0ODUxMjQy",
          "commit": {
            "abbreviatedOid": "6eb2dcb"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Reading this again, I'm not sure how I would improve the phrasing. Perhaps \"embed the length of the connection ID in plaintext ...\".\r\n",
          "createdAt": "2020-07-08T14:56:42Z",
          "updatedAt": "2020-07-08T14:56:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 106,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NjQyOTEz",
      "title": "Wire image specifics editorial changes",
      "url": "https://github.com/quicwg/ops-drafts/pull/106",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #86 (which didn't require any non-editorial changes; the review is done now)",
      "createdAt": "2020-07-07T20:09:14Z",
      "updatedAt": "2020-08-21T13:41:41Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "fix-86-editorial",
      "headRefOid": "62d2951cf756ebdcaa667586d75b8af3810fad3b",
      "closedAt": "2020-07-08T08:43:16Z",
      "mergedAt": "2020-07-08T08:43:16Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "d41d5c1178693ea76dcfb4bd4de2f15dbe0591a8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 107,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NjU1MTQy",
      "title": "Improvements to section 4.4 on DDoS",
      "url": "https://github.com/quicwg/ops-drafts/pull/107",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #93 ",
      "createdAt": "2020-07-07T20:27:15Z",
      "updatedAt": "2020-08-21T13:41:40Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "more-better-ddos-93",
      "headRefOid": "7fb294630d46eec47dbe5e6fb83f3f583e174521",
      "closedAt": "2020-07-08T08:48:25Z",
      "mergedAt": "2020-07-08T08:48:25Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "4fdb4c7806c283db5a6e729bd14e38f916d2ddfc"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 108,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NjYxNDcy",
      "title": "More improvements to QUIC identification",
      "url": "https://github.com/quicwg/ops-drafts/pull/108",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #96 ",
      "createdAt": "2020-07-07T20:37:02Z",
      "updatedAt": "2020-08-21T13:41:39Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "more-invariants-96",
      "headRefOid": "faf0890511e4cbe4500b14baa8fdc86788a3a155",
      "closedAt": "2020-07-08T08:55:16Z",
      "mergedAt": "2020-07-08T08:55:16Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "e3b77b54feb3b96b5104b17d398c6e3f83c63a88"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzU0OTkz",
          "commit": {
            "abbreviatedOid": "c37db56"
          },
          "author": "marten-seemann",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T01:35:42Z",
          "updatedAt": "2020-07-08T01:38:55Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Not only is the specification work ongoing, but other protocols are already being deployed in the wild (and have been for quite a while).",
              "createdAt": "2020-07-08T01:35:43Z",
              "updatedAt": "2020-07-08T08:53:12Z"
            }
          ]
        }
      ]
    },
    {
      "number": 109,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ2MDc5MjYx",
      "title": "Clarify port selection and recommend ALPN or equivalent",
      "url": "https://github.com/quicwg/ops-drafts/pull/109",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #79",
      "createdAt": "2020-07-08T08:24:48Z",
      "updatedAt": "2020-08-21T13:41:37Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "ports-alpn-79",
      "headRefOid": "df302f46b77a7d8a7bc5e5b5e9da38a79a7d52de",
      "closedAt": "2020-07-08T09:02:30Z",
      "mergedAt": "2020-07-08T09:02:30Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "aab494ab4fde0b017091b0f8a60087342098f194"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 117,
      "id": "MDExOlB1bGxSZXF1ZXN0NDYyNDEwNDk0",
      "title": "Revision of Applicability draft",
      "url": "https://github.com/quicwg/ops-drafts/pull/117",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Intended to close #110, #111, #112, #114",
      "createdAt": "2020-08-03T21:39:04Z",
      "updatedAt": "2020-08-21T13:37:34Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "aab494ab4fde0b017091b0f8a60087342098f194",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "editorial-pass",
      "headRefOid": "4c3b507b28f92a4d54acccd40580a8cb372e8503",
      "closedAt": "2020-08-21T13:37:33Z",
      "mergedAt": "2020-08-21T13:37:33Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "83f5ba1bb4564fef73c557d553185e572a2185ae"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4Mzg3NjY0",
          "commit": {
            "abbreviatedOid": "659f2bd"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM modulo nits.",
          "createdAt": "2020-08-17T11:38:47Z",
          "updatedAt": "2020-08-17T11:40:25Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nuses the address/port four-tuple to direct traffic. Furthermore, middleboxes\r\n```",
              "createdAt": "2020-08-17T11:38:47Z",
              "updatedAt": "2020-08-19T16:11:09Z"
            },
            {
              "originalPosition": 108,
              "body": "```suggestion\r\nsection 13 of {{!QUIC}}). If there is not enough data available to fill a \r\npacket,\r\n```",
              "createdAt": "2020-08-17T11:39:55Z",
              "updatedAt": "2020-08-19T16:11:09Z"
            },
            {
              "originalPosition": 108,
              "body": "(80-char limit, we can rewrap after submit)",
              "createdAt": "2020-08-17T11:40:13Z",
              "updatedAt": "2020-08-19T16:11:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4Mzg5Njc0",
          "commit": {
            "abbreviatedOid": "659f2bd"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T11:42:32Z",
          "updatedAt": "2020-08-17T11:42:33Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "```suggestion\r\n  with no or very short idle periods, or the application's resistance \r\n  to NAT\r\n```",
              "createdAt": "2020-08-17T11:42:32Z",
              "updatedAt": "2020-08-19T16:11:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MzkxNDQ4",
          "commit": {
            "abbreviatedOid": "659f2bd"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T11:45:21Z",
          "updatedAt": "2020-08-17T11:45:22Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "Not sure I understand this point. Isn't \"simply reconnect\" on application layer point three below?",
              "createdAt": "2020-08-17T11:45:21Z",
              "updatedAt": "2020-08-19T16:11:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNzMxNDA4",
          "commit": {
            "abbreviatedOid": "4c3b507"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-19T18:28:52Z",
          "updatedAt": "2020-08-19T18:28:52Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "what this bullet means is the QUIC NAT rebinding mechanism is working fine -- there is no 4-tuple router breaking everything. So this suggested change breaks the meaning, though perhaps it's a better or equally relevant point.",
              "createdAt": "2020-08-19T18:28:52Z",
              "updatedAt": "2020-08-19T18:28:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 119,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcxNjM5NDc4",
      "title": "whitespace fix",
      "url": "https://github.com/quicwg/ops-drafts/pull/119",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-08-21T13:38:17Z",
      "updatedAt": "2020-08-21T13:41:04Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "83f5ba1bb4564fef73c557d553185e572a2185ae",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "hey-look-a-whitespace-fix",
      "headRefOid": "040390eacd52986c91e8d597d7834479d58cfc79",
      "closedAt": "2020-08-21T13:41:00Z",
      "mergedAt": "2020-08-21T13:41:00Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "f1b10231917d72247327450bac262521c19509fe"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 120,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcxNjUzNDMw",
      "title": "address @martinduke comments on streams",
      "url": "https://github.com/quicwg/ops-drafts/pull/120",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fix #113",
      "createdAt": "2020-08-21T14:04:18Z",
      "updatedAt": "2021-04-19T08:34:44Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "f1b10231917d72247327450bac262521c19509fe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "streams-113",
      "headRefOid": "4deb991b95ac91a424a4b6e18a3f15260180f017",
      "closedAt": "2020-09-07T08:47:57Z",
      "mergedAt": "2020-09-07T08:47:57Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "feab1f221b0591104e94622ba964e8a460c60c7b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNTkyMjQ2",
          "commit": {
            "abbreviatedOid": "f8fcfe3"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "The other item mentioned in the issue is whether or not stream IDs are available to the application; maybe that's not a good thing to put in here, but I would like acknowledgment that the comment was ignored rather than lost.",
          "createdAt": "2020-08-21T15:34:49Z",
          "updatedAt": "2020-08-21T15:43:33Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "of (a) unidirectional stream",
              "createdAt": "2020-08-21T15:34:50Z",
              "updatedAt": "2020-09-07T08:26:29Z"
            },
            {
              "originalPosition": 26,
              "body": "s/applciation/application",
              "createdAt": "2020-08-21T15:36:09Z",
              "updatedAt": "2020-09-07T08:26:29Z"
            },
            {
              "originalPosition": 56,
              "body": "The 2^62 point is listed a few paragraphs above; not sure which you want to keep,",
              "createdAt": "2020-08-21T15:37:14Z",
              "updatedAt": "2020-09-07T08:26:29Z"
            },
            {
              "originalPosition": 23,
              "body": "This paragraph is still obscuring the fundamental directionality of all of these events. I suggest this:\r\n\r\n\"An application can gracefully close the egress direction of a stream by instructing QUIC to send a FIN bit in a STREAM frame. It cannot gracefully close the ingress direction without a peer-generated FIN, much like in TCP. However, an endpoint can abruptly close either the ingress or egress direction; these actions are fully independent of each other.\"",
              "createdAt": "2020-08-21T15:41:52Z",
              "updatedAt": "2020-09-07T08:26:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNjMxNTU2",
          "commit": {
            "abbreviatedOid": "f04551b"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-08-24T15:50:47Z",
          "updatedAt": "2020-08-24T15:50:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 121,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcyNDg5Nzg3",
      "title": "Move text on Conn ID generation",
      "url": "https://github.com/quicwg/ops-drafts/pull/121",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses issue #116 ",
      "createdAt": "2020-08-24T12:42:20Z",
      "updatedAt": "2020-08-24T13:09:24Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "f1b10231917d72247327450bac262521c19509fe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-1",
      "headRefOid": "cab3839439d2408f79886a89061f1e2b5dc0f60f",
      "closedAt": "2020-08-24T13:09:18Z",
      "mergedAt": "2020-08-24T13:09:18Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "5560c1860600a538ad43e836dcd9d8f9aafd314b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 122,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcyNTA0ODU3",
      "title": "Update section on path migration",
      "url": "https://github.com/quicwg/ops-drafts/pull/122",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses #115 (partially at least)",
      "createdAt": "2020-08-24T13:08:45Z",
      "updatedAt": "2021-04-19T08:34:46Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "f1b10231917d72247327450bac262521c19509fe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-2",
      "headRefOid": "f631cb84438ef67b6e59cf727fa1f0aead581b57",
      "closedAt": "2020-10-12T13:59:19Z",
      "mergedAt": "2020-10-12T13:59:19Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "b08a75c10fdebe72e5d510bb895448ded6581be7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNDQ5Nzkz",
          "commit": {
            "abbreviatedOid": "0e5c0a9"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "if we want to talk about preheating, then this looks good...",
          "createdAt": "2020-08-24T13:12:06Z",
          "updatedAt": "2020-08-24T13:14:49Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nchanges, a QUIC endpoint can still associate packets with an existing connection\r\n```",
              "createdAt": "2020-08-24T13:12:06Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nto the next path. For intentional migrations the client can send probing packets\r\n```",
              "createdAt": "2020-08-24T13:12:48Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nwill also be reset on path miragtion. Therefore migration usually has a performance\r\n```",
              "createdAt": "2020-08-24T13:14:16Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MDE2MTM3",
          "commit": {
            "abbreviatedOid": "344c859"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-25T00:36:00Z",
          "updatedAt": "2020-08-25T00:39:17Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nbased on the Connection ID (see also {{connid}}) in the QUIC header,\r\n```",
              "createdAt": "2020-08-25T00:36:00Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 12,
              "body": "Avoid \"e.g.\" used in this way.  Try to say things like \"such as\" instead.",
              "createdAt": "2020-08-25T00:36:49Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 22,
              "body": "\"pre-heat\" is a colloquialism that should be avoided.  Note that probing does very little to allow the congestion window to open, so this is questionable anyway.",
              "createdAt": "2020-08-25T00:37:58Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nbefore use in order to avoid address spoofing attacks. Path validation takes one\r\n```",
              "createdAt": "2020-08-25T00:38:06Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nRTT and congestion control will also be reset on path migration. Therefore\r\n```",
              "createdAt": "2020-08-25T00:38:27Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 24,
              "body": "And maybe:\r\n\r\n```suggestion\r\nbefore use in order to avoid address spoofing attacks. Path validation takes at least one\r\n```",
              "createdAt": "2020-08-25T00:38:40Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 33,
              "body": "\"will\" or \"needs to\"?",
              "createdAt": "2020-08-25T00:39:14Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MjkxMzU4",
          "commit": {
            "abbreviatedOid": "10803f3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-25T09:13:52Z",
          "updatedAt": "2020-08-25T09:13:52Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "We discussed this ones in a multipath related discussion. The idea here was to send multiple probing packets (and II guess padding). If that is seen as a viable approach for e.g. mobile handovers, it would be good to mention is somewhere. However, I guess we would then need to say more. I believe @erickinnear brought this up... otherwise if people think it's too early to say anything like that,  can also remove the half sentence. ",
              "createdAt": "2020-08-25T09:13:52Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjI2OTI4",
          "commit": {
            "abbreviatedOid": "5307ddb"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-12T13:37:55Z",
          "updatedAt": "2020-10-12T13:37:56Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nthe peer omitting the connection ID needs to use the same local address for the\r\n```",
              "createdAt": "2020-10-12T13:37:55Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjI3OTA1",
          "commit": {
            "abbreviatedOid": "d3c72b9"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-12T13:39:07Z",
          "updatedAt": "2020-10-12T13:39:07Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nif present. This supports cases where address information changes, such as\r\n```",
              "createdAt": "2020-10-12T13:39:07Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjI4MTI0",
          "commit": {
            "abbreviatedOid": "8a5b44b"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-10-12T13:39:22Z",
          "updatedAt": "2020-10-12T13:39:22Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NDcwOTk1",
          "commit": {
            "abbreviatedOid": "f631cb8"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T13:40:14Z",
          "updatedAt": "2021-02-12T13:40:15Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "I'm in favour of not saying anything after the /and/.",
              "createdAt": "2021-02-12T13:40:15Z",
              "updatedAt": "2021-02-12T13:40:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NTk2MjMw",
          "commit": {
            "abbreviatedOid": "f631cb8"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T15:57:00Z",
          "updatedAt": "2021-02-12T15:57:00Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "@gorryfair this PR was merged a long time ago. let's have the discussion in issue #197. As you can see that issue is flagged for meeting discussion.",
              "createdAt": "2021-02-12T15:57:00Z",
              "updatedAt": "2021-02-12T15:57:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 123,
      "id": "MDExOlB1bGxSZXF1ZXN0NDgxMjY5NDMw",
      "title": "Minor update on initial encryption wording",
      "url": "https://github.com/quicwg/ops-drafts/pull/123",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "However, we also use the terms Server/Client Hello datagram to cover all QUIC Packets of the first two datagrams sent. This term is not used in the transport draft (anymore) and I find it confusing given the TLS terminology. Should we maybe use a different term?",
      "createdAt": "2020-09-07T10:34:01Z",
      "updatedAt": "2021-04-19T08:34:45Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "feab1f221b0591104e94622ba964e8a460c60c7b",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-1",
      "headRefOid": "ad1b3d257f8b19deb117d1f3bc3014c9d92c5d41",
      "closedAt": "2020-10-12T13:55:14Z",
      "mergedAt": "2020-10-12T13:55:14Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "6108267e30d436b3b29736dc48a1330c610c3d37"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjI1NDQ3",
          "commit": {
            "abbreviatedOid": "c4a42f4"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "one spelling nit, otherwise lgtm",
          "createdAt": "2020-10-12T13:36:04Z",
          "updatedAt": "2020-10-12T13:36:32Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nInitial secret. The QUIC PADDING frame shown here may be present to ensure the\r\n```",
              "createdAt": "2020-10-12T13:36:05Z",
              "updatedAt": "2020-10-12T13:51:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjM4MDM5",
          "commit": {
            "abbreviatedOid": "7c89706"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-12T13:51:11Z",
          "updatedAt": "2020-10-12T13:51:12Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nwhich is obfuscated using the Initial secret.\r\n```",
              "createdAt": "2020-10-12T13:51:12Z",
              "updatedAt": "2020-10-12T13:51:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 124,
      "id": "MDExOlB1bGxSZXF1ZXN0NDgxNTQwMjQ1",
      "title": "New section on SNI parsing and appendix on Google QUIC",
      "url": "https://github.com/quicwg/ops-drafts/pull/124",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR adds a new section on extracting the SNI. I also copied (most of) the pseudo code from Davids document into the appendix. We need to decide if we want to keep this and if so, potentially add some more explanation there.\r\n\r\nAlso we could further strengthen the point out that both the 5-tuple and conn ID can change (as in David's doc). There is already text directly following the new SNI section on \"flow association\". If we want stronger text there, maybe we can capture that in a separate issue though.",
      "createdAt": "2020-09-07T16:44:08Z",
      "updatedAt": "2021-04-19T08:34:46Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "feab1f221b0591104e94622ba964e8a460c60c7b",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-3",
      "headRefOid": "8723ebc2a4346f765565ea3d606c132c66a4ce1b",
      "closedAt": "2020-10-12T13:59:54Z",
      "mergedAt": "2020-10-12T13:59:54Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "2ea9437089ce4d72bddff1a31c2c118962097dce"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "fixes #75",
          "createdAt": "2020-10-12T13:54:53Z",
          "updatedAt": "2020-10-12T13:54:53Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNzMwODQx",
          "commit": {
            "abbreviatedOid": "bf87ad7"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I don't think that you should include the entirety of David's code.  There are ways in which that will contribute to ossification.  Indeed, I don't think that it is helpful to list draft versions here either.",
          "createdAt": "2020-09-08T00:09:59Z",
          "updatedAt": "2020-09-08T00:11:29Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "Who is this person?",
              "createdAt": "2020-09-08T00:09:59Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 98,
              "body": "```suggestion\r\nThis appendix uses the following conventions:\r\n```",
              "createdAt": "2020-09-08T00:10:46Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzODcxOTU1",
          "commit": {
            "abbreviatedOid": "bf87ad7"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "thanks for this! one major comment agreeing with @martinthomson: the appendix should drop some details of parsing Google QUIC, especially crypto frame extraction. otherwise a few nits.",
          "createdAt": "2020-09-08T07:39:23Z",
          "updatedAt": "2020-09-08T07:53:13Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nIf the SNI is not encrypted it can be derived from the QUIC Initial packet \r\n```",
              "createdAt": "2020-09-08T07:39:23Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nQUIC CRYPTO Frame containing the TLS ClientHello.\r\n```",
              "createdAt": "2020-09-08T07:39:47Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 80,
              "body": "I agree with @martinthomson here: beyond this section (mentioning the version numbers) and its first subsection (explaining how to differentiate Google and IETF QUIC), I'd scrub references to Google QUIC from the rest of the pseudocode, and split the appendix in two (first appendix: recognizing google quic; second appendix: initial salt (IETF only) and crypto frame extraction (IETF only)",
              "createdAt": "2020-09-08T07:46:06Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 84,
              "body": "Add something here noting that the rest of this document says nothing about Google QUIC.",
              "createdAt": "2020-09-08T07:46:33Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 19,
              "body": "(\"with\" sounds a little like one uses a ClientHello to parse the crypto frame, which would be a neat trick. :) )",
              "createdAt": "2020-09-08T07:49:11Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\ndependent on the frame type. Usually for QUIC version 1, the packet is expected \r\n```",
              "createdAt": "2020-09-08T07:50:40Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nwhich is one byte of zeros, may also occur before or after the CRYPTO frame.\r\n```\r\n\r\nhaving trouble parsing \"padding which is one byte of zeroes\" -- is the only allowable padding here exactly one byte long? haven't dug into this in a while.",
              "createdAt": "2020-09-08T07:51:53Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTAzMTc5",
          "commit": {
            "abbreviatedOid": "e154220"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T08:21:14Z",
          "updatedAt": "2020-09-08T08:21:15Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "sorry, sorry, sorry",
              "createdAt": "2020-09-08T08:21:14Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTExMzEx",
          "commit": {
            "abbreviatedOid": "b5e4a33"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T08:31:21Z",
          "updatedAt": "2020-09-08T08:31:21Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "Okay, I removed the salt section entirely (because I think that value should be in the tls draft and only there) and cut down the crypto frame part to IETF QUIC only.",
              "createdAt": "2020-09-08T08:31:21Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjMzOTg1",
          "commit": {
            "abbreviatedOid": "d40de06"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-12T13:46:24Z",
          "updatedAt": "2020-10-12T13:46:25Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "```suggestion\r\nThis section contains algorithms that allows parsing versions from both\r\n```",
              "createdAt": "2020-10-12T13:46:24Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjQwNjM4",
          "commit": {
            "abbreviatedOid": "d9f3660"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-12T13:54:07Z",
          "updatedAt": "2020-10-12T13:54:07Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "```suggestion\r\nGoogle QUIC. And the purpose of this appendix is merely to distinguish IETF QUIC \r\nfrom any versions of Google QUIC.\r\n```",
              "createdAt": "2020-10-12T13:54:07Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjQyNjk3",
          "commit": {
            "abbreviatedOid": "66bde06"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-10-12T13:56:24Z",
          "updatedAt": "2020-10-12T13:56:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 125,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEwMDYzNzU0",
      "title": "Clarify \"idle timeout\"",
      "url": "https://github.com/quicwg/ops-drafts/pull/125",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\"Idle period\", \"network idle timeout\", and \"idle timeout\" are distinct; addresses a comment in #118.",
      "createdAt": "2020-10-26T14:20:11Z",
      "updatedAt": "2020-11-03T01:33:06Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "2ea9437089ce4d72bddff1a31c2c118962097dce",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "118-idle-ist-nicht-gleich-idle",
      "headRefOid": "226a88869aeee0a955385d9f239a4164621523c5",
      "closedAt": "2020-11-02T14:47:10Z",
      "mergedAt": "2020-11-02T14:47:10Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "6d8e1ea8101d9d3f9128c0b006d171fb304307df"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MTEyMDQ3",
          "commit": {
            "abbreviatedOid": "b1f324e"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Some small suggestions, but looks good.",
          "createdAt": "2020-10-26T19:34:34Z",
          "updatedAt": "2020-10-26T19:41:07Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "'will' seems a bit strong.  Suggestion below\r\n\r\n```suggestion\r\nstate entry can expire after just thirty seconds of inactivity.\r\n```",
              "createdAt": "2020-10-26T19:34:34Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NTI0MDM2",
          "commit": {
            "abbreviatedOid": "b1f324e"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2020-10-27T09:57:40Z",
          "updatedAt": "2020-10-27T16:51:14Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nmuch shorter idle periods than for TCP (which recommended to be at least 2 hours 4 minutes in {{?RFC5382}}). According to a 2010 study\r\n```",
              "createdAt": "2020-10-27T09:57:40Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nstate entry will be expired after just thirty seconds of inactivity. Section 3.5 of {{!RFC8085}} further discusses keep-alive intervals for UDP and requires a minimum value of 15 seconds but recommends larger values or no use of keep-alive at all. \r\n```",
              "createdAt": "2020-10-27T09:59:55Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            },
            {
              "originalPosition": 13,
              "body": "Not sure if this fits here best but we should have reference to RFC8085 somewhere.",
              "createdAt": "2020-10-27T10:08:11Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MjI5MTI1",
          "commit": {
            "abbreviatedOid": "b1f324e"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T23:43:09Z",
          "updatedAt": "2020-10-27T23:45:22Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Do we have any evidence that this recommendation is followed?  It seems safer to avoid mention of specifics for TCP, especially since they aren't really relevant to the current discussion.",
              "createdAt": "2020-10-27T23:43:09Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            },
            {
              "originalPosition": 13,
              "body": "This is a fine suggestion, but I worry that this is starting to load up on text that is duplicative of the main spec.",
              "createdAt": "2020-10-27T23:43:50Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nQUIC connections are closed either by expiration of an idle timeout, as\r\ndetermined by transport parameters, or by an\r\n```",
              "createdAt": "2020-10-27T23:44:15Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTA0NDg3",
          "commit": {
            "abbreviatedOid": "b1f324e"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-31T02:11:33Z",
          "updatedAt": "2020-10-31T02:11:33Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "I believe there's strong evidence it's not followed.  I believe I discussed this with @MikeBishop at some point, but I don't know if there's any relevant public data?",
              "createdAt": "2020-10-31T02:11:33Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNTQxMDMz",
          "commit": {
            "abbreviatedOid": "3ede78c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-02T11:19:06Z",
          "updatedAt": "2020-11-02T11:19:07Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Taking this suggestion but editing it a bit to reflect state of the literature AIUI.",
              "createdAt": "2020-11-02T11:19:06Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNTQzNjA5",
          "commit": {
            "abbreviatedOid": "109610c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-02T11:23:05Z",
          "updatedAt": "2020-11-02T11:23:05Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "In this case, it's more illustrative than duplicative (establishing context for UDP keepalive and why we make the recommendations we do in the doc), so I'd suggest adding the ref (and have done in another commit)",
              "createdAt": "2020-11-02T11:23:05Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzAyMTEw",
          "commit": {
            "abbreviatedOid": "226a888"
          },
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-02T14:55:21Z",
          "updatedAt": "2020-11-02T14:55:21Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Based on my vague memories of a study done at Microsoft several years ago, a 30-minute idle period on a TCP connection was tolerated by most firewalls, but beyond that you start finding your connection silently closed.",
              "createdAt": "2020-11-02T14:55:21Z",
              "updatedAt": "2020-11-02T14:55:21Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMTQzMzQ4",
          "commit": {
            "abbreviatedOid": "226a888"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-03T01:33:06Z",
          "updatedAt": "2020-11-03T01:33:06Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "When I was at Microsoft I learned that 30 minutes (if I remember correctly, it was more like 28 or 29 for some unknown reason) was only available on certain ports (those used for push notifications) in mobile networks. Wired networks did tend to tolerate longer periods more broadly.",
              "createdAt": "2020-11-03T01:33:06Z",
              "updatedAt": "2020-11-03T01:33:06Z"
            }
          ]
        }
      ]
    },
    {
      "number": 126,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEwNjMyNzM2",
      "title": "Further text on idle timeout/keep alive frequency",
      "url": "https://github.com/quicwg/ops-drafts/pull/126",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-10-27T10:14:39Z",
      "updatedAt": "2021-04-19T08:34:51Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "118-idle-ist-nicht-gleich-idle",
      "baseRefOid": "b1f324e3435e939482cd2b39b08b29defa3e4248",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-4",
      "headRefOid": "069188e9582e6cadab4e78462968930d040c31f2",
      "closedAt": "2020-11-02T14:37:10Z",
      "mergedAt": "2020-11-02T14:37:10Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "b7781a35bf9194446a2fd5ff59563d566536f52c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3ODAwNjIz",
          "commit": {
            "abbreviatedOid": "076aa62"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T14:57:19Z",
          "updatedAt": "2020-10-27T14:57:20Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Wording suggestion, but I'm not sure what 'mobility' is in this context.  Is that moving connection migration(ie: Cell to Wifi) or something else?\r\n\r\n```suggestion\r\ndata centres in order to lower network and computational load. Sending PING\r\nframes more frequently than every 30 seconds over long idle periods may result\r\nin a too much unproductive traffic and power usage for some situations. Additionally,\r\ntime-outs shorter than 30 seconds can make it harder to handle short network\r\ninterruptions, such as VM migration or coverage loss during mobilty.\r\n```",
              "createdAt": "2020-10-27T14:57:19Z",
              "updatedAt": "2020-10-27T16:49:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3ODcyMzQx",
          "commit": {
            "abbreviatedOid": "076aa62"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T15:58:44Z",
          "updatedAt": "2020-10-27T15:58:45Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I think `a` is unnecessary here.\r\n```suggestion\r\nin too much unproductive traffic and power usage for some situations. Further\r\n```\r\nThough `too much unproductive` might also be better replaced with `unacceptable` as well.",
              "createdAt": "2020-10-27T15:58:45Z",
              "updatedAt": "2020-10-27T16:49:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3OTIyNTAy",
          "commit": {
            "abbreviatedOid": "076aa62"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T16:46:57Z",
          "updatedAt": "2020-10-27T16:46:57Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "No necessarily mitigation (but could be as well) but in taps we recently discussed this example where you walk into an elevator and loose connectivity for a few seconds but then are connected immediately again to the same network when you step out. Maybe that not worth mentioning explicitly?",
              "createdAt": "2020-10-27T16:46:57Z",
              "updatedAt": "2020-10-27T16:49:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3OTIzMjE5",
          "commit": {
            "abbreviatedOid": "4af90bf"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T16:47:38Z",
          "updatedAt": "2020-10-27T16:47:39Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Yes, I was looking for better wording here as well!",
              "createdAt": "2020-10-27T16:47:38Z",
              "updatedAt": "2020-10-27T16:49:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 127,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEwNjQxODM4",
      "title": "More text on SPA",
      "url": "https://github.com/quicwg/ops-drafts/pull/127",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-10-27T10:28:58Z",
      "updatedAt": "2020-11-02T15:00:45Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "2ea9437089ce4d72bddff1a31c2c118962097dce",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-5",
      "headRefOid": "f287e9b40f474ac7a2160c9b76c59f7288aaf605",
      "closedAt": "2020-11-02T15:00:41Z",
      "mergedAt": "2020-11-02T15:00:41Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "e6a044711ae2b33647241c4bd535a1bc46b07a30"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "note: fixes #115 when merged.",
          "createdAt": "2020-11-02T14:59:24Z",
          "updatedAt": "2020-11-02T14:59:24Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjMyNjEz",
          "commit": {
            "abbreviatedOid": "b959954"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T12:09:01Z",
          "updatedAt": "2020-10-27T12:09:02Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\ngenerally recommended when migration is supported.\r\n```",
              "createdAt": "2020-10-27T12:09:01Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjMyOTE0",
          "commit": {
            "abbreviatedOid": "b959954"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T12:09:24Z",
          "updatedAt": "2020-10-27T12:09:24Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nConnection ID is strongly recommended. A non-empty Connection ID is\r\n```",
              "createdAt": "2020-10-27T12:09:24Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjM1MjA1",
          "commit": {
            "abbreviatedOid": "b959954"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T12:12:24Z",
          "updatedAt": "2020-10-27T12:12:30Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "This is pretty woolly.  I think that you want to say why: identifying the connection that packets are destined for is more challenging if they don't include a connection ID and the source address might have changed.  An empty connection ID is only appropriate if the local address is unique, which opens up some negative consequences in terms of providing obvious linkability (though in practice this only works with limited numbers of connections on the target IP+port, so linkability is pretty much a given at that point.)",
              "createdAt": "2020-10-27T12:12:24Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3OTI1NTY0",
          "commit": {
            "abbreviatedOid": "6e1915e"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T16:50:01Z",
          "updatedAt": "2020-10-27T16:50:02Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I mainly wanted to give a recommendation that if you have no idea if you want/need a connection ID, you should probably have it (assuming that people agree that the right recommendation to give). I can add more explanation and also say something about linkability but I wanted to keep it simple... happy to take suggestions",
              "createdAt": "2020-10-27T16:50:01Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MDE5MzAw",
          "commit": {
            "abbreviatedOid": "6e1915e"
          },
          "author": "ekinnear",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T18:28:43Z",
          "updatedAt": "2020-10-27T18:28:44Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Tiny nit\r\n```suggestion\r\naddress as transport paramenter during the TLS handshake and the client can \r\nselect between the two if both are provided. See also Section 9.6 of {{!QUIC}}.\r\n```",
              "createdAt": "2020-10-27T18:28:43Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MjMwMjcy",
          "commit": {
            "abbreviatedOid": "6e1915e"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T23:46:36Z",
          "updatedAt": "2020-10-27T23:51:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nconnection ID is strongly recommended. A non-empty connection ID is\r\n```\r\nI know that this likely offends some proper noun sensibilities, but we use lowercase for connection ID.",
              "createdAt": "2020-10-27T23:46:36Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\naddress as transport parameter during the TLS handshake and the client can \r\nselect between the two if both are provided. See also Section 9.6 of {{!QUIC}}.\r\n```\r\nWithout the typo.",
              "createdAt": "2020-10-27T23:47:06Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nafter the handshake, e.g., to move from an address that is shared by multiple\r\n```",
              "createdAt": "2020-10-27T23:47:23Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nafter the handshake, e.g., to move from an anycast address to a unicast\r\naddress. The server can provide an IPv4 and an IPv6\r\n```\r\n\r\nThough it might be better to instead say.\r\n\r\n```suggestion\r\nafter the handshake, e.g. to move from an address that is shared by multiple\r\nservers to an address that is unique to the server instance. The server can\r\nprovide an IPv4 and an IPv6\r\n```\r\n\r\n...as that allows for the possibility of both anycast -> unicast transitions and load balanced to non-load balanced transitions both.",
              "createdAt": "2020-10-27T23:48:17Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDQ2MDcz",
          "commit": {
            "abbreviatedOid": "f708df4"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-28T20:13:34Z",
          "updatedAt": "2020-10-28T20:35:58Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nconnection ID by the server is strongly recommended. A non-empty server\r\nconnection ID is also strongly recommended when migration is supported.\r\n```",
              "createdAt": "2020-10-28T20:13:34Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            },
            {
              "originalPosition": 4,
              "body": "Even if the client knows, it can't communicate that to the server in v1.\r\n\r\n```suggestion\r\nAs such if the client is known or likely to sit behind a NAT, use of the\r\n```",
              "createdAt": "2020-10-28T20:15:25Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nOnly the client can actively migrate. However, servers can indicate during the\r\n```",
              "createdAt": "2020-10-28T20:34:52Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nprovide an IPv4 and an IPv6 address in a transport parameter during the TLS\r\n```",
              "createdAt": "2020-10-28T20:35:40Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzA3MTk4",
          "commit": {
            "abbreviatedOid": "f287e9b"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-02T15:00:30Z",
          "updatedAt": "2020-11-02T15:00:30Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "We're going to go ahead and merge this for the 109 document deadline submission; please open another issue / provide a PR / haunt us otherwise if this needs more discussion.",
              "createdAt": "2020-11-02T15:00:30Z",
              "updatedAt": "2020-11-02T15:00:30Z"
            }
          ]
        }
      ]
    },
    {
      "number": 128,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE0MDI2NzMy",
      "title": "Make applicability to V1 more emphatic.",
      "url": "https://github.com/quicwg/ops-drafts/pull/128",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #95.",
      "createdAt": "2020-11-02T12:31:31Z",
      "updatedAt": "2020-11-02T14:58:54Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "2ea9437089ce4d72bddff1a31c2c118962097dce",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "95-v1-for-reals-yo",
      "headRefOid": "2a50410dad9c2650c5a85175604c912956bcfb2d",
      "closedAt": "2020-11-02T14:58:50Z",
      "mergedAt": "2020-11-02T14:58:50Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "997cf66ff3758bf7f85dfb9cb62de7ad59f8514e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNjkyNDky",
          "commit": {
            "abbreviatedOid": "548cc90"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-11-02T14:45:26Z",
          "updatedAt": "2020-11-02T14:45:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 129,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIyOTI1NDA2",
      "title": "Review and fix section references into other QUIC docs.",
      "url": "https://github.com/quicwg/ops-drafts/pull/129",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "editorial"
      ],
      "body": "fixes #100",
      "createdAt": "2020-11-18T05:33:32Z",
      "updatedAt": "2021-04-19T08:34:52Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e6a044711ae2b33647241c4bd535a1bc46b07a30",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "100-section-references",
      "headRefOid": "cb06cb3a8bb87e693c59f4ec19c8138711d3b96c",
      "closedAt": "2020-11-18T06:45:50Z",
      "mergedAt": "2020-11-18T06:45:50Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "33f242ff2705cd363564c3f257ff9c80c9517401"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTIwNDQ4",
          "commit": {
            "abbreviatedOid": "4ab94b7"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-11-18T05:47:01Z",
          "updatedAt": "2020-11-18T05:47:01Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTIwODYz",
          "commit": {
            "abbreviatedOid": "4ab94b7"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Correcting overcorrections regarding capitalization, but this seems benign.",
          "createdAt": "2020-11-18T05:48:13Z",
          "updatedAt": "2020-11-18T05:49:24Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nidentifiers to the application (see, for example, {{QUIC-HTTP}}, Section 6)\r\n```",
              "createdAt": "2020-11-18T05:48:14Z",
              "updatedAt": "2020-11-18T06:28:35Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\ndefine application-specific error codes (see, for example, {{QUIC-HTTP}},\r\n```",
              "createdAt": "2020-11-18T05:48:22Z",
              "updatedAt": "2020-11-18T06:28:35Z"
            },
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nSection 8.1). In the case of a grateful shut-down initiated by the application\r\n```",
              "createdAt": "2020-11-18T05:48:28Z",
              "updatedAt": "2020-11-18T06:28:35Z"
            },
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n0-RTT MUST be idempotent (as specified in Section 5.6 in {{!QUIC-TLS}}).\r\n```",
              "createdAt": "2020-11-18T05:49:00Z",
              "updatedAt": "2020-11-18T06:28:35Z"
            }
          ]
        }
      ]
    },
    {
      "number": 132,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIyOTM5MDIw",
      "title": "Remove normative language from the drafts",
      "url": "https://github.com/quicwg/ops-drafts/pull/132",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #85 ",
      "createdAt": "2020-11-18T06:07:38Z",
      "updatedAt": "2021-04-19T08:34:55Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "81aefccab30ae1d1b0d0771cbe18d95fceb833ac",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "85-no-normative",
      "headRefOid": "b64fdbea0b0b8a949800846be24aa3401f606bba",
      "closedAt": "2020-12-07T13:37:31Z",
      "mergedAt": "2020-12-07T13:37:30Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "99a28ed67e4794b4cb14ba746f71bd1b8d3fcfa9"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "note: don't merge yet, still need to make the pass on applicability but working on the CI issue at the moment",
          "createdAt": "2020-11-18T06:27:52Z",
          "updatedAt": "2020-11-18T06:27:52Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "done. mergeable if ok.",
          "createdAt": "2020-11-18T10:16:07Z",
          "updatedAt": "2020-11-18T10:16:07Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 133,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIyOTU1MTU4",
      "title": "Migrate from CircleCI to Github Actions",
      "url": "https://github.com/quicwg/ops-drafts/pull/133",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses #130 (but an admin will still need to disable CircleCI to keep it from continually complaining that there's no YAML)",
      "createdAt": "2020-11-18T06:42:02Z",
      "updatedAt": "2021-04-19T08:34:54Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e6a044711ae2b33647241c4bd535a1bc46b07a30",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "ci-github-actions",
      "headRefOid": "74fa8a5990b7bbb0bee62053cbe74c0e1dfc8b47",
      "closedAt": "2020-11-18T06:45:24Z",
      "mergedAt": "2020-11-18T06:45:24Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "a75f210cc3971ff74f158c51b66b59af304b929f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 134,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIzMDYyODIx",
      "title": "Remove QOS support and ECMP",
      "url": "https://github.com/quicwg/ops-drafts/pull/134",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "proposed to fix #131 \r\n\r\n(if we decide that's what we want to do)",
      "createdAt": "2020-11-18T09:59:13Z",
      "updatedAt": "2021-04-19T08:35:18Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "a4cdadc040c94f6f2aca3cfd82aed39bad890acf",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "131-qos-ecmp-bye",
      "headRefOid": "b691a2414d9963ff6ee18cd6afee7bd1914d911a",
      "closedAt": "2020-12-07T13:31:13Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Rolled over to #140, @mirjak to rewrite",
          "createdAt": "2020-12-07T13:31:13Z",
          "updatedAt": "2020-12-07T13:31:13Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzYxNjUw",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-11-18T11:42:15Z",
          "updatedAt": "2020-11-18T11:42:28Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "This is likely bad advice anyway.  If we are going to signal intent to the network, it would be done explicitly (DSCP anyone?).  Inference is what gets us into messes.",
              "createdAt": "2020-11-18T11:42:16Z",
              "updatedAt": "2020-11-18T11:42:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzc3ODIy",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:04:22Z",
          "updatedAt": "2020-11-18T12:04:22Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I think we should keep this first part here. Especially the part saying \"If differential network treatment is desired,\r\n multiple QUIC connections to the same server might be used\" because the idea that QUIC packets of the same connection that carry different stream data could have different DCSPs came up more than once that that really is a bad idea for CC.",
              "createdAt": "2020-11-18T12:04:22Z",
              "updatedAt": "2020-11-18T12:04:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzc4NjAx",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:05:28Z",
          "updatedAt": "2020-11-18T12:05:29Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "This part definitely needs rewriting or removing.",
              "createdAt": "2020-11-18T12:05:28Z",
              "updatedAt": "2020-11-18T12:05:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzc5NTAx",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:06:46Z",
          "updatedAt": "2020-11-18T12:06:47Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "This is probably also fine (minus the ConnID part) and probably clearing that not QUIC connections might be equally tolerant to re-ordering. It's just more likely than for TCP that the implementation does that.",
              "createdAt": "2020-11-18T12:06:47Z",
              "updatedAt": "2020-11-18T12:06:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzg2Mjk5",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:16:42Z",
          "updatedAt": "2020-11-18T12:16:43Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "That is probably a deep enough conversation that I don't think it is worth including here.  Multiple connections might not give you what you want either.  And different congestion controllers might tolerate variations in QoS better.  The problem with all of this text is that it is creating the impression that underlying semantics can be inferred.  As a general theme, that is not good and so saying anything more than what is strictly factual is likely to encourage ossification of various sorts.",
              "createdAt": "2020-11-18T12:16:42Z",
              "updatedAt": "2020-11-18T12:16:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzg3NTA3",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:18:23Z",
          "updatedAt": "2020-11-18T12:18:23Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "This is equally bad.  It says that you can ECMP as you please and QUIC will struggle on.  Now, this is probably out of endpoint control anyway, but that doesn't need to be endorsed.  The assumption should be that flows get uniform treatment unless they explicitly request otherwise.",
              "createdAt": "2020-11-18T12:18:23Z",
              "updatedAt": "2020-11-18T12:18:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzkwMzEx",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:21:47Z",
          "updatedAt": "2020-11-18T12:21:48Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "So what I would like to say somewhere if that if an endpoint want different network treatment based on DSCP (ignoring that DSCP is not usable e2e) it should use different connections and set the same DSCP on all packets of the same connection, instead of getting the idea of setting different DSCP on different packets of the same connection.",
              "createdAt": "2020-11-18T12:21:47Z",
              "updatedAt": "2020-11-18T12:21:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzkyMjIx",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:24:08Z",
          "updatedAt": "2020-11-18T12:24:09Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Also I think the guidance for ECMP is still to schedule based on 5-tuple (and not on a per-packet base). I think that is still true for QUIC and we should state that.\r\n\r\nAs such if an endpoint wants to somehow make use of ECMP (e.g. in a datacenter setup) on need to consider to use different connections.\r\n\r\nI think we can also say that it is generally recommended to use as few QUIC connections as possible to the same server (for CC reasons).",
              "createdAt": "2020-11-18T12:24:08Z",
              "updatedAt": "2020-11-18T12:24:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzkyODQx",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:24:59Z",
          "updatedAt": "2020-11-18T12:24:59Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Yes that's what the text was actually trying to say. As I said I think we need to re-phrase though.",
              "createdAt": "2020-11-18T12:24:59Z",
              "updatedAt": "2020-11-18T12:24:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 135,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIzNzkxNzA4",
      "title": "Edits, first batch",
      "url": "https://github.com/quicwg/ops-drafts/pull/135",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "These are pretty big.  If you would prefer that I create a PR for each individual commit, that can be done.\r\n\r\nIt turns out that there were a lot of things I found needed work.  For instance, this completely redoes the 0-RTT advice.",
      "createdAt": "2020-11-19T09:11:19Z",
      "updatedAt": "2020-12-07T13:24:49Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "a4cdadc040c94f6f2aca3cfd82aed39bad890acf",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "edits",
      "headRefOid": "7a99daf4499980206b6380dedff2111c27c0adfd",
      "closedAt": "2020-12-07T13:24:48Z",
      "mergedAt": "2020-12-07T13:24:48Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "81aefccab30ae1d1b0d0771cbe18d95fceb833ac"
      },
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "It did kinda snowball, for which I apologize.  I was trying to get something under your nose before I got swamped by meetings.  I am also on vacation next week.\r\n\r\nI'm reading through and there is some really good stuff in the doc.  I have started to open issues where I don't think the fixes are so simple.",
          "createdAt": "2020-11-20T07:54:44Z",
          "updatedAt": "2020-11-20T07:54:44Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MTQwMDQw",
          "commit": {
            "abbreviatedOid": "7a99daf"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Aside from the keep-alive tweak and the idempotence change, these are all editorial and LGTM, thanks!\r\n\r\nThe keepalive tweak is also good.\r\n\r\nHaving looked at https://github.com/quicwg/base-drafts/pull/4394, the text here is a good applicability-appropriate view on what's there now. assuming discussion there converges to mostly the same thing, I'd be happy to merge this.\r\n\r\n(in the future, no need to make tiny PRs, but splitting into \"editorial-rollup\" and \"substantive editorial changes\" would be nice to separate discussion, since the former shouldn't need much of it)",
          "createdAt": "2020-11-20T06:15:36Z",
          "updatedAt": "2020-11-20T06:15:36Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MTk4MTMx",
          "commit": {
            "abbreviatedOid": "7a99daf"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Changes look all ready good. Thanks!\r\n\r\nI just have left one minor comment/question to double-check before we merge.",
          "createdAt": "2020-12-04T18:26:43Z",
          "updatedAt": "2020-12-04T18:29:42Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "The new text does not mention PFS anymore. Do we need to retain that?",
              "createdAt": "2020-12-04T18:26:43Z",
              "updatedAt": "2020-12-04T18:29:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Njg1NDE2",
          "commit": {
            "abbreviatedOid": "7a99daf"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-06T09:11:53Z",
          "updatedAt": "2020-12-06T09:11:53Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "Forward secrecy (or post-compromise security to be precise) can be provided for 0-RTT under some conditions, though they are quite unusual in practice.  Generally, we wouldn't assume PFS for 0-RTT, but you can't claim that it is impossible to achieve.",
              "createdAt": "2020-12-06T09:11:53Z",
              "updatedAt": "2020-12-06T09:11:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 150,
      "id": "MDExOlB1bGxSZXF1ZXN0NTM1NTc4NDI5",
      "title": "Editorial Pass on quic-manageability",
      "url": "https://github.com/quicwg/ops-drafts/pull/150",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This has some updates and clarifications based on protocol evolution, which might be uncontroversial. There are also many typo fixes.\r\n\r\nPTAL",
      "createdAt": "2020-12-10T01:46:43Z",
      "updatedAt": "2020-12-21T10:14:10Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "99a28ed67e4794b4cb14ba746f71bd1b8d3fcfa9",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "editorial",
      "headRefOid": "44ad37497161e900c0bc1eda5ba7cfb499072aa0",
      "closedAt": "2020-12-21T10:14:10Z",
      "mergedAt": "2020-12-21T10:14:10Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "742de9c79fb08a027a0370481ee14b0068fbf0c1"
      },
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Alright, everything is resolved except two MT comments about the client Initial ACK.\r\n\r\n- How do we phrase correctly that these cannot be decrypted by using the DCID?\r\n- Do these datagrams need to be 1200B or not? (I contend that there is no real need, but that's not what the spec says).",
          "createdAt": "2020-12-10T18:25:49Z",
          "updatedAt": "2020-12-10T18:25:49Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "No, the greasing is draft-thomson-quic-bit-grease. As you said elsewhere,\nthe v1 standard itself says the fixed bit MUST be fixed.\n\nOn Thu, Dec 17, 2020 at 10:17 AM mirjak <notifications@github.com> wrote:\n\n> *@mirjak* commented on this pull request.\n> ------------------------------\n>\n> In draft-ietf-quic-manageability.md\n> <https://github.com/quicwg/ops-drafts/pull/150#discussion_r545301848>:\n>\n> > @@ -156,7 +151,8 @@ The following information is exposed in QUIC packet headers:\n>\n>  - \"fixed bit\": the second most significant bit of the first octet most QUIC\n>    packets of the current version is currently set to 1, for demultiplexing\n> -  with other UDP-encapsulated protocols.\n> +  with other UDP-encapsulated protocols. Endpoints that do not need this\n> +  demultiplexing function might negotiate the use of arbitrary values.\n>\n> section 3.1? I thought you actually can grease the fixed bit in QUICv1...?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/quicwg/ops-drafts/pull/150#discussion_r545301848>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AF2EYEOFNREU3AVRFTGY6MLSVJDLRANCNFSM4UUKK6VA>\n> .\n>\n",
          "createdAt": "2020-12-17T19:14:25Z",
          "updatedAt": "2020-12-17T19:14:25Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzgzMjUx",
          "commit": {
            "abbreviatedOid": "8522fac"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-10T03:01:33Z",
          "updatedAt": "2020-12-10T03:16:12Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "The two mentions of h3 here are disjoint.  Suggest moving the \"semantics as needed for HTTP(/3)\" later.",
              "createdAt": "2020-12-10T03:01:33Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nQUIC version 1 packets compared to some pre-standard versions.\r\n```\r\n\r\nNo mention there of Facebook's versions, for instance.",
              "createdAt": "2020-12-10T03:03:03Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 108,
              "body": "Not sure if this is completely wise before it is adopted.  Of course, the statement will remain true nonetheless, even if that is never standardized.",
              "createdAt": "2020-12-10T03:03:24Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 125,
              "body": "```suggestion\r\n  For example the QUIC version 1 uses version 0x00000001. Operators\r\n```\r\n\r\nIf you are removing \"QUIC is a moving target\", then this will be the case.\r\n\r\nUnless it isn't, but that will be a minor catastrophe that we can work through if it happens.",
              "createdAt": "2020-12-10T03:04:51Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 153,
              "body": "```suggestion\r\nthe use of Alt-Svc for discovery of HTTP/3 services on other ports.\r\n```",
              "createdAt": "2020-12-10T03:05:48Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 151,
              "body": "Alt-Svc use is defined in QUIC-HTTP:\r\n\r\n```suggestion\r\nrespective registered service. For example, {{QUIC-HTTP}} specifies\r\n```",
              "createdAt": "2020-12-10T03:06:09Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 162,
              "body": "It is possible that the client will not include an Initial packet in its second flight.  Perhaps more importantly, if the client sends a Handshake in the same datagram, it is not required to pad that datagram.",
              "createdAt": "2020-12-10T03:07:56Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 235,
              "body": "```suggestion\r\nVersion Negotiation packets are not intrinsically protected, but QUIC versions\r\n```",
              "createdAt": "2020-12-10T03:09:31Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 238,
              "body": "Not sure if this is the reaction is correct.  \"The connection\" isn't a notion that makes sense when VN is involved because there are multiple connection attempts involved: one that elicited the VN, and one that used the VN.  Neither will result in a connection being established if there was tampering.\r\n\r\nMaybe \"might terminate the connection attempt\".",
              "createdAt": "2020-12-10T03:11:18Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 308,
              "body": "It really does include Retry.  Though those don't include TLS handshake messages.",
              "createdAt": "2020-12-10T03:12:00Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 315,
              "body": "```suggestion\r\nheuristics similar to those used to detect TLS over TCP. A client initiating a\r\n```",
              "createdAt": "2020-12-10T03:12:11Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 318,
              "body": "```suggestion\r\nmay be reordered in the network, 0-RTT Protected data packets could be\r\n```",
              "createdAt": "2020-12-10T03:12:44Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 383,
              "body": "```suggestion\r\nlength integer as specified in Section 16 of {{QUIC-TRANSPORT}}.\r\n```",
              "createdAt": "2020-12-10T03:13:52Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 397,
              "body": "I read this at first and thought \"wat?\", but I think that you just have an extra negation here:\r\n\r\n```suggestion\r\nNote that client Initial packets that contain the Client Hello message\r\n```",
              "createdAt": "2020-12-10T03:14:52Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 398,
              "body": "```suggestion\r\ndo not always use the Destination Connection ID that was used to\r\n```",
              "createdAt": "2020-12-10T03:15:06Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 423,
              "body": "```suggestion\r\ntimers can be lower, in the range of 15 to 30 seconds. In contrast,\r\n```",
              "createdAt": "2020-12-10T03:15:48Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MDk0Mjgw",
          "commit": {
            "abbreviatedOid": "8522fac"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks. These look good. I agree with MT's comments and suggestions.",
          "createdAt": "2020-12-10T11:16:46Z",
          "updatedAt": "2020-12-10T11:25:45Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Yes, I agree that we should not cite the draft here. However, we could say that the network cannot rely on this bit as the endpoint might decide to not support it (if not needed).",
              "createdAt": "2020-12-10T11:16:46Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 14,
              "body": "I would move only the reference to the quic-http draft. Because the first mention if https is the protocol in general, while later it specifically takes about h3.",
              "createdAt": "2020-12-10T11:16:51Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 423,
              "body": "I think \"often\" is correct here but fine...",
              "createdAt": "2020-12-10T11:23:35Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzYwNDE0",
          "commit": {
            "abbreviatedOid": "a6e5ec0"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-10T16:13:10Z",
          "updatedAt": "2020-12-10T16:13:11Z",
          "comments": [
            {
              "originalPosition": 397,
              "body": "What I'm trying to refer to here is the Initial ACK. Observers should expect that a stateless DPI will like fail to decrypt ~50% of client Initial packets. I think this proposed change inverts the meaning?",
              "createdAt": "2020-12-10T16:13:10Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzY1NDE0",
          "commit": {
            "abbreviatedOid": "d62255e"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-10T16:17:56Z",
          "updatedAt": "2020-12-10T16:17:56Z",
          "comments": [
            {
              "originalPosition": 162,
              "body": "Did we make the Initial ACK formally optional, or are clients just omitting it as an optimization?\r\n\r\nSec 14.1 says \"A client MUST expand the payload of all UDP datagrams carrying Initial packets to at least the smallest allowed maximum datagram size of 1200 bytes by adding PADDING frames to the Initial packet or by coalescing the Initial packet\" without any qualification about Handshake.\r\n\r\nMy reading of the text is that it has to be 1200B, whether via PADDING or coalescing up to that point. I understand that there is little point to requiring that padding.\r\n\r\n",
              "createdAt": "2020-12-10T16:17:56Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMDE2NzM5",
          "commit": {
            "abbreviatedOid": "9420351"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-15T22:41:52Z",
          "updatedAt": "2020-12-15T22:41:53Z",
          "comments": [
            {
              "originalPosition": 397,
              "body": "ACK.  I just misread this.  The double-negation caught me out.  I think that you might want to try to work on this.  Maybe \"client Initial packets other than those in the very first flight sent by the client\"\r\n\r\nIt's got nothing to do with the ClientHello, it's whether the client has seen packets from the server yet.",
              "createdAt": "2020-12-15T22:41:53Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMDI2Mjk2",
          "commit": {
            "abbreviatedOid": "9420351"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-15T22:48:14Z",
          "updatedAt": "2020-12-15T22:48:15Z",
          "comments": [
            {
              "originalPosition": 162,
              "body": "Yes, if the client sends an Initial packet, it needs to be padded.  That's pretty clear.  My point is that it might not send it and so not cause that rule to apply.\r\n\r\nLet's say that the client does send an Initial ACK before it discards keys.  That is lost.  It doesn't retransmit it because the keys are gone.  The observer won't see that; they only see the Handshake+ packet that is sent later.\r\n\r\nAnd if the client does discard keys too soon, the protocol doesn't stop working and no rules have been broken.\r\n\r\nI'm just asking that you be a little more careful and maybe say that a handshake will look like this *in most cases*.  There are too many ways this could be wrong and you used \"must\".",
              "createdAt": "2020-12-15T22:48:14Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMDU0ODg5",
          "commit": {
            "abbreviatedOid": "701098d"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-15T23:06:50Z",
          "updatedAt": "2020-12-15T23:06:51Z",
          "comments": [
            {
              "originalPosition": 162,
              "body": "OK, rewrote it, PTAL",
              "createdAt": "2020-12-15T23:06:51Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMDcwMDQx",
          "commit": {
            "abbreviatedOid": "701098d"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-15T23:16:58Z",
          "updatedAt": "2020-12-15T23:17:16Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "```suggestion\r\nagainst amplification attacks and verifies that the network path meets minimum\r\n```",
              "createdAt": "2020-12-15T23:16:58Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODA5Mjg1",
          "commit": {
            "abbreviatedOid": "66c79d1"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Sorry, I have a few more things I just found (not all related to your edits tough). But hopefully easy to fix/decide.",
          "createdAt": "2020-12-17T17:09:05Z",
          "updatedAt": "2020-12-17T17:26:17Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Actually not sure here. The assumption wasn't necessary that the proxy can authenticate as the server (because then I guess it is the server) but probably rather that it would authenticate as an own entity offering a proxy service.",
              "createdAt": "2020-12-17T17:09:05Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 81,
              "body": "```suggestion\r\nimage described herein may change in future versions of the protocol, except\r\n```\r\nremove leading space...",
              "createdAt": "2020-12-17T17:10:27Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 105,
              "body": "Actually this new sentence does not seem right. The transport draft says:\r\n\r\n```\r\n   Fixed Bit:  The next bit (0x40) of byte 0 is set to 1.  Packets\r\n      containing a zero value for this bit are not valid packets in this\r\n      version and MUST be discarded.\r\n```",
              "createdAt": "2020-12-17T17:12:57Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 121,
              "body": "```suggestion\r\n  identifies the version used for that packet. During Version\r\n```\r\n```suggestion\r\n  identifies the version used for that packet. Note that during Version\r\n```",
              "createdAt": "2020-12-17T17:13:49Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 126,
              "body": "Are these convention still true? I guess we don't have that in the transport spec and therefore should probably also remove it here...?",
              "createdAt": "2020-12-17T17:15:53Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 243,
              "body": "```suggestion\r\nTherefore any manipulation of this list will be detected and may cause the\r\n```\r\nas we don't know what future version will do...",
              "createdAt": "2020-12-17T17:19:00Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 289,
              "body": "```suggestion\r\neven be negotiated during the handshake via the use of transport parameters.\r\n```",
              "createdAt": "2020-12-17T17:19:55Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 335,
              "body": "```suggestion\r\nTherefore, the role as a client or server can generally be confirmed by an on-\r\n```\r\n",
              "createdAt": "2020-12-17T17:21:55Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODI4MTk0",
          "commit": {
            "abbreviatedOid": "2729dcd"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T17:30:42Z",
          "updatedAt": "2020-12-17T17:30:42Z",
          "comments": [
            {
              "originalPosition": 126,
              "body": "How about \"Many QUIC versions that start with 0xff\"?  This is a statement of fact, though you're right that in the future other stuff could be in this space.",
              "createdAt": "2020-12-17T17:30:42Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODMxMzAw",
          "commit": {
            "abbreviatedOid": "2729dcd"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T17:33:41Z",
          "updatedAt": "2020-12-17T17:33:41Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "\"Transparent QUIC proxies\"? You're right that if the client consents to a proxy (e.g. MASQUE) this isn't strictly true.",
              "createdAt": "2020-12-17T17:33:41Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODMzNzAy",
          "commit": {
            "abbreviatedOid": "2729dcd"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T17:36:28Z",
          "updatedAt": "2020-12-17T17:36:28Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "This is another warning about the grease, of course. I think it makes sense to include, but we have the other warning about grease in Section 3.1. I'll delete the sentence to move things along, because it's not a big deal.",
              "createdAt": "2020-12-17T17:36:28Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODU2Nzk4",
          "commit": {
            "abbreviatedOid": "a99daf3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T18:04:14Z",
          "updatedAt": "2020-12-17T18:04:14Z",
          "comments": [
            {
              "originalPosition": 126,
              "body": "Yep that's probably good to note!",
              "createdAt": "2020-12-17T18:04:14Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODY2ODMz",
          "commit": {
            "abbreviatedOid": "a99daf3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T18:17:13Z",
          "updatedAt": "2020-12-17T18:17:13Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "section 3.1? I thought you actually can grease the fixed bit in QUICv1...?",
              "createdAt": "2020-12-17T18:17:13Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODY5Mjg2",
          "commit": {
            "abbreviatedOid": "a99daf3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T18:20:26Z",
          "updatedAt": "2020-12-17T18:20:27Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "I think the problem is about the term proxy. For me the term mean only that there is some entity between the client and the server. The whole point of this section was rather to say that a QUIC proxy cannot be transparent in a sense that it can terminate a connection without anybody noticing. And yes, I do have masque in mind.",
              "createdAt": "2020-12-17T18:20:26Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODgwNjA4",
          "commit": {
            "abbreviatedOid": "a99daf3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T18:35:39Z",
          "updatedAt": "2020-12-17T18:35:39Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Ah now I see that you added the term \"transparent QUIC proxy\" in the text. Not sure if I want to coin that term here. Maybe we can just move the part about credentials into a separate sentence, e.g.:\r\n\r\n```\r\nA proxy can either explicit identify itself as providing a proxy service or may share the TLS credentials to\r\nauthenticate as the server and (in some cases) client acting as a front-facing instance for the offering service itself.\r\n```",
              "createdAt": "2020-12-17T18:35:39Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MzAyMTQ3",
          "commit": {
            "abbreviatedOid": "2c0bd79"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-18T08:49:14Z",
          "updatedAt": "2020-12-18T08:49:15Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "Okay, actually I think it would be important here to note that this bit can/should not be used to identify QUIC (rather than talking specifically about greasing). How about saying something like: \"Even though this bit is defined as fixed in the QUICv1 base spec, this bit is not invariant between versions or could even still be changed in an extension, therefore it can not be used an identifier for QUIC.\"",
              "createdAt": "2020-12-18T08:49:14Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        }
      ]
    },
    {
      "number": 153,
      "id": "MDExOlB1bGxSZXF1ZXN0NTM2NDIxMjMx",
      "title": "More applicability edits",
      "url": "https://github.com/quicwg/ops-drafts/pull/153",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Quite a few pieces of text in here that needed corrections.  As before, I'm happy to pull out individual commits so we can discuss.",
      "createdAt": "2020-12-11T02:30:02Z",
      "updatedAt": "2020-12-21T10:14:41Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "99a28ed67e4794b4cb14ba746f71bd1b8d3fcfa9",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "edits2",
      "headRefOid": "fd504205be1c0b6434291485480f69ac0773b867",
      "closedAt": "2020-12-21T10:14:41Z",
      "mergedAt": "2020-12-21T10:14:41Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "e78ca3d0c227fd227b56b188067909727051e5f5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0Nzg5NTQz",
          "commit": {
            "abbreviatedOid": "8496a16"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-17T16:46:52Z",
          "updatedAt": "2020-12-17T17:05:43Z",
          "comments": [
            {
              "originalPosition": 137,
              "body": "```suggestion\r\npaths at once. Probing packets can be used to perform address validation, measure\r\n```",
              "createdAt": "2020-12-17T16:46:53Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 139,
              "body": "Thanks this wording is good now :-)",
              "createdAt": "2020-12-17T16:47:44Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 53,
              "body": "You removed the note about packet length of 1200 bytes. This information was there as this section is kind of describing everything you might want to know about packetization. However, I guess this point is really not important for an application. So I'm fine removing it.",
              "createdAt": "2020-12-17T16:49:39Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 171,
              "body": "Why did you remove this sentence?\r\n\r\n```\r\nIn the case of a grateful shut-down initiated by the application\r\n after application layer negotiation, a NO_ERROR code is expected\r\n```\r\n\r\nNot that the point is super important but wondering is there is an actual reason to remove it...?",
              "createdAt": "2020-12-17T16:53:48Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 223,
              "body": "```suggestion\r\ndatagrams to connections successfully if these values change, and thereby effectively disabling the mitigation support of QUIC.\r\n```",
              "createdAt": "2020-12-17T16:57:21Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 244,
              "body": "```suggestion\r\nconnection. See further {{QUIC-LB}}.\r\n```",
              "createdAt": "2020-12-17T17:00:44Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 255,
              "body": "Actually I'm not sure here. If I remember correctly this text was provided by someone else and it's not entirely clear to me anymore what this stage is supposed to achieve....",
              "createdAt": "2020-12-17T17:05:31Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MTMwOTIx",
          "commit": {
            "abbreviatedOid": "8496a16"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-18T02:26:27Z",
          "updatedAt": "2020-12-18T02:31:52Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Yeah, it was not precise enough for me and I don't think that it has much bearing on usage (it's more for implementation and so the core spec can deal with that).",
              "createdAt": "2020-12-18T02:26:27Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 171,
              "body": "The NO_ERROR thing is an HTTP error code, which isn't generic advice.  But more concretely, when you gracefully shutdown, you might agree to stay quite and run down the idle timeout instead.  Or there might be other ways of signaling clean shutdown prior to sending CONNECTION_CLOSE.  I just thought that this was too specific.",
              "createdAt": "2020-12-18T02:29:19Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 223,
              "body": "How about:\r\n\r\n```suggestion\r\ndatagrams to connections successfully if these values change, making migration\r\neffectively impossible.\r\n```",
              "createdAt": "2020-12-18T02:30:06Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 255,
              "body": "This was my text originally.  But I got it backwards.  You can't complete an upgrade that adds a new version and end with the assumption that the new version is disabled.  I probably meant \"enabled\".",
              "createdAt": "2020-12-18T02:31:37Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MjM4ODgx",
          "commit": {
            "abbreviatedOid": "7ec5936"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-18T07:53:24Z",
          "updatedAt": "2020-12-18T07:53:24Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "Ah, didn't realise that an HTTP errs code. Do we need to say more here?",
              "createdAt": "2020-12-18T07:53:24Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MjM5NDQw",
          "commit": {
            "abbreviatedOid": "7ec5936"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-18T07:54:09Z",
          "updatedAt": "2020-12-18T07:54:09Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "Ah okay. However, what's actually meant by validation in this phase?",
              "createdAt": "2020-12-18T07:54:09Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDAyMzMx",
          "commit": {
            "abbreviatedOid": "a9b19c3"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T09:55:53Z",
          "updatedAt": "2020-12-20T09:55:53Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "I don't think so.  This is pretty well treated in the main spec and you have discussion on idle timeouts that seems ample.",
              "createdAt": "2020-12-20T09:55:53Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDAyMzg1",
          "commit": {
            "abbreviatedOid": "a9b19c3"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T09:56:35Z",
          "updatedAt": "2020-12-20T09:56:36Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "Validation being authentication of the values.  Maybe I can use that instead.",
              "createdAt": "2020-12-20T09:56:35Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDAyNDE1",
          "commit": {
            "abbreviatedOid": "a9b19c3"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T09:56:53Z",
          "updatedAt": "2020-12-20T09:56:54Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "```suggestion\r\nThe third stage completes the process by enabling authentication of the negotiated\r\n```",
              "createdAt": "2020-12-20T09:56:53Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 154,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzMzM2MjE3",
      "title": "encoding limits affect connections too; fix #136",
      "url": "https://github.com/quicwg/ops-drafts/pull/154",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-21T08:47:32Z",
      "updatedAt": "2020-12-21T10:17:10Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "99a28ed67e4794b4cb14ba746f71bd1b8d3fcfa9",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "unlikely-event-136",
      "headRefOid": "37e231741ee082b63c493c70d19e321c2c1ea7c9",
      "closedAt": "2020-12-21T10:17:06Z",
      "mergedAt": "2020-12-21T10:17:05Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "c573c8a296bb600d6fcaad49ec37ab0e4e3c9671"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjI5NDk4",
          "commit": {
            "abbreviatedOid": "76a2f01"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Pretty good.  Thanks.",
          "createdAt": "2020-12-21T09:09:54Z",
          "updatedAt": "2020-12-21T09:10:16Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Splitting this paragraph here might make it flow better.",
              "createdAt": "2020-12-21T09:09:54Z",
              "updatedAt": "2020-12-21T10:15:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjQ1NDA1",
          "commit": {
            "abbreviatedOid": "76a2f01"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T09:35:11Z",
          "updatedAt": "2020-12-21T09:35:11Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjcwOTU1",
          "commit": {
            "abbreviatedOid": "37e2317"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-21T10:16:14Z",
          "updatedAt": "2020-12-21T10:16:15Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "thanks, done",
              "createdAt": "2020-12-21T10:16:14Z",
              "updatedAt": "2020-12-21T10:16:15Z"
            }
          ]
        }
      ]
    },
    {
      "number": 155,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzMzg5MzQy",
      "title": "remove example conn ID length encoding",
      "url": "https://github.com/quicwg/ops-drafts/pull/155",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses #144",
      "createdAt": "2020-12-21T10:23:47Z",
      "updatedAt": "2021-04-19T08:34:55Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c573c8a296bb600d6fcaad49ec37ab0e4e3c9671",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-5",
      "headRefOid": "ecc0e6b0c8b244b501a7fbb072eb9647cf9c0faa",
      "closedAt": "2020-12-21T10:25:30Z",
      "mergedAt": "2020-12-21T10:25:29Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "75ceb243db7763eeaa80bcfcf55d4c5f760b461b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Mjc2NjA4",
          "commit": {
            "abbreviatedOid": "ecc0e6b"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T10:25:25Z",
          "updatedAt": "2020-12-21T10:25:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 156,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzMzg5ODQy",
      "title": "reverse order of \"no critical interface\", fix #138",
      "url": "https://github.com/quicwg/ops-drafts/pull/156",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "after discussion with @mirjak, we probably do want to keep the information that \"all streams are equal\" here. \r\nReverse the order of the sentences here to not bury the lede.",
      "createdAt": "2020-12-21T10:24:45Z",
      "updatedAt": "2021-04-19T08:35:01Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c573c8a296bb600d6fcaad49ec37ab0e4e3c9671",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "138-no-critical",
      "headRefOid": "b2579e5a1f2066565c89a2a79105ab5619927019",
      "closedAt": "2020-12-22T11:29:36Z",
      "mergedAt": "2020-12-22T11:29:36Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "e949a1ef45e167fb8d4328d6271a37b07787d90d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjgwNjM5",
          "commit": {
            "abbreviatedOid": "433adc8"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T10:31:55Z",
          "updatedAt": "2020-12-21T10:31:55Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Njc3MjEx",
          "commit": {
            "abbreviatedOid": "433adc8"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "This reads better for sure, aside from an odd bit of phrasing.",
          "createdAt": "2020-12-21T21:34:14Z",
          "updatedAt": "2020-12-21T21:36:04Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "\"indicate QUIC to\" is awkward phrasing.",
              "createdAt": "2020-12-21T21:34:14Z",
              "updatedAt": "2020-12-22T11:28:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MDEwNzc4",
          "commit": {
            "abbreviatedOid": "433adc8"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-22T11:27:20Z",
          "updatedAt": "2020-12-22T11:27:21Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "that's because there's a to too few there...",
              "createdAt": "2020-12-22T11:27:20Z",
              "updatedAt": "2020-12-22T11:28:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MDExODUy",
          "commit": {
            "abbreviatedOid": "433adc8"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-22T11:29:08Z",
          "updatedAt": "2020-12-22T11:29:09Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "or on review, the application can reset the connection using an interface QUIC provides it. so, reworded.",
              "createdAt": "2020-12-22T11:29:09Z",
              "updatedAt": "2020-12-22T11:29:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 157,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzMzkwNjM3",
      "title": "additions on integrity protection",
      "url": "https://github.com/quicwg/ops-drafts/pull/157",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses #142 ",
      "createdAt": "2020-12-21T10:26:10Z",
      "updatedAt": "2021-04-19T08:34:56Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "75ceb243db7763eeaa80bcfcf55d4c5f760b461b",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-6",
      "headRefOid": "fada3d2da3d66d1a7e661a21e37eaaf0462db7a0",
      "closedAt": "2020-12-21T10:32:31Z",
      "mergedAt": "2020-12-21T10:32:31Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "e50f8444041307c94063a50da168430c2fa1f004"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 158,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzNDAwODA1",
      "title": "clarify DDoS, remove LB reference, fix #147",
      "url": "https://github.com/quicwg/ops-drafts/pull/158",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-21T10:45:45Z",
      "updatedAt": "2021-04-19T08:34:58Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e50f8444041307c94063a50da168430c2fa1f004",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "147-ddos-no-lb",
      "headRefOid": "70676a361a4230a058f29e1851dd93f55501878c",
      "closedAt": "2020-12-22T11:23:20Z",
      "mergedAt": "2020-12-22T11:23:20Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "aa92118c3ebf70aee9b4421b9df3a488d480eab2"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Merged...\r\n\r\n> If you want to support connection migration, there's nothing you can do in this space except the Retry Service stuff in QUIC-LB, is there?\r\n\r\nwith the neurons I have left on 22 December, this seems broadly true. I'm not sure we should be too prescriptive about load balancing in this doc, though -- in part because I suspect the challenge of handling DDoS attacks using QUIC traffic will lead to divergent innovation in the LB space in the near term...",
          "createdAt": "2020-12-22T11:26:46Z",
          "updatedAt": "2020-12-22T11:26:46Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So if the 5-tuple changes because of NAT, the connection ID might actually not change. So in case of DDoS you might want to look at the connection ID to at cover those cases. For DDoS you usually don't need a hard guarantee to track all flows (if you block a flow incorrectly, it has to reconnect), but where you can track the flow when the 5-tuple changes, it might actually help. That is what this paragraph is/was about.",
          "createdAt": "2020-12-22T15:46:33Z",
          "updatedAt": "2020-12-22T15:46:33Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Mjg5NjIx",
          "commit": {
            "abbreviatedOid": "70676a3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T10:47:10Z",
          "updatedAt": "2020-12-21T10:47:10Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NTI3MTYy",
          "commit": {
            "abbreviatedOid": "70676a3"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This PR removes the problems I cited in the issue. Ship it.\r\n\r\nI wonder if we should hit the point in the last sentence a little harder. If you want to support connection migration, there's nothing you can do in this space except the Retry Service stuff in QUIC-LB, is there?",
          "createdAt": "2020-12-21T17:00:51Z",
          "updatedAt": "2020-12-21T17:00:51Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Njg1MTk0",
          "commit": {
            "abbreviatedOid": "70676a3"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T21:48:04Z",
          "updatedAt": "2020-12-21T21:48:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 159,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzNDAxMjU2",
      "title": "paragraph on CID in mitigating timing linkability section",
      "url": "https://github.com/quicwg/ops-drafts/pull/159",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #151",
      "createdAt": "2020-12-21T10:46:36Z",
      "updatedAt": "2021-04-19T08:34:59Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e50f8444041307c94063a50da168430c2fa1f004",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-7",
      "headRefOid": "6b13eb09b2bf4b099eaf9b4bae66c7698860848f",
      "closedAt": "2020-12-21T10:52:11Z",
      "mergedAt": "2020-12-21T10:52:11Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "1281ac73bb2d9a42b60b215d85f8bc2205e36780"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 160,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzNDAyMzUy",
      "title": "fix abrupt ingress close, fix #137",
      "url": "https://github.com/quicwg/ops-drafts/pull/160",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-21T10:48:37Z",
      "updatedAt": "2021-04-19T08:34:59Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e50f8444041307c94063a50da168430c2fa1f004",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "137-no-can-close-ingress",
      "headRefOid": "a5bda1149d67b22a601176abc8edf7261d832f32",
      "closedAt": "2020-12-22T11:30:17Z",
      "mergedAt": "2020-12-22T11:30:17Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "5f2fa61e62672925133609eab053f73c057cd4e5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Njg1Mzcw",
          "commit": {
            "abbreviatedOid": "a5bda11"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T21:48:25Z",
          "updatedAt": "2020-12-21T21:48:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 161,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzNDE1Mzc0",
      "title": "Please don't drop new versions, fix #145.",
      "url": "https://github.com/quicwg/ops-drafts/pull/161",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-21T11:11:43Z",
      "updatedAt": "2021-04-19T08:35:01Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1281ac73bb2d9a42b60b215d85f8bc2205e36780",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "145-no-shiny-drop-plz",
      "headRefOid": "66016f76cb02821d413b4180e427eef491e1b6cc",
      "closedAt": "2020-12-22T11:22:36Z",
      "mergedAt": "2020-12-22T11:22:36Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "6d430b5a28a292360ae125cbd1ac81837e8d567c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NTM3NDE1",
          "commit": {
            "abbreviatedOid": "66016f7"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T17:16:19Z",
          "updatedAt": "2020-12-21T17:16:19Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Njg1MDA0",
          "commit": {
            "abbreviatedOid": "66016f7"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Wishful thinking, but as you say, can't hurt.",
          "createdAt": "2020-12-21T21:47:42Z",
          "updatedAt": "2020-12-21T21:47:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 162,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MTc3Njk1",
      "title": "Capitalization...",
      "url": "https://github.com/quicwg/ops-drafts/pull/162",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #152",
      "createdAt": "2020-12-22T15:01:40Z",
      "updatedAt": "2021-04-19T08:35:02Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5f2fa61e62672925133609eab053f73c057cd4e5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-8",
      "headRefOid": "d632bcbd35a75a9fe77919e0633755c529fc1efd",
      "closedAt": "2021-01-06T07:57:40Z",
      "mergedAt": "2021-01-06T07:57:40Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "7aa32220457bac9f70911b5be3c63f83313398c6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MzY2MzI0",
          "commit": {
            "abbreviatedOid": "d632bcb"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-22T21:04:51Z",
          "updatedAt": "2020-12-22T21:04:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 163,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MTgwODUz",
      "title": "Capitalization once more...",
      "url": "https://github.com/quicwg/ops-drafts/pull/163",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #152",
      "createdAt": "2020-12-22T15:06:42Z",
      "updatedAt": "2021-04-19T08:35:03Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5f2fa61e62672925133609eab053f73c057cd4e5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-9",
      "headRefOid": "6297750fe1682e8ab0a69e418b736a59318b37e6",
      "closedAt": "2021-01-06T07:58:21Z",
      "mergedAt": "2021-01-06T07:58:21Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "27703dc991c57e1f75a60a497d2fadc6be10a5e2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 164,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjI4MjQ0",
      "title": "Proposal for rewrite of QoS section",
      "url": "https://github.com/quicwg/ops-drafts/pull/164",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #140 (hopefully)",
      "createdAt": "2020-12-22T16:25:04Z",
      "updatedAt": "2021-01-22T12:16:21Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c6c661e5a6a11839c86ae79aa1f359e73281aee1",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-10",
      "headRefOid": "0f377984fb31b4338fc1ffb590c7927ebf65701b",
      "closedAt": "2021-01-22T12:16:17Z",
      "mergedAt": "2021-01-22T12:16:17Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "a5ced0a05b17dd1689e597c693c925d0b564036a"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "okay, next try. Moved some text to applicability and rewrote stuff in manageability... please review again...",
          "createdAt": "2021-01-18T17:00:11Z",
          "updatedAt": "2021-01-18T17:00:11Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MzY2ODc4",
          "commit": {
            "abbreviatedOid": "fdf8a19"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-22T21:06:01Z",
          "updatedAt": "2020-12-22T21:16:05Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nnot recommended to use different DiffServ Code Points (DSCPs) {{?RFC2475}} for\r\n```",
              "createdAt": "2020-12-22T21:06:02Z",
              "updatedAt": "2021-01-22T12:14:23Z"
            },
            {
              "originalPosition": 11,
              "body": "Does it?\r\n\r\nWhat you might say instead is:\r\nThe congestion control and loss recovery mechanisms defined in {{QUIC-RECOVERY}}, which are optional by the way, function best if the network provides similar treatment to every packet.  Marking packets with different DSCP is likely to result in variations in order, delivery rate, and drop rate.  Using ECMP to distribute packets from a single flow across multiple network paths could produce similar effects.   These variations could adversely affect performance.\r\n\r\nThe improved feedback in QUIC relative to TCP might mean that QUIC is more able to tolerate variations in packet delivery.  There are also opportunities to deploy loss detection and congestion control algorithms that are more aware of these, but these algorithms do not currently exist.\r\n\r\nGetting differential treatment might be better served by using independent connections, but this has other effects, such as increased overheads and competing congestion control.",
              "createdAt": "2020-12-22T21:16:01Z",
              "updatedAt": "2021-01-22T12:14:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzg5Nzk5",
          "commit": {
            "abbreviatedOid": "fdf8a19"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Better than what's there; suggest one edit (and taking Martin's rephrase suggestion)",
          "createdAt": "2021-01-06T08:02:36Z",
          "updatedAt": "2021-01-06T08:04:48Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "+1 to Martin's suggestion here.",
              "createdAt": "2021-01-06T08:02:36Z",
              "updatedAt": "2021-01-22T12:14:23Z"
            },
            {
              "originalPosition": 40,
              "body": "...expected by implementations of the protocol?\r\n\r\nI'd reword slightly:\r\n\r\n\"However, the common assumption remains that ECMP is 5-tuple-based, and all packets belonging to the same QUIC connection will get the same treatment.\"",
              "createdAt": "2021-01-06T08:04:22Z",
              "updatedAt": "2021-01-22T12:14:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTE4NTEw",
          "commit": {
            "abbreviatedOid": "cd3a62c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T17:51:54Z",
          "updatedAt": "2021-01-06T17:51:55Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Happy to adapt the text but the text as proposed by @martinthomson doesn't seem fully correct to me. Two points: first using _some kind of_ congestion control and recovery is not optional and all of these algorithms have to assume that all packets take the same path/get the same treat because otherwise you will need multiple congestion controller instances and that's not some we have in QUICv1. And second, algorithms do exist. TCP RACK is more re-ordering resilience and the time-based threshold in QUIC is as well. My assumption was/is also that they will more likely be implemented/used/deployed in QUIC than in TCP. \r\n\r\nHowever, we should probably see if we agree what we want to recommend. I think the right thing to recommend is that you should only use one DCSP with one QUIC connection and if you think you need more than one DCSP for your traffic, you should use multiple QUIC. Not sure if @martinthomson agrees to the second part?\r\n\r\nI was also trying to specifically focus this section on DCSP and EMCP (and not QoS in general to much - see new section title) because that the kind of questions I heart.",
              "createdAt": "2021-01-06T17:51:54Z",
              "updatedAt": "2021-01-22T12:14:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTIwNjAx",
          "commit": {
            "abbreviatedOid": "cd3a62c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T17:54:46Z",
          "updatedAt": "2021-01-06T17:54:47Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "I meant to say:  at time of writing of this document (and the quic spec) that was/is the community assumption. \r\n\r\nIs there a reason why you changed flow-based to 5-tuple-based? I believe flow is more correct as there might be ECMP scheme that take the IP flow label into account.",
              "createdAt": "2021-01-06T17:54:47Z",
              "updatedAt": "2021-01-22T12:14:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1NDA2MTMw",
          "commit": {
            "abbreviatedOid": "cd3a62c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-11T14:31:54Z",
          "updatedAt": "2021-01-11T14:31:55Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "was trying to be more precise (with 5-tuple), but as it turns out, that's wrong (DSCP, Flow Label in v6), so... no. leave it \"flow-based\"",
              "createdAt": "2021-01-11T14:31:54Z",
              "updatedAt": "2021-01-22T12:14:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1NDEwODM1",
          "commit": {
            "abbreviatedOid": "cd3a62c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2021-01-11T14:36:50Z",
          "updatedAt": "2021-01-11T14:36:54Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "after discussion with Mirja... the key point here is that all packets handled by the same congestion controller state should use the same DSCP (because they assume the same path treatment), and this is true of all congestion controllers. This is a useful insight, but it belongs in applicability.\r\n\r\nA corollary of that belongs here: boxes that are Trying To Help by splitting DSCP on flows *really shouldn't do that* on QUIC, not least because they can't get any information from DPI on which packets need which labels.",
              "createdAt": "2021-01-11T14:36:50Z",
              "updatedAt": "2021-01-22T12:14:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0MjA1NjY5",
          "commit": {
            "abbreviatedOid": "a22a227"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-22T12:13:41Z",
          "updatedAt": "2021-01-22T12:13:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 166,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjU0Njky",
      "title": "Pointers to sec considerations of quic docs and some more text",
      "url": "https://github.com/quicwg/ops-drafts/pull/166",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #141",
      "createdAt": "2020-12-22T17:14:08Z",
      "updatedAt": "2021-04-19T08:35:15Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5f2fa61e62672925133609eab053f73c057cd4e5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-11",
      "headRefOid": "6cdf0a0d05bdf4457289f8b8558a80125d6305ab",
      "closedAt": "2021-01-22T12:28:24Z",
      "mergedAt": "2021-01-22T12:28:24Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "b21b0ea59eff500e0ddf027c299a7c5f99e4ac13"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is a proposal to mention some more things specifically in the security considerations section. At minimum we should add a sentence pointing the reader at the security consideration of the transport and tis drafts. I additionally, more or less, copied some notes from the transport draft that I found particular relevant for reader of the manageability draft. Comments welcome! ",
          "createdAt": "2020-12-22T17:16:00Z",
          "updatedAt": "2020-12-22T17:16:00Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinthomson any further thought here?",
          "createdAt": "2021-01-18T17:03:46Z",
          "updatedAt": "2021-01-18T17:03:46Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MzY1ODYx",
          "commit": {
            "abbreviatedOid": "57fbfa0"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-22T21:03:51Z",
          "updatedAt": "2020-12-22T21:04:08Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "There are a number of active attacks against a QUIC handshake.  All of them result in connection failures.  This will be no different.  I don't really see the point of isolating this, except to note that the specific methods involved are not yet defined.  Dropping this last sentence would be a start, but I would reconsider the entire paragraph.",
              "createdAt": "2020-12-22T21:03:51Z",
              "updatedAt": "2021-01-22T12:24:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzkxNjMy",
          "commit": {
            "abbreviatedOid": "57fbfa0"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T08:06:27Z",
          "updatedAt": "2021-01-06T08:06:27Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nTherefore a network node should not attempt to impact version selection, as version\r\ndowngrade may result in connection failure.\r\n```",
              "createdAt": "2021-01-06T08:06:27Z",
              "updatedAt": "2021-01-22T12:24:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzkyNDE2",
          "commit": {
            "abbreviatedOid": "57fbfa0"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T08:08:08Z",
          "updatedAt": "2021-01-06T08:08:08Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Perhaps note that on-path modifications of packets will result in one of two outcomes:\r\n\r\n- packet ignored (and frames eventually retransmitted, if necessary)\r\n- connection dropped\r\n\r\n",
              "createdAt": "2021-01-06T08:08:08Z",
              "updatedAt": "2021-01-22T12:24:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTI5Nzkx",
          "commit": {
            "abbreviatedOid": "1a49783"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T18:07:26Z",
          "updatedAt": "2021-01-06T18:07:26Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "I wanted to explicitly about version downgrades because I was thinking that the people who do version filtering might easily get the idea that version downgrade could be a solution to some of their problems and would not think of it as an attack. I agree that this is true for any handshake \"attack\" but I would like to be as explicit as possible about what we recommend and not recommend in this doc for cases where we can already foresee problems.",
              "createdAt": "2021-01-06T18:07:26Z",
              "updatedAt": "2021-01-22T12:24:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0MjA3Nzc4",
          "commit": {
            "abbreviatedOid": "1a49783"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-22T12:17:03Z",
          "updatedAt": "2021-01-22T12:17:03Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nHowever, some information is still observerable, as supporting manageability of\r\n```",
              "createdAt": "2021-01-22T12:17:03Z",
              "updatedAt": "2021-01-22T12:24:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0MjEwMTM1",
          "commit": {
            "abbreviatedOid": "7409118"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-22T12:20:24Z",
          "updatedAt": "2021-01-22T12:20:24Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nMore security considerations for QUIC are discussed in {{!QUIC-TRANSPORT}}\r\nand {{!QUIC-TLS}},\r\n```",
              "createdAt": "2021-01-22T12:20:24Z",
              "updatedAt": "2021-01-22T12:24:27Z"
            }
          ]
        }
      ]
    },
    {
      "number": 167,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjU3MDYx",
      "title": "Add one sentence about relevant security considerations in TLS draft",
      "url": "https://github.com/quicwg/ops-drafts/pull/167",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #141",
      "createdAt": "2020-12-22T17:18:45Z",
      "updatedAt": "2021-04-19T08:35:03Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5f2fa61e62672925133609eab053f73c057cd4e5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-12",
      "headRefOid": "fd5153a16adf895b96715e9f2f33e85870de724b",
      "closedAt": "2021-01-11T14:40:59Z",
      "mergedAt": "2021-01-11T14:40:59Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "5dd067761da33912c1df9d3ec6896f2cf408e02c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzkzMzc1",
          "commit": {
            "abbreviatedOid": "2fd1958"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T08:10:07Z",
          "updatedAt": "2021-01-06T08:10:07Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\napplications using QUIC, as well. Considerations on linkability, replay attacks, \r\nand randomness discussed in {{!QUIC-TLS}} should be taken into account when\r\n```",
              "createdAt": "2021-01-06T08:10:07Z",
              "updatedAt": "2021-01-11T14:39:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzkzNjg1",
          "commit": {
            "abbreviatedOid": "2fd1958"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Minor editorial nit.",
          "createdAt": "2021-01-06T08:10:43Z",
          "updatedAt": "2021-01-06T08:10:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 168,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjYwNDMz",
      "title": "Do we want to add a reference to the HTTP/3 draft as well",
      "url": "https://github.com/quicwg/ops-drafts/pull/168",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "to the security considerations section?",
      "createdAt": "2020-12-22T17:25:35Z",
      "updatedAt": "2021-01-11T14:53:13Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5f2fa61e62672925133609eab053f73c057cd4e5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-13",
      "headRefOid": "47a9aba5f4ff4e334cab3e2b74732afa15152d51",
      "closedAt": "2021-01-11T14:53:08Z",
      "mergedAt": "2021-01-11T14:53:08Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "da33c65f57705ab41306deabbe1f02d25f10aedd"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Cross protocol attacks, traffic analysis, and migration are discussed as well in the transport draft, so this pointer might not be absolutely necessary. However, we might still want to have it and then I think these are the relevant sections to refer to.",
          "createdAt": "2020-12-22T17:32:04Z",
          "updatedAt": "2020-12-22T17:32:04Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Applicability to me seems to be mostly targeted to non-H3 users of QUIC, so I'm not sure the H3-specific considerations need to be mentioned here.",
          "createdAt": "2021-01-06T08:11:43Z",
          "updatedAt": "2021-01-06T08:11:43Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "My thinking was to add that as reference for other applications that might need to consider similar attacks/security issues. At least half of the points in the hhtp/3 sec considerations are really http specific and probably don't have value for other applications but there are a number of points which are more general. Those points are to some extend probably also covered by the transport draft but may be explained in more detail in the h3 draft.",
          "createdAt": "2021-01-06T17:58:13Z",
          "updatedAt": "2021-01-06T17:58:13Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1NDE2OTUy",
          "commit": {
            "abbreviatedOid": "da0968e"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-11T14:43:10Z",
          "updatedAt": "2021-01-11T14:43:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 169,
      "id": "MDExOlB1bGxSZXF1ZXN0NTUxMDMxODUw",
      "title": "remove \"recommended\" for disable spinning",
      "url": "https://github.com/quicwg/ops-drafts/pull/169",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This sentence is rather supposed to explain what's done in QUIC then giving any recommendation, therefore we can simply remove the \"recommended\" phrasing.",
      "createdAt": "2021-01-07T12:33:37Z",
      "updatedAt": "2021-01-11T14:24:43Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "27703dc991c57e1f75a60a497d2fadc6be10a5e2",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-14",
      "headRefOid": "5350e06e1e94ac820297af5da325dca8ecdd4ac5",
      "closedAt": "2021-01-11T14:24:40Z",
      "mergedAt": "2021-01-11T14:24:40Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "ba8061cdb113f5ed86f9fc5e8359aaaab7c9e7ee"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzOTUzODA1",
          "commit": {
            "abbreviatedOid": "5350e06"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-08T01:57:46Z",
          "updatedAt": "2021-01-08T01:57:46Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzOTYyNjI1",
          "commit": {
            "abbreviatedOid": "5350e06"
          },
          "author": "marten-seemann",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-08T02:27:39Z",
          "updatedAt": "2021-01-08T02:27:39Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1Mzk5MjIx",
          "commit": {
            "abbreviatedOid": "5350e06"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-11T14:24:35Z",
          "updatedAt": "2021-01-11T14:24:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 170,
      "id": "MDExOlB1bGxSZXF1ZXN0NTUzNzUzNzEw",
      "title": "Add Retry discussion to DDoS section",
      "url": "https://github.com/quicwg/ops-drafts/pull/170",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #148",
      "createdAt": "2021-01-12T20:50:10Z",
      "updatedAt": "2021-01-22T12:09:46Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "da33c65f57705ab41306deabbe1f02d25f10aedd",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "new-ddos-text",
      "headRefOid": "434784260879147ef79c1c74c0740224e72e204b",
      "closedAt": "2021-01-22T12:09:46Z",
      "mergedAt": "2021-01-22T12:09:46Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "c6c661e5a6a11839c86ae79aa1f359e73281aee1"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The text is good however I don't understand its placement in the draft fully. Shouldn't this paragraph go into the previous section or even in an own section?\r\n\r\nI know the issue, that this PR is addressing, was about DDoS but if we want to have it in the DDoS section we need probably some more words explaining how Retry should be used in this case. Currently it comes a bit out of nothing and interrupts the reading flow of the rest of the text...",
          "createdAt": "2021-01-18T14:18:08Z",
          "updatedAt": "2021-01-18T14:18:08Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY5MzkxMzQ5",
          "commit": {
            "abbreviatedOid": "76f4607"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-15T16:05:17Z",
          "updatedAt": "2021-01-15T16:05:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 171,
      "id": "MDExOlB1bGxSZXF1ZXN0NTU0NTI2MTU0",
      "title": "Quic natsupp",
      "url": "https://github.com/quicwg/ops-drafts/pull/171",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #146 ",
      "createdAt": "2021-01-13T22:38:43Z",
      "updatedAt": "2021-01-22T12:19:03Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "da33c65f57705ab41306deabbe1f02d25f10aedd",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "quic-natsupp",
      "headRefOid": "08fe36c9b87160fdd1bfa9587b9a46f54c1145a6",
      "closedAt": "2021-01-22T12:19:03Z",
      "mergedAt": "2021-01-22T12:19:03Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "099a7aaf1ea407a81c0b2e16492be29d83d359cc"
      },
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I addressed all of the comments except where I had no idea for what to write.\r\n\r\nAs for making the section more \"crisp\", I would much prefer that we land this PR and have another one composed by someone else who has a firm idea of what to do about it.",
          "createdAt": "2021-01-19T19:13:09Z",
          "updatedAt": "2021-01-19T19:13:09Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY5NDAyNTk3",
          "commit": {
            "abbreviatedOid": "8ba5170"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "LGTM modulo editorial nits / requests",
          "createdAt": "2021-01-15T16:18:45Z",
          "updatedAt": "2021-01-15T16:37:25Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "I'd maybe move this up, or summarize it in the first para. This section should be very clear about the \"don't do it\"ness of messing with CIDs.",
              "createdAt": "2021-01-15T16:18:45Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\nendpoint about the best peer address for the connection (see section 9 of\r\n```",
              "createdAt": "2021-01-15T16:30:15Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 93,
              "body": "\\o/ trailing whitespace",
              "createdAt": "2021-01-15T16:30:30Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nusing {{QUIC_LB}} and explicit coordination with the NAT.\r\nHowever, QUIC-LB makes assumptions about endpoint mobility and\r\ncommon configuration in server\r\n```",
              "createdAt": "2021-01-15T16:30:55Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 67,
              "body": "80-char limit",
              "createdAt": "2021-01-15T16:31:11Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 45,
              "body": "editorial, like the comment above: please end this with a snarky conclusion that they are all wrong. :)",
              "createdAt": "2021-01-15T16:32:29Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nmight appear to offer a way to multiplex many connections over a single\r\naddress and port.\r\n```",
              "createdAt": "2021-01-15T16:33:58Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 61,
              "body": "also note that applicability recommends fallback for non H3 protocols.",
              "createdAt": "2021-01-15T16:34:45Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwNTM0MDA4",
          "commit": {
            "abbreviatedOid": "8ba5170"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "I would like to have this section a bit more crisp. There is probably some intro text that we don't need in this extent. But more importantly, things to do or not to do should be more clearly stated (as Brian also indicated). Maybe some text can also be moved in the load balancer section; plus double check with other text in this doc, e.g. in the sections on CID and Flow Associations.",
          "createdAt": "2021-01-18T14:23:21Z",
          "updatedAt": "2021-01-18T16:03:41Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Note that we already mention NAT in section 3.4. on Flow Association, so maybe we don't really need this intro paragraph...",
              "createdAt": "2021-01-18T14:23:22Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 17,
              "body": "We also have a section on \"Connection ID and Rebinding\" (2.6.). Maybe add a reference and double check constancy...?",
              "createdAt": "2021-01-18T14:24:51Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 15,
              "body": "Is that actually important? If so I would move this to later in the section and start right a way with the \"using CID for NAT breaks things\" statement below.",
              "createdAt": "2021-01-18T14:26:39Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 28,
              "body": "+1 and as per my other comments above I think we can make this whole intro part shorter and more crisp",
              "createdAt": "2021-01-18T14:27:45Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nwith a wide range of applications. This section extends the discussion to QUIC.\r\n```",
              "createdAt": "2021-01-18T14:28:13Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 41,
              "body": "I guess this is a bit redundant and can be merged with the intro text above?",
              "createdAt": "2021-01-18T14:28:55Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 43,
              "body": "\r\n```suggestion\r\n```",
              "createdAt": "2021-01-18T14:30:02Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nThe following subsections discuss potential reasons why CID-aware NATs could seemingly appear attractive but is not.\r\n```",
              "createdAt": "2021-01-18T14:31:35Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\n### Resource Conservation\r\n```",
              "createdAt": "2021-01-18T14:31:48Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 76,
              "body": "```suggestion\r\n### \"Helping\" with routing infrastructure issues\r\n```",
              "createdAt": "2021-01-18T14:32:03Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2021-01-18T14:32:28Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 41,
              "body": "Respectively my edit suggestions remove this section heading and move other subsections below one level up...",
              "createdAt": "2021-01-18T14:33:19Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 60,
              "body": "This should more clearly say that middle-connection failure is a huge problem as it takes time to recover. ",
              "createdAt": "2021-01-18T15:27:01Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 64,
              "body": "This still sounds like ossifying on CID is a good way to force endpoint to not change it...",
              "createdAt": "2021-01-18T15:28:13Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nusing the techniques described in {{QUIC_LB}} and explicit coordination with the NAT. However, these techniques makes assumptions about endpoint mobility and common configuration in server\r\n```",
              "createdAt": "2021-01-18T15:28:54Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 67,
              "body": "Which assumptions? I would rather straight away say: techniques in {{QUIC_LB}} cannot be used in NAT deployments because they would make restrictions on mobility (how?) and assume a close coordination with the destination server which is not realisable when the NAT is hosted in the client access network.",
              "createdAt": "2021-01-18T15:33:00Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 71,
              "body": "This sentence is also a bit to vague for me...",
              "createdAt": "2021-01-18T15:33:18Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 73,
              "body": "```suggestion\r\nNote that using connection IDs in this manner anyway violates the best\r\n```",
              "createdAt": "2021-01-18T15:33:51Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 73,
              "body": "Wha exactly is \"this manner\"? -> using connection IDs to identify flows ?",
              "createdAt": "2021-01-18T15:34:44Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 78,
              "body": "```suggestion\r\nOne challenge in QUIC deployment that want to benefit from QUIC's migration capability is server infrastructures with routers and switches that\r\n```",
              "createdAt": "2021-01-18T15:37:36Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 81,
              "body": "```suggestion\r\ndeliver packets to the wrong server. As all QUIC payload is encrypted, routers\r\n```",
              "createdAt": "2021-01-18T15:38:47Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 82,
              "body": "```suggestion\r\nand switches will not have access to negotiated but not-yet-in-use CIDs. This is a particular\r\n```",
              "createdAt": "2021-01-18T15:39:12Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 83,
              "body": "```suggestion\r\nproblem for low-state load balancers. {{QUIC_LB}} addresses this problem proposing a QUIC extension to\r\n```",
              "createdAt": "2021-01-18T15:40:12Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 86,
              "body": "```suggestion\r\nIt seems that a NAT anywhere in the front of such an infrastructure setup could save the effort of converting\r\n```",
              "createdAt": "2021-01-18T15:41:43Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 97,
              "body": "I would write this section a bit the other way around to make it stronger. Starting with something like:\r\n\r\nThe use of NATs, that hide address changes of the client, conceals an important input signal for QUIC and the security mechanism implemented in QUIC. When the 4-tuples changes most current server routing infrastructure might not be able to route traffic to the right server and would need to be updated to be connection-ID-aware (see {QUIC_LB}}) in order too support QUIC's migration capability, however, the connection ID in QUIC has been explicitly designed to support this setup and to convey address changes. Using connection-ID-based NAT in front of the server infrastructure instead of properly updating, which appears as a quick work-around, breaks that design.\r\n\r\nAnd now further explain how all good things terrible break...\r\n",
              "createdAt": "2021-01-18T15:55:16Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 115,
              "body": "This is important enough, and does apply to all middleboxes not just NAT, that I would make an own section out of it. I actually thought that we say this already somewhere but couldn't find it just yet. So in anyway we don't say this prominent enough!",
              "createdAt": "2021-01-18T15:58:25Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            },
            {
              "originalPosition": 83,
              "body": "Also we have an own section on LB in this draft that we should probably refer to (instead). Maybe we can also just more some of the background infos in this section over there and then have both section right after each other...?!",
              "createdAt": "2021-01-18T16:00:16Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxNTUzNjc2",
          "commit": {
            "abbreviatedOid": "4a79194"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-19T18:57:05Z",
          "updatedAt": "2021-01-19T18:57:06Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Made obsolete by Mirja's suggestion",
              "createdAt": "2021-01-19T18:57:06Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxNTU1MDkz",
          "commit": {
            "abbreviatedOid": "4a79194"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-19T18:58:55Z",
          "updatedAt": "2021-01-19T18:58:56Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "This text is gone",
              "createdAt": "2021-01-19T18:58:55Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxNTU4Mjc1",
          "commit": {
            "abbreviatedOid": "4a79194"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-19T19:02:58Z",
          "updatedAt": "2021-01-19T19:02:59Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "Do you have a recommendation?",
              "createdAt": "2021-01-19T19:02:58Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxNTU4NDg4",
          "commit": {
            "abbreviatedOid": "4a79194"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-19T19:03:17Z",
          "updatedAt": "2021-01-19T19:03:17Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "Do you have a suggestion?",
              "createdAt": "2021-01-19T19:03:17Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxNTU5MjMy",
          "commit": {
            "abbreviatedOid": "4a79194"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-19T19:04:14Z",
          "updatedAt": "2021-01-19T19:04:15Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "Port ",
              "createdAt": "2021-01-19T19:04:15Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxNTYyOTkw",
          "commit": {
            "abbreviatedOid": "4a79194"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-19T19:09:22Z",
          "updatedAt": "2021-01-19T19:09:22Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "I added another paragraph up front.",
              "createdAt": "2021-01-19T19:09:22Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxNTYzNjkw",
          "commit": {
            "abbreviatedOid": "aab0de8"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-19T19:10:19Z",
          "updatedAt": "2021-01-19T19:10:19Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "overcome by events",
              "createdAt": "2021-01-19T19:10:19Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMTQ5Mzc3",
          "commit": {
            "abbreviatedOid": "aab0de8"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-20T11:58:44Z",
          "updatedAt": "2021-01-20T11:58:45Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "```suggestion\r\nthat use QUIC, this is preferable to a connection suddenly black holing and\r\n```",
              "createdAt": "2021-01-20T11:58:44Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMTQ5NDQy",
          "commit": {
            "abbreviatedOid": "aab0de8"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-20T11:58:48Z",
          "updatedAt": "2021-01-20T11:58:49Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "I believe this belonged to the \"assumptions about endpoint mobility and common configuration in server\r\n infrastructure\" part. Not fully clear what assumptions you are talking about,",
              "createdAt": "2021-01-20T11:58:49Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMTUzMTUz",
          "commit": {
            "abbreviatedOid": "2740235"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-20T12:03:56Z",
          "updatedAt": "2021-01-20T12:03:56Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "Maybe s/\"make it risky to change Connection IDs\"/\"hinders the use of QUIC's migration function which relies on the ability to change the connection ID any time during the life time of a QUIC connection\"...",
              "createdAt": "2021-01-20T12:03:56Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMTUzODA5",
          "commit": {
            "abbreviatedOid": "2740235"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Happy to merge for now and make further changes if needed later.",
          "createdAt": "2021-01-20T12:04:48Z",
          "updatedAt": "2021-01-20T12:04:48Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyNzE3ODcz",
          "commit": {
            "abbreviatedOid": "7230851"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-20T22:53:31Z",
          "updatedAt": "2021-01-20T22:53:32Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nSome applications might prefer to risk mid-connection failure rather than\r\nnot being able to use QUIC. HTTP/3 prefers reliability, recommending that\r\nTCP be used as a fallback and {{?I-D.ietf-quic-applicability}} recommends\r\nTCP fallback for other protocols on the basis that this is preferable to\r\nsudden connection errors and time outs.\r\n```\r\n\r\nI had trouble with the phrasing here and I didn't like the comma-splice much.",
              "createdAt": "2021-01-20T22:53:32Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczNTk2NzY3",
          "commit": {
            "abbreviatedOid": "17cb158"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-21T18:01:47Z",
          "updatedAt": "2021-01-21T18:01:48Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Didn't this completely change the meaning of the first sentence? I don't think it's true that any application would prefer mid-connection failure. The original sentence said \"seem superior\", meaning that it is not.",
              "createdAt": "2021-01-21T18:01:47Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczOTM1MTYx",
          "commit": {
            "abbreviatedOid": "17cb158"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-22T03:58:22Z",
          "updatedAt": "2021-01-22T03:58:23Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "\"seems\" is not a good way to phrase a negative; I read it in the positive.  I was trying for a more or less direct translation of the intent.  If you ask me, I think that you could be more assertive about this and say that \r\n\r\n> QUIC is deliberately designed to fail rather than persist when the network cannot support its operation.  For HTTP/3, this extends to recommending a fallback to TCP-based versions of HTTP rather than persisting with a QUIC connection that might be unstable.",
              "createdAt": "2021-01-22T03:58:23Z",
              "updatedAt": "2021-01-22T12:16:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0MjA4OTk1",
          "commit": {
            "abbreviatedOid": "08fe36c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm now thanks!",
          "createdAt": "2021-01-22T12:18:55Z",
          "updatedAt": "2021-01-22T12:18:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 172,
      "id": "MDExOlB1bGxSZXF1ZXN0NTU5OTMyMjI3",
      "title": "Update contributors and acknowledgments",
      "url": "https://github.com/quicwg/ops-drafts/pull/172",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-01-22T12:28:00Z",
      "updatedAt": "2021-01-22T12:30:52Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "099a7aaf1ea407a81c0b2e16492be29d83d359cc",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "britram-manageability-acks",
      "headRefOid": "b9fad8abf86d5f611ef0f9101423427dfe0fc00c",
      "closedAt": "2021-01-22T12:30:48Z",
      "mergedAt": "2021-01-22T12:30:48Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "cd9e1c7830501e8f43b66515f0d0b8055e374987"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 173,
      "id": "MDExOlB1bGxSZXF1ZXN0NTU5OTMyNTg2",
      "title": "Introduce transport parameters in section 3",
      "url": "https://github.com/quicwg/ops-drafts/pull/173",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #165",
      "createdAt": "2021-01-22T12:28:44Z",
      "updatedAt": "2021-01-22T12:37:37Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b21b0ea59eff500e0ddf027c299a7c5f99e4ac13",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-10",
      "headRefOid": "73a69fde28154eab6b15fe61decbb1942e01a4d9",
      "closedAt": "2021-01-22T12:37:32Z",
      "mergedAt": "2021-01-22T12:37:32Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "3ded00f9cbd7a37a93074e9802b1bac5da52922d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 207,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5NDg5OTM1",
      "title": "remove NOT RECOMMENDED in ACK section",
      "url": "https://github.com/quicwg/ops-drafts/pull/207",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #182",
      "createdAt": "2021-02-08T13:52:53Z",
      "updatedAt": "2021-04-19T08:35:14Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3ded00f9cbd7a37a93074e9802b1bac5da52922d",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-10",
      "headRefOid": "21398b7d7520655b7f681b33d11a117f6a4d42e4",
      "closedAt": "2021-02-15T16:25:16Z",
      "mergedAt": "2021-02-15T16:25:16Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1NTI0NDAx",
          "commit": {
            "abbreviatedOid": "148d701"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-08T13:58:48Z",
          "updatedAt": "2021-02-08T13:58:49Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "/operator/operation/",
              "createdAt": "2021-02-08T13:58:48Z",
              "updatedAt": "2021-02-08T17:07:49Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1NzAwMjAw",
          "commit": {
            "abbreviatedOid": "148d701"
          },
          "author": "seanturner",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-08T16:44:49Z",
          "updatedAt": "2021-02-08T16:44:49Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1NzIzMjgz",
          "commit": {
            "abbreviatedOid": "148d701"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-08T17:07:43Z",
          "updatedAt": "2021-02-08T17:07:43Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\ninternals of QUIC's operation as those mechanisms can change, e.g., due to the\r\n```\r\n",
              "createdAt": "2021-02-08T17:07:43Z",
              "updatedAt": "2021-02-08T17:07:49Z"
            }
          ]
        }
      ]
    },
    {
      "number": 208,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5NTAwMDc2",
      "title": "Cite RFC4748 correctly",
      "url": "https://github.com/quicwg/ops-drafts/pull/208",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-08T14:08:14Z",
      "updatedAt": "2021-02-12T15:53:17Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3ded00f9cbd7a37a93074e9802b1bac5da52922d",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-13",
      "headRefOid": "981b8c937b8f333691d5ca2330f6a45f982b884e",
      "closedAt": "2021-02-12T12:14:04Z",
      "mergedAt": "2021-02-12T12:14:04Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "51ab147560ae1811fe39d8a6b7f2665c8d8fe1ee"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1OTQ5MzEy",
          "commit": {
            "abbreviatedOid": "981b8c9"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-08T21:42:01Z",
          "updatedAt": "2021-02-08T21:42:01Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n{{?RFC4787}} requires a timout that is at least than 2 minutes for most UDP\r\n```",
              "createdAt": "2021-02-08T21:42:01Z",
              "updatedAt": "2021-02-08T21:42:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2MzkzNTMw",
          "commit": {
            "abbreviatedOid": "981b8c9"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-09T10:28:25Z",
          "updatedAt": "2021-02-09T10:28:25Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Happy to use your wording but I actually used the wording form RFC4787. Actually the wording is\r\n\r\n\" A NAT UDP mapping timer MUST NOT expire in less than two minutes, unless REQ-5a applies.\"",
              "createdAt": "2021-02-09T10:28:25Z",
              "updatedAt": "2021-02-09T10:28:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NDc1MTc0",
          "commit": {
            "abbreviatedOid": "981b8c9"
          },
          "author": "gorryfair",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T13:43:55Z",
          "updatedAt": "2021-02-12T13:43:56Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "And I WOUD think it helpful to state here why 2 minutes is better than shorter values, so that the read knows we are serious.",
              "createdAt": "2021-02-12T13:43:56Z",
              "updatedAt": "2021-02-12T13:43:56Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NTkyNzkw",
          "commit": {
            "abbreviatedOid": "981b8c9"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T15:53:16Z",
          "updatedAt": "2021-02-12T15:53:17Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Yep, @gorryfair  that will go into a separate PR! Issues are still open to address this!",
              "createdAt": "2021-02-12T15:53:16Z",
              "updatedAt": "2021-02-12T15:53:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 209,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5NTA5MjM5",
      "title": "RECOMMENDED on TCP-without-TLS abort",
      "url": "https://github.com/quicwg/ops-drafts/pull/209",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #192",
      "createdAt": "2021-02-08T14:21:20Z",
      "updatedAt": "2021-02-12T12:17:40Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3ded00f9cbd7a37a93074e9802b1bac5da52922d",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-14",
      "headRefOid": "d81d6469fc636a254a2690cedf3d90caf43a8fc2",
      "closedAt": "2021-02-12T12:17:26Z",
      "mergedAt": "2021-02-12T12:17:26Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "f23cf64e8ff0aa0cfe00a6e782e66c204947a48a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NDA5Njk3",
          "commit": {
            "abbreviatedOid": "795e4ee"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T12:15:28Z",
          "updatedAt": "2021-02-12T12:15:29Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nsupported, the connection should be aborted instead, in order to enable\r\n```",
              "createdAt": "2021-02-12T12:15:28Z",
              "updatedAt": "2021-02-12T12:15:49Z"
            }
          ]
        }
      ]
    },
    {
      "number": 211,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5NTkxNjM4",
      "title": "remove normative language from port usage sentence",
      "url": "https://github.com/quicwg/ops-drafts/pull/211",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #195",
      "createdAt": "2021-02-08T16:16:04Z",
      "updatedAt": "2021-02-12T12:17:17Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3ded00f9cbd7a37a93074e9802b1bac5da52922d",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-15",
      "headRefOid": "2977bb0956c5ad3cc65a2b863760c61435f53729",
      "closedAt": "2021-02-12T12:17:15Z",
      "mergedAt": "2021-02-12T12:17:15Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "6ae765fb958eca6c4240f0361c5c0fa40bbe2ece"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1NzAyOTE5",
          "commit": {
            "abbreviatedOid": "f6a48f4"
          },
          "author": "seanturner",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-08T16:47:29Z",
          "updatedAt": "2021-02-08T16:47:29Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1OTUyNDA1",
          "commit": {
            "abbreviatedOid": "f6a48f4"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-08T21:46:26Z",
          "updatedAt": "2021-02-08T21:46:26Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nTCP port already registered for the application is appropriate. For example,\r\n```",
              "createdAt": "2021-02-08T21:46:26Z",
              "updatedAt": "2021-02-09T10:28:49Z"
            }
          ]
        }
      ]
    },
    {
      "number": 212,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5NTkxODI0",
      "title": "Add proposed section on guiding Path MTU",
      "url": "https://github.com/quicwg/ops-drafts/pull/212",
      "state": "MERGED",
      "author": "chris-box",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "meeting-agenda",
        "ready-to-merge"
      ],
      "body": "This is my suggestion to resolve #210.",
      "createdAt": "2021-02-08T16:16:19Z",
      "updatedAt": "2021-03-17T17:19:48Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "cee71e08bbdd6188efce99db675cbf2c2b84c059",
      "headRepository": "chris-box/ops-drafts",
      "headRefName": "master",
      "headRefOid": "75103c0b77692c13ba746428c7e4d87f3102a85f",
      "closedAt": "2021-03-17T16:27:02Z",
      "mergedAt": "2021-03-17T16:27:02Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "d132c1317caf63b267421ea9e3c07bf116d6fa78"
      },
      "comments": [
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> \r\n> \r\n> I think that this needs to be clearer: you are proposing that networks a) identify QUIC, and b) identify large QUIC packets. Based on this, you are recommending that all of these large packets be dropped rather than fragmented.\r\n> \r\n> As this is something that networks are always allowed to do - networks are entitled to decide their own MTU - this is OK. However, I'm wondering why you need to condition this on the protocol being QUIC.\r\n\r\nGood question. I think it'd be unwise to take this action (drop & send ICMP) blindly without regard to how the transport protocol will react. UDP of course carries a diverse set of services, and not all of them will react well to this. If all implementations complied with RFCs there should be no issue; a DF bit set means the sender is expecting it might have to deal with drops. Hopefully they have tested that it works gracefully.\r\n\r\nBut from a sense of caution I prefer to take the approach that such actions should be targetted on services where we have more confidence that it will react well. The finalised QUIC is one such transport, and significantly it's one that will carry the majority of internet traffic before long.",
          "createdAt": "2021-02-09T13:17:49Z",
          "updatedAt": "2021-02-09T13:17:49Z"
        },
        {
          "author": "mjoras",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> As this is something that networks are always allowed to do - networks are entitled to decide their own MTU - this is OK. However, I'm wondering why you need to condition this on the protocol being QUIC.\r\n\r\nI find @chris-box's reasoning pretty convincing.\r\n\r\nThe on path equipment is already taking different approaches based on the transport protocol (i.e. MSS clamping with TCP) and allowing some existing protocols to be fragmented. QUIC being treated as the latter category is obviously problematic, so the operator has two choices that would allow DPLPMTUD to function for QUIC:\r\n\r\n1. Stop doing any sort of fragmentation.\r\n2. Make a best effort attempt to not fragment QUIC packets and rather drop them on the floor. \r\n\r\nThe former is likely to disrupt some protocols which are functioning \"fine\" today with fragmentation and reassembly, which may make it untenable for an operator. The latter, while not totally straightforward and smells of ossification, seems like it would be more tenable in practice while addressing the actual issue.",
          "createdAt": "2021-02-09T20:59:15Z",
          "updatedAt": "2021-02-09T20:59:15Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "What is still not clear to me is why is the advise here  \"please drop big QUIC packet (rather than fragment)\" instead of directly saying \"please drop if DF is set\" (which I think is the advise we already have in various RFCs). If operators don't follow the later advise now, why should they follow the former?",
          "createdAt": "2021-02-11T09:19:49Z",
          "updatedAt": "2021-02-11T09:19:49Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Mirja, it is true that \"please drop if DF is set, and send PTB\" is existing advice that is not universally obeyed. And the advice in this PR will not be universally obeyed either, but some operators will take note, and some developers of PGW software will write code to implement it. (This is not a natural function for a PGW, because the MTU on the S1-U side is large. It has to be deliberately configured based on knowledge of the downstream network, just like MSS clamping currently is.)\r\n\r\nYou're right to ask why should the implementations be focussed on QUIC, rather than what it should be from an architectural purity perspective, which is all IP that has a DF property. Here my answer is that any network operator contemplating deliberately preventing some traffic that they current permit will be naturally cautious. They will not want unintended consequences, and not want to be on the receiving end of complaints about an obscure service that worked yesterday but doesn't today. Hence it is a much safer bet to focus the intervention on the single, well-understood, major traffic type that is driving the change.",
          "createdAt": "2021-02-11T10:40:59Z",
          "updatedAt": "2021-02-11T10:40:59Z"
        },
        {
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks everyone for supporting the idea after I answered your concerns, and helping me to get the text into a good shape. This will assist some networks to convey QUIC in an efficient way.",
          "createdAt": "2021-03-17T17:19:48Z",
          "updatedAt": "2021-03-17T17:19:48Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1NzE1Mjk2",
          "commit": {
            "abbreviatedOid": "f793924"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-08T16:59:32Z",
          "updatedAt": "2021-02-08T16:59:33Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "The problem is that probe packets cannot be identified/distinguished from other QUIc traffic. I believe that's also what section 3.1 (Identifying QUIC traffic) says. If that's no clear we can say more there.",
              "createdAt": "2021-02-08T16:59:32Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1NzM3NDYz",
          "commit": {
            "abbreviatedOid": "f793924"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-08T17:20:00Z",
          "updatedAt": "2021-02-08T17:20:01Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "My interpretation of quic-transport is that it says:\r\n- Initial packets would not normally exceed 1200 bytes unless the client is aware (from history) that a larger size is supported.\r\n- Endpoints should only send packets larger than this if they are employing either PMTUD or DPLPMTUD.\r\n- All QUIC packets that are not sent in a PMTU probe should be sized to fit within the (currently known) maximum datagram size.\r\n\r\nHence probes should be identifiable as the only packets that are larger than this. Is this wrong?",
              "createdAt": "2021-02-08T17:20:00Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1OTE2ODE4",
          "commit": {
            "abbreviatedOid": "f793924"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks for bringing this issue up, as we hit this in production and were quite surprised.",
          "createdAt": "2021-02-08T20:58:42Z",
          "updatedAt": "2021-02-08T21:01:06Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I can tell you that our implementation starts with 1330 and 1350 bytes of UDP payload, so I wouldn't assume everyone starts at 1200 bytes of payload.  In fact, I'm not sure any production deployments do today.\r\n\r\nHowever, I 'think' your suggestion will work, but I think there needs to be more caveats and explanations about the nature of how these networks operate, because I didn't realize they existed until a few months ago.  As I commented on the issue, it seems like the behavior you're describing goes against the intent of the DF bit, which is surprising.\r\n\r\n",
              "createdAt": "2021-02-08T20:58:42Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            },
            {
              "originalPosition": 10,
              "body": "It's worth calling out that these networks fragment instead of dropping v4 packets with DF set and IPv6 packets(assuming that's what they do)",
              "createdAt": "2021-02-08T21:00:37Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1OTU2OTQ4",
          "commit": {
            "abbreviatedOid": "f793924"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I think that this needs to be clearer: you are proposing that networks a) identify QUIC, and b) identify large QUIC packets.  Based on this, you are recommending that all of these large packets be dropped rather than fragmented.\r\n\r\nAs this is something that networks are always allowed to do - networks are entitled to decide their own MTU - this is OK.  However, I'm wondering why you need to condition this on the protocol being QUIC.",
          "createdAt": "2021-02-08T21:52:40Z",
          "updatedAt": "2021-02-08T21:53:31Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nin {{Section 1.1 of DPLPMTUD}}). PMTUD requires such PTB messages in order to\r\n```\r\n\r\nThis reference format is relatively new, but also really nice.",
              "createdAt": "2021-02-08T21:52:41Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2NTE0MzMz",
          "commit": {
            "abbreviatedOid": "f793924"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-09T12:56:42Z",
          "updatedAt": "2021-02-09T12:56:43Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Ian that's interesting. The relevant sentence for me from quic-transport is \"Datagrams containing Initial packets MAY exceed 1200 bytes if the sender believes that the network path and peer both support the size that it chooses.\" In the general case, from where does that belief arise? In starting at 1330 (which I assume is the v6 size) it would work fine on the EE network but it would fail in traversing a network with the IPv6 minimum MTU. Are you relying on successful PMTU discovery from the INITIAL packet to catch that situation?",
              "createdAt": "2021-02-09T12:56:43Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2NTE0OTU1",
          "commit": {
            "abbreviatedOid": "f793924"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-09T12:57:25Z",
          "updatedAt": "2021-02-09T12:57:25Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Yes happy to make this clearer in the text.",
              "createdAt": "2021-02-09T12:57:25Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2Nzk5MDI5",
          "commit": {
            "abbreviatedOid": "3a8c8f7"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-09T17:22:52Z",
          "updatedAt": "2021-02-09T17:22:53Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "HTTP/3 has to handle fallback to TCP no matter what, and too large a packet and UDP being dropped look identical to a client attempting a handshake.\r\n\r\nIn this case, the belief that networks support 1330/1350 byte size is based on historical data we gathered showing what MTUs were supported by most networks, so it's not path specific.",
              "createdAt": "2021-02-09T17:22:52Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3OTU1MDMx",
          "commit": {
            "abbreviatedOid": "6bbacf9"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I think this is enough to make the problem and proposed solution clear.  Thanks for writing it.",
          "createdAt": "2021-02-10T19:07:33Z",
          "updatedAt": "2021-02-10T19:07:33Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMTc2MDgw",
          "commit": {
            "abbreviatedOid": "6bbacf9"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "This is heading in the direction I expected, but would benefit from more polishing.",
          "createdAt": "2021-02-16T12:27:04Z",
          "updatedAt": "2021-02-16T12:44:31Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "This makes it sound like the current method is very wrong - It is **OK* for a lower layer (including a tunnel) to fragment and reassemble to the MTU it supports. However, in some cases it **CAN** fragmentation and reassembly below IP can add to the processing cost and memory requirements - and hence can become a bottleneck. This text isn't clear yet  - but the text might be heading in the correct direction",
              "createdAt": "2021-02-16T12:27:04Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            },
            {
              "originalPosition": 15,
              "body": "/majority use/majority of traffic use/\r\n... although I really do think it better to avoid /can/ and say /is/... \r\n\r\nI suggest:\r\n\r\n/For TCP, MSS-clamping is currently used to change the sender's maximum TCP segment size, but QUIC.../",
              "createdAt": "2021-02-16T12:30:55Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            },
            {
              "originalPosition": 19,
              "body": "I believe the recommendation needs to be that path needs to support the minimum QUIC packet size (aka 1200B).  If the path performance is limited when sending larger packets, the devices on-path need to decide consistently send all packets for a flow, or should drop all packets that exceed a specific size. This avoids creating an anomaly that has unpredictable consequences on QUIC protocol mechanisms that probe a path. ((The same predictability is needing when choosing a forwarding path, etc)). ",
              "createdAt": "2021-02-16T12:41:15Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            },
            {
              "originalPosition": 28,
              "body": "When a device drops an IP packet, it ought to send an ICMP PTB message indicating the supported MTU, and quoting the discarded packet. However, endpoints do not necessarily receive these PTB Messages, and QUIC is robust to their loss.",
              "createdAt": "2021-02-16T12:43:08Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1NjUxODk5",
          "commit": {
            "abbreviatedOid": "6bbacf9"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T18:24:07Z",
          "updatedAt": "2021-02-22T18:24:07Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Would it be better to say this?\r\n\r\n\"Some networks are required to support 1500-byte packets but can only do so by fragmenting at a lower layer before traversing a smaller MTU segment, and then reassembling. This is permissible even when the IP layer is IPv6 or has DF bit set, because it occurs at that lower layer. However this process can add to compute and memory costs, leading to a bottleneck that limits network capacity. In such networks this generates a desire to influence a majority of senders to use smaller packets, so that the limited reassembly capacity is not exceeded.\"",
              "createdAt": "2021-02-22T18:24:07Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1NjU5NDIw",
          "commit": {
            "abbreviatedOid": "6bbacf9"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T18:32:53Z",
          "updatedAt": "2021-02-22T18:32:53Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Happy with the new suggestion, so I'll merge it. I think I should also cite RFC4459 here.",
              "createdAt": "2021-02-22T18:32:53Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1NjY2NzE3",
          "commit": {
            "abbreviatedOid": "6bbacf9"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T18:41:14Z",
          "updatedAt": "2021-02-22T18:41:14Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Agree that \"If the path performance is limited when sending larger packets, the devices on-path need to decide consistently send all packets for a flow, or should drop all packets that exceed a specific size. \"\r\nThis is however a very limited consistency (one flow). I feel we should go further and ask for consistency for all flows of a particular transport protocol (QUIC in this case). This would permit endpoints to make use of historic knowledge such as \"on this network, QUIC only works up to size x\".\r\n\r\nWe should also state the desired goal that it should be consistent for all IP packets, regardless of protocol, but recognise that network may be cautious here, especially when there is a large diversity of protocols.",
              "createdAt": "2021-02-22T18:41:14Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1NjY4NjA2",
          "commit": {
            "abbreviatedOid": "6bbacf9"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T18:43:34Z",
          "updatedAt": "2021-02-22T18:43:35Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Agree. Are you suggesting the wording should be tightened, so that dropping the packet and not bothering with the PTB is called out as less-desirable?",
              "createdAt": "2021-02-22T18:43:34Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1Njg1MDg0",
          "commit": {
            "abbreviatedOid": "4dbf7d8"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T19:02:16Z",
          "updatedAt": "2021-02-22T19:02:17Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "https://github.com/chris-box/ops-drafts/commit/4dbf7d8137ab17dc7de54644c2df18e6c172d380",
              "createdAt": "2021-02-22T19:02:16Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk3MjMwNjAz",
          "commit": {
            "abbreviatedOid": "a3e3d6a"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks, I expect this to be heading in a good way, and suggest more specific text to see if this helps reach final text.",
          "createdAt": "2021-02-24T08:49:30Z",
          "updatedAt": "2021-02-24T10:43:29Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Looks near, I suggest: \"Some networks support 1500-byte packets, but can only do so by fragmenting at a lower layer before traversing a smaller MTU segment, and then reassembling. This is permissible even when the IP layer is IPv6 or IPv4 with the DF bit set, because it occurs below the IP layer. However, this process can add to compute and memory costs, leading to a bottleneck that limits network capacity. In such networks this generates a desire to influence a majority of senders to use smaller packets, so that the limited reassembly capacity is not exceeded.\"",
              "createdAt": "2021-02-24T08:49:30Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            },
            {
              "originalPosition": 19,
              "body": "Aha, I suggest: \"If the path performance is limited when sending larger packets, the devices on-path ought to support a maximum packet size for a specific transport flow and then to consistently drop all packets that exceed the configured MTU size (when the inner IPv4 packet has DF set, or IPv6 is used). Endpoints can cache PMTU information between IP flows, in the IP-layer cache, so short-term consistency between the PMTU for flows can help avoid an endpoint using a PMTU that is inefficient.\"",
              "createdAt": "2021-02-24T09:15:38Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            },
            {
              "originalPosition": 28,
              "body": "Now I see where this is heading, I think we should encourage PTB ... and perhaps say something like:\r\n\r\n\"({{sec-identifying}}) and taking action whenever packets exceed the desired size. For DPLPMTUD it is sufficient for the path to silently drop a packet larger than the supported size. (A QUIC probe packet is used to discover the PMTU. If lost, this does not impact the flow of QUIC data.) \r\n\r\nIPv4 routers generate an ICMP message when a packet is dropped because the link MTU was exceeded. {{RFC8504}} specifies how an IPv6 node generates an ICMPv6 Packet Too Big message (PTB) in this case. \r\n\r\nPMTUD relies upon an endpoint receiving such PTB messages {{RFC8201}},  whereas DPLPMTUD does not reply upon these messages, but still can optionally utilise these to improve performance {{Section 4.6 of DPLPMTUD}}. \r\n\r\nSince a network cannot know in advance which discovery method a QUIC endpoint is using, it ought to send a PTB message in addition to dropping any oversized packet.  A generated PTB message should be compliant with the validation requirements of {{section 14.2.1 of QUIC-TRANSPORT}}, otherwise it will be ignored by DPLPMTUD.\"\r\n\r\n- choose: /ought to send a PTB message/needs to send/ - choose appropriate words!\r\n",
              "createdAt": "2021-02-24T10:41:12Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            },
            {
              "originalPosition": 28,
              "body": "Details:\r\n- Unwelcome detail: In some cases, a PMTUD implementation *might* accept any ICMP  message to update the IP cache, but that isn't a great choice, and text in recent RFCs seeks to discourage this.\r\n- As far as I recall, the RFC series is very murky for IPv4. \r\n- For IPv6 the advice is clear, despite the current state of affairs reported in RFC8899, and that this alone can't really solve the problem. It says: \"For IPv6, \"a Packet Too Big MUST be sent by a router in response to a packet that it cannot forward because the packet is larger than the MTU of the outgoing link\"{{RFC4443}}. These PTB messages \"MUST NOT be filtered\" {{RFC8504}}.\r\n- We likely do not wish to cite that - because also it does not solve the problems of PTB message delivery, but we ought to strongly encourage PTB where it can work.",
              "createdAt": "2021-02-24T10:42:33Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk3ODAxMDAw",
          "commit": {
            "abbreviatedOid": "a3e3d6a"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-24T18:35:17Z",
          "updatedAt": "2021-02-24T18:35:17Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Yes, happy with that.",
              "createdAt": "2021-02-24T18:35:17Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk3ODA0Nzkx",
          "commit": {
            "abbreviatedOid": "9e24bd6"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-24T18:39:47Z",
          "updatedAt": "2021-02-24T18:39:47Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Great - now applied.",
              "createdAt": "2021-02-24T18:39:47Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk3ODEzNTI1",
          "commit": {
            "abbreviatedOid": "9e24bd6"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-24T18:49:23Z",
          "updatedAt": "2021-02-24T18:49:24Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Happy with the new wording. Regarding \"ought to send\" my inclination is to use SHOULD but I'm not sure if normative language is permitted here. Otherwise \"should\".",
              "createdAt": "2021-02-24T18:49:23Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk3ODc3OTE3",
          "commit": {
            "abbreviatedOid": "9e24bd6"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thanks for the updates, this makes sense to me.",
          "createdAt": "2021-02-24T20:07:05Z",
          "updatedAt": "2021-02-24T20:07:05Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4MzU5NTg4",
          "commit": {
            "abbreviatedOid": "9e24bd6"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-25T09:30:16Z",
          "updatedAt": "2021-02-25T09:30:17Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "The document is not presently not using RFC2119 language, so \"should\" would seem OK personally, from my side propose what seems best.",
              "createdAt": "2021-02-25T09:30:16Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5MDczMjY0",
          "commit": {
            "abbreviatedOid": "9e24bd6"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "This is now a very good addition to the document.  Thanks Chris.",
          "createdAt": "2021-02-25T21:55:44Z",
          "updatedAt": "2021-02-25T21:57:31Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n{{Section 14 of QUIC-TRANSPORT}} advises senders to probe larger sizes using\r\n```",
              "createdAt": "2021-02-25T21:55:44Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nThis mechanism will encourage senders to approach the maximum size, which\r\ncould cause fragmentation that they may not be aware of.\r\n```",
              "createdAt": "2021-02-25T21:56:07Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            },
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nvalidation requirements of {{Section 14.2.1 of QUIC-TRANSPORT}} otherwise it\r\n```",
              "createdAt": "2021-02-25T21:57:02Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5OTEwNDUy",
          "commit": {
            "abbreviatedOid": "b9762d7"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-26T20:16:29Z",
          "updatedAt": "2021-02-26T20:16:30Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Applied this in the latest commit.",
              "createdAt": "2021-02-26T20:16:30Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5OTE0NDUx",
          "commit": {
            "abbreviatedOid": "254aad3"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-26T20:22:26Z",
          "updatedAt": "2021-02-26T20:22:26Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Why does this format give me the error \"Error: IDREF attribute target references an unknown ID \"section_14.2.1_of_QUIC-TRANSPORT\", at None\"?",
              "createdAt": "2021-02-26T20:22:26Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMTE5MDY4",
          "commit": {
            "abbreviatedOid": "254aad3"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I think this is good to commit, with two minor issues.",
          "createdAt": "2021-02-27T08:35:15Z",
          "updatedAt": "2021-02-27T08:36:38Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "/more limited implementation of ... packet drops/  does read rather odd, I think this needs to say /drops to avoid fragmentation/. e.g.;\r\n\"if network operators wish to start to drop large packets to avoid fragmentation, ",
              "createdAt": "2021-02-27T08:35:15Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            },
            {
              "originalPosition": 20,
              "body": "could this be /fragmentation with a network segment/ ... just to be clear that this isn't something else?",
              "createdAt": "2021-02-27T08:35:57Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMzk1NzA5",
          "commit": {
            "abbreviatedOid": "254aad3"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-01T05:18:09Z",
          "updatedAt": "2021-03-01T05:18:10Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Try updating kramdown-rfc2629; it's a recent feature.",
              "createdAt": "2021-03-01T05:18:09Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwNjEzMzQ2",
          "commit": {
            "abbreviatedOid": "254aad3"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-01T11:01:02Z",
          "updatedAt": "2021-03-01T11:01:03Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "I was using version 1.3.35; updating to 1.3.37 didn't help. However in debugging I realised that it's a case sensitivity problem. When the feature was introduced in 1.3.21 the notes said \"Limitations for now: Only recognizes Section/Sections\".\r\n\r\nThis means you cannot write {{section 14.2.1 of RFC1149}} but must write {{Section 14.2.1 of RFC1149}}. I know that was exactly the change you suggested but the resulting I-D then has an incongruous capital S in the middle of the sentence: \"validation requirements of Section 14.2.1 of \". The output format is a feature of xml2rfc so I guess I have to accept that it must always be written as Section rather than section.",
              "createdAt": "2021-03-01T11:01:02Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwNjk1MzEy",
          "commit": {
            "abbreviatedOid": "8747cb4"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-01T12:48:29Z",
          "updatedAt": "2021-03-01T12:48:29Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Done",
              "createdAt": "2021-03-01T12:48:29Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwNjk1NDA3",
          "commit": {
            "abbreviatedOid": "8747cb4"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-01T12:48:37Z",
          "updatedAt": "2021-03-01T12:48:37Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Done",
              "createdAt": "2021-03-01T12:48:37Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAxMjgxOTU0",
          "commit": {
            "abbreviatedOid": "8747cb4"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-01T23:59:37Z",
          "updatedAt": "2021-03-01T23:59:38Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "It's not Carsten being obstinately German, it's good writing apparently.  Section is always capitalized as a proper noun.  It might not being especially proper, but that's the convention I was taught.",
              "createdAt": "2021-03-01T23:59:38Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0Mzg4MDY0",
          "commit": {
            "abbreviatedOid": "8747cb4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:53:41Z",
          "updatedAt": "2021-03-04T17:53:41Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nDropping QUIC packets that are used by DPLPMTUD to probe the path MTU\r\nwill not impact QUIC performance but can prevent a QUIC flow from\r\nincreasing its packet size.\r\nEven though QUIC packets cannot be unambiguously identified\r\nas probes {{sec-identifying}}, networks with configurations that would lead to\r\nfragmentation of large packets should rather drop large QUIC packet than\r\nfragmenting them. This will likely provide the right signal for the endpoint\r\nto keep the packet size small and thereby avoid network fragmentation for\r\nthat flow entirely.\r\n```",
              "createdAt": "2021-03-04T17:53:41Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NzQ1NDkx",
          "commit": {
            "abbreviatedOid": "8747cb4"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-09T18:46:25Z",
          "updatedAt": "2021-03-09T18:46:26Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Mirja I can see the value in amending the wording from \"does not impact the flow of QUIC data\" to \"will not impact QUIC performance but can prevent a QUIC flow from increasing its packet size\". Happy with that. But what your suggested change removes are a couple of notions. One is that it's a valid/common operator choice to be cautious in deploying packet drops, by choosing to focus on something well-known (QUIC, in this case) rather than all large IP. Secondly, the notion that QUIC itself can be hard to identify. It's not always as obvious as UDP/443. You refer instead to the ability to identify probe packets from within a known QUIC flow. Are you explicitly wanting to remove both of these, or are these merely side-effects of your suggested change?",
              "createdAt": "2021-03-09T18:46:26Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3ODgwMTY3",
          "commit": {
            "abbreviatedOid": "8747cb4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-09T20:00:20Z",
          "updatedAt": "2021-03-09T20:00:20Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "I wasn't trying to change the content here but to make it more clear what the recommendation is. I was working on the slides for the meeting and was looking for one sentence to copy in the slides that actually makes a recommendation (like my second proposed sentence now) but could find it.\r\n\r\nI didn't realise that you are also talking about identifying QUIC (with respect to other UDP traffic) as you talk about QUIC packets and not QUIC flows in the original text but I left the reference to sec-identifying which should give the reader enough context anyway.\r\n\r\nThe recommendation explicitly says \"QUIC packets\" so I thought it was sufficiently clear that we basically say \"yes we understand that you want to careful about dropping packets but if for QUIC is would be really good to drop anyway\". I guess we could add back another sentence to make that bit more clear. Again my intention really was to make more clear what the recommendation actually is; so was looking for a sentence with \"should\" in it ;-)",
              "createdAt": "2021-03-09T20:00:20Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4NTQ5MTI5",
          "commit": {
            "abbreviatedOid": "8747cb4"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-10T10:22:06Z",
          "updatedAt": "2021-03-10T10:22:06Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "You'll find two sentences with recommendations (\"should\") at the end.\r\n\r\nAs for this particular paragraph, I propose the following merged form.\r\n\r\n> Networks with configurations that would lead to fragmentation of large packets should drop such packets rather than fragmenting them. If network operators wish to start implementing this, they may wish to focus on QUIC. QUIC flows cannot always be identified ({{sec-identifying}}), but we assume that a set of candidate flows have been chosen. For QUIC endpoints using DPLPMTUD it is minimally sufficient for the path to silently drop a packet larger than the supported size. (A QUIC probe packet is used to discover the PMTU. If lost, this does not impact the flow of QUIC data.)\r\n\r\nI'm trying to avoid saying networks should _just_ drop these packets. The recommendation is to drop and send PTB. But sometimes PTB won't be possible.\r\n\r\nSo I also propose using your sentence in the final paragraph:\r\n\r\n> Since a network cannot know in advance which discovery method a QUIC endpoint is using, it should always send a PTB message in addition to dropping the oversized packet. A generated PTB message should be compliant with the validation requirements of {{Section 14.2.1 of QUIC-TRANSPORT}}, otherwise it will be ignored by DPLPMTUD. This will likely provide the right signal for the endpoint to keep the packet size small and thereby avoid network fragmentation for\r\n> that flow entirely.",
              "createdAt": "2021-03-10T10:22:06Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4NjA2NTg0",
          "commit": {
            "abbreviatedOid": "8747cb4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-10T11:28:04Z",
          "updatedAt": "2021-03-10T11:28:04Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Yes, this looks mostly good to me! Thx!\r\n\r\nI'm still not sure about the phrasing \"but we assume that a set of candidate flows have been chosen\". I think that part wasn't clear to me initially and still could be clearer. Do maybe want to say something like:\r\n\r\nQUIC flows cannot always be easily distinguished from other UDP traffic, but we assume at least some portion of QUIC traffic can be identified based on e.g. handshake semantics or the connection ID (see {{sec-identifying}}). \r\n\r\nAnd then two editorial/style comment: \r\n\r\n1) I'm not the biggest fan of the phrasing that uses \"wish\". Would e.g. this work for you as well:\r\n\r\n Network operators, who plan to implement a more selective policy, may start by focusing on QUIC.\r\n\r\n2) \"minimally sufficient\" is actually also not fully clear to me. Why not just use \"recommended\" there?\r\n \r\nAnd I would also just remove the brackets...\r\n\r\nThx!\r\n\r\n",
              "createdAt": "2021-03-10T11:28:04Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4NjI0Nzgz",
          "commit": {
            "abbreviatedOid": "8747cb4"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-10T11:50:48Z",
          "updatedAt": "2021-03-10T11:50:48Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Happy to do nearly all the above. The only part I don't think is needed are \"based on e.g. handshake semantics or the connection ID\". I'll add a commit after the meeting.",
              "createdAt": "2021-03-10T11:50:48Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4NzQxNTE4",
          "commit": {
            "abbreviatedOid": "8747cb4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-10T14:00:10Z",
          "updatedAt": "2021-03-10T14:00:10Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Okay. Thx!",
              "createdAt": "2021-03-10T14:00:10Z",
              "updatedAt": "2021-03-17T16:26:52Z"
            }
          ]
        }
      ]
    },
    {
      "number": 213,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5NTk2MDk1",
      "title": "reword \"interference by firewalls\"",
      "url": "https://github.com/quicwg/ops-drafts/pull/213",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #196",
      "createdAt": "2021-02-08T16:22:10Z",
      "updatedAt": "2021-02-12T12:23:05Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3ded00f9cbd7a37a93074e9802b1bac5da52922d",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-16",
      "headRefOid": "614718b6191052a9ea7c3c84f03ee908a41b3dfc",
      "closedAt": "2021-02-12T12:21:48Z",
      "mergedAt": "2021-02-12T12:21:47Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "9570d541e5c13558dcd3fbe7e428c2cb324380ce"
      },
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "NONE",
          "body": "The proposed text looks OK to me.",
          "createdAt": "2021-02-08T16:33:37Z",
          "updatedAt": "2021-02-08T16:33:37Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1OTUxNzY3",
          "commit": {
            "abbreviatedOid": "1a0f0e3"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-08T21:45:34Z",
          "updatedAt": "2021-02-08T21:45:54Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Not sure that I understand the rationale for the last clause here.  \"often\" implies that you are making a claim, but I don't believe that this one can be substantiated.  Can that be dropped?\r\n\r\n```suggestion\r\nidentification.\r\n```",
              "createdAt": "2021-02-08T21:45:34Z",
              "updatedAt": "2021-02-12T12:18:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2MzkxNTQ4",
          "commit": {
            "abbreviatedOid": "1a0f0e3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-09T10:26:16Z",
          "updatedAt": "2021-02-09T10:26:16Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "@gorryfair proposed to add this. However, I also don't think this adds much (or might be even a bit confusing).",
              "createdAt": "2021-02-09T10:26:16Z",
              "updatedAt": "2021-02-12T12:18:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2Mzk4NDMw",
          "commit": {
            "abbreviatedOid": "1a0f0e3"
          },
          "author": "gorryfair",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-09T10:33:54Z",
          "updatedAt": "2021-02-09T10:33:54Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "The new text looks good. Martin's edit is also fine with me. ((I prefer  we omit the examples of other ways the forwarding treatment can be changed - these are not needed.))",
              "createdAt": "2021-02-09T10:33:54Z",
              "updatedAt": "2021-02-12T12:18:52Z"
            }
          ]
        }
      ]
    },
    {
      "number": 214,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5NzMxMTA0",
      "title": "Clarify routing stability requirement",
      "url": "https://github.com/quicwg/ops-drafts/pull/214",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "next revision"
      ],
      "body": "Fixes #206. \r\n\r\nDoes this make it easier to understand?",
      "createdAt": "2021-02-08T19:50:42Z",
      "updatedAt": "2021-03-24T13:11:46Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e453f61d6ad072e12a6e1cc6f6c4c62e654e7d8b",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "clarify-load-balancing",
      "headRefOid": "b7b9f8d57b8c3cf02f437dba1ec4e87dc1d61b47",
      "closedAt": "2021-03-24T13:11:46Z",
      "mergedAt": "2021-03-24T13:11:46Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "247d49b116e60d7747696815a6753e669099f579"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gorryfair is this better?",
          "createdAt": "2021-02-12T12:21:10Z",
          "updatedAt": "2021-02-12T12:21:10Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE5MTM1MTI5",
          "commit": {
            "abbreviatedOid": "109a911"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "looks good to me.",
          "createdAt": "2021-03-23T22:22:11Z",
          "updatedAt": "2021-03-23T22:22:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 219,
      "id": "MDExOlB1bGxSZXF1ZXN0NTcxODMyOTcy",
      "title": "GitHub format fix",
      "url": "https://github.com/quicwg/ops-drafts/pull/219",
      "state": "MERGED",
      "author": "eltociear",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "`Github` -> `GitHub`",
      "createdAt": "2021-02-11T13:51:21Z",
      "updatedAt": "2021-02-12T12:19:40Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3ded00f9cbd7a37a93074e9802b1bac5da52922d",
      "headRepository": "eltociear/ops-drafts",
      "headRefName": "patch-1",
      "headRefOid": "2ed96bced63ae2ab3bf227e859e16b8119060ea1",
      "closedAt": "2021-02-12T12:19:40Z",
      "mergedAt": "2021-02-12T12:19:40Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "8a48b72e63d7d01229dfb58ff2d3941d8ccdd0d0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5MjcwMDMx",
          "commit": {
            "abbreviatedOid": "2ed96bc"
          },
          "author": "larseggert",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-12T08:57:13Z",
          "updatedAt": "2021-02-12T08:57:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 220,
      "id": "MDExOlB1bGxSZXF1ZXN0NTcyNDg2ODQ5",
      "title": "clarify that ports are advisory for the network",
      "url": "https://github.com/quicwg/ops-drafts/pull/220",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "fix #176 ",
      "createdAt": "2021-02-12T12:30:15Z",
      "updatedAt": "2021-02-22T09:59:01Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "9570d541e5c13558dcd3fbe7e428c2cb324380ce",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "176-ports-dont-matter",
      "headRefOid": "4b9a2b5e3cdf337a6a373a91aa196d78df8ba630",
      "closedAt": "2021-02-22T09:58:58Z",
      "mergedAt": "2021-02-22T09:58:58Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "417512a6ac83c97774843bc640b21d644d0b707f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwMTA4MTcz",
          "commit": {
            "abbreviatedOid": "51ed6e8"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "The title of the pull request was cause for a momentary flutter - in that I don't see the port as carrying anything other than a reference to a convention - but the text is very good.",
          "createdAt": "2021-02-15T00:56:43Z",
          "updatedAt": "2021-02-15T00:56:43Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjIxODk5",
          "commit": {
            "abbreviatedOid": "51ed6e8"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-15T16:28:45Z",
          "updatedAt": "2021-02-15T16:28:45Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nuse the same port number for both services. However, as for all other IETF\r\n```",
              "createdAt": "2021-02-15T16:28:45Z",
              "updatedAt": "2021-02-22T09:58:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjIyNzMz",
          "commit": {
            "abbreviatedOid": "51ed6e8"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-15T16:29:49Z",
          "updatedAt": "2021-02-15T16:29:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 221,
      "id": "MDExOlB1bGxSZXF1ZXN0NTcyNDkwMTA3",
      "title": "Clarify and reference spinbit optional/version",
      "url": "https://github.com/quicwg/ops-drafts/pull/221",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "Fixes #179.",
      "createdAt": "2021-02-12T12:36:30Z",
      "updatedAt": "2021-02-22T10:35:52Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "4ddbc8df0735290bcd1a7b1f27b6438857855164",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "179-spin-if-you-want-to",
      "headRefOid": "3d1a277150fe9f38e969eda6f625ac045af05d44",
      "closedAt": "2021-02-22T10:35:48Z",
      "mergedAt": "2021-02-22T10:35:48Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "86e8a0718b05d940e653e1594ae0bf6e8c875a39"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "fix #179 ",
          "createdAt": "2021-02-12T12:45:50Z",
          "updatedAt": "2021-02-12T12:45:50Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjI0MjIx",
          "commit": {
            "abbreviatedOid": "990efe0"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-15T16:31:48Z",
          "updatedAt": "2021-02-15T16:31:48Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjI2MDY1",
          "commit": {
            "abbreviatedOid": "990efe0"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2021-02-15T16:34:23Z",
          "updatedAt": "2021-02-15T16:36:24Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "```suggestion\r\nThe spin bit provides a version-specific method (see section 17.4 of {{?QUIC-TRANSPORT}}) to measure per-flow RTT from\r\n```",
              "createdAt": "2021-02-15T16:34:24Z",
              "updatedAt": "2021-02-22T10:33:28Z"
            },
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nEndpoint participation in spin bit signaling is optional. That is, while\r\n```",
              "createdAt": "2021-02-15T16:35:05Z",
              "updatedAt": "2021-02-22T10:33:28Z"
            },
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-02-15T16:35:23Z",
              "updatedAt": "2021-02-22T10:33:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 222,
      "id": "MDExOlB1bGxSZXF1ZXN0NTcyNjU0MDM1",
      "title": "UDP Timeout text",
      "url": "https://github.com/quicwg/ops-drafts/pull/222",
      "state": "CLOSED",
      "author": "mdukef5",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "meeting-agenda"
      ],
      "body": "Fixes #183. Fixes #184.\r\n\r\nI don't have a strong opinion about the point of view in this PR, though I believe it accurately reflects the discussion in the issues so far.",
      "createdAt": "2021-02-12T17:10:33Z",
      "updatedAt": "2021-03-31T13:17:56Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "9570d541e5c13558dcd3fbe7e428c2cb324380ce",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "udp-timeout",
      "headRefOid": "5bbc76d96b7867be569ebbc821efdb0ffa8cb23e",
      "closedAt": "2021-03-31T13:17:55Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Alright, I believe I've addressed all the concerns, assuming we want to move forward with a \"don't change the timeout\" recommendation. PTAL.",
          "createdAt": "2021-02-16T18:09:03Z",
          "updatedAt": "2021-02-16T18:09:03Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Q: Is this still an active PR?",
          "createdAt": "2021-03-28T21:13:24Z",
          "updatedAt": "2021-03-28T21:13:24Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "this PR should be replaced with #300 (where just waiting for some feedback from @martinduke before closing...)",
          "createdAt": "2021-03-29T12:30:10Z",
          "updatedAt": "2021-03-29T12:30:10Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "superceded by #300",
          "createdAt": "2021-03-31T13:17:55Z",
          "updatedAt": "2021-03-31T13:17:55Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NzIwNDY0",
          "commit": {
            "abbreviatedOid": "e5010d1"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Let's discuss more on the issue or on VC.",
          "createdAt": "2021-02-12T18:06:38Z",
          "updatedAt": "2021-02-12T18:06:38Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NzIyMDQ3",
          "commit": {
            "abbreviatedOid": "e5010d1"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T18:08:50Z",
          "updatedAt": "2021-02-12T18:13:26Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "15 seconds is very rare unless something has changed recently, so I'd say 30 seconds to a minute.",
              "createdAt": "2021-02-12T18:08:50Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            },
            {
              "originalPosition": 25,
              "body": "I don't think I understand this second point about re-instantiating the connection for security reason.",
              "createdAt": "2021-02-12T18:11:24Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            },
            {
              "originalPosition": 20,
              "body": "Most UDP protocols don't have end-of-connection semantics, so this comparison seems odd in this context, since the UDP timeout is already much less than TCP.",
              "createdAt": "2021-02-12T18:13:02Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5ODU0ODkw",
          "commit": {
            "abbreviatedOid": "e5010d1"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T21:40:27Z",
          "updatedAt": "2021-02-12T21:40:27Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "OK, I just took that from the original text. Happy to change it.",
              "createdAt": "2021-02-12T21:40:27Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5ODU1NDQ1",
          "commit": {
            "abbreviatedOid": "e5010d1"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T21:41:27Z",
          "updatedAt": "2021-02-12T21:41:28Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "This is the thing where a server packet does no good for rebinding because the firewall expects the first packet from the client. Can you suggest alternate text?",
              "createdAt": "2021-02-12T21:41:28Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjMyNDIw",
          "commit": {
            "abbreviatedOid": "e5010d1"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Some suggestions",
          "createdAt": "2021-02-15T16:43:16Z",
          "updatedAt": "2021-02-15T16:51:46Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Understood, but yes, let's change it.",
              "createdAt": "2021-02-15T16:43:16Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nsurvive a port or address change. Second, applications which allow either peer to send after a\r\nperiod of quiescence will experience black-holing until the peer re-initializes the NAT binding.\r\nFor these reasons, devices that\r\n```",
              "createdAt": "2021-02-15T16:47:52Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            },
            {
              "originalPosition": 25,
              "body": "Suggestion below.",
              "createdAt": "2021-02-15T16:48:02Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nobservable end-of-connection semantics, devices might be tempted to further reduce\r\n```",
              "createdAt": "2021-02-15T16:48:53Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nAs QUIC has features to improve robustness to NAT rebinding, devices might be\r\ntempted to further reduce the UDP timeout to avoid unnecessary state. However,\r\nthis has two drawbacks.\r\n```\r\n\r\nI don't like 'tempted', but the current text read to me as though you're saying it's ok, which I do not want to convey.",
              "createdAt": "2021-02-15T16:50:55Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjM2NTky",
          "commit": {
            "abbreviatedOid": "e5010d1"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-15T16:49:11Z",
          "updatedAt": "2021-02-15T16:57:53Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I thought we took this from some paper but can't real find it anymore. I found this one though which actually indicates that most timeout are 2 minutes: https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.739.5004&rep=rep1&type=pdf",
              "createdAt": "2021-02-15T16:49:12Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            },
            {
              "originalPosition": 20,
              "body": "I'd recommend to rather start this paragraph with saying what we recommend and not saying what we no recommend :-)",
              "createdAt": "2021-02-15T16:53:23Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            },
            {
              "originalPosition": 27,
              "body": "I know the originally text wasn't that much better, but I guess actually all devices should retain the RFC4787 limits for all UDP traffic because that's what we recommend in RFC4787. This text should only say that it even more important and also more reasonable to retain these limits for QUIC because QUIC is connection-oriented and therefore a device can at least because sure that there is a valid communication going on if it sees an successful handshake. \r\n\r\nI actually don't think, it a good advise to tell these boxes to be QUIC aware. It's only if you really don't want to adjust your timers for other UDP traffic than you should still consider doing so for QUIC specifically which however means you need additional logic to detect QUIC traffic, which however in itself is not super easy (see other section).",
              "createdAt": "2021-02-15T16:57:39Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNDkyMTI4",
          "commit": {
            "abbreviatedOid": "445076c"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T18:06:33Z",
          "updatedAt": "2021-02-16T18:06:33Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "accepted this manually",
              "createdAt": "2021-02-16T18:06:33Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNzY5NzUy",
          "commit": {
            "abbreviatedOid": "b82c318"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-17T01:34:00Z",
          "updatedAt": "2021-02-17T01:37:12Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\ntraffic.  However, in practice, timers are sometimes lower, in the range of 30 to\r\n60 seconds. In contrast, {{?RFC5382}} recommends a timeout of more than 2 hours\r\n```",
              "createdAt": "2021-02-17T01:34:00Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nFirst, not all endpoints use routing architectures where connections will\r\n```\r\n\r\nNot sure about endpoints vs. servers here, but \"inhabit\" implies life.",
              "createdAt": "2021-02-17T01:34:40Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            },
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nre-initializes the NAT binding. For these reasons, retain the {{?RFC4787}} limits is\r\nuseful, even where devices are able to distinguish QUIC traffic from other UDP payloads.\r\n```",
              "createdAt": "2021-02-17T01:36:05Z",
              "updatedAt": "2021-02-17T02:54:06Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0NDA0MDE0",
          "commit": {
            "abbreviatedOid": "5bbc76d"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T18:10:53Z",
          "updatedAt": "2021-03-04T18:11:01Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Not sure if the advise is crystal clear here now. Initially the advise was more like \"even if you use too short time-outs for UDP, please please don't do that for QUIC and use at least two minutes\". While now the recommendation here rather reads like \"just do the same thing as you do for UDP\".",
              "createdAt": "2021-03-04T18:10:53Z",
              "updatedAt": "2021-03-04T18:11:01Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4NzUzNTk2",
          "commit": {
            "abbreviatedOid": "5bbc76d"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-10T14:11:33Z",
          "updatedAt": "2021-03-10T14:11:33Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "I read this (slightly) differently: \r\n\r\n\"You should treat QUIC traffic according to RFC4787, because you should also already be treating all UDP traffic according to RFC4787. You should not rely on rebinding as an excuse to go faster than RFC4787 says.\"\r\n\r\n4787's pretty old though (before my time at the IETF, if that says anything), and is... probably not broadly deployed. And because the protocol is not designed to be identifiable, there's no way to treat QUIC traffic differently from other UDP traffic in any case. So this probably actually is \"do what you do for UDP\".\r\n\r\nSome rewording could improve this, will propose something.",
              "createdAt": "2021-03-10T14:11:33Z",
              "updatedAt": "2021-03-10T14:11:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4ODEyNDUy",
          "commit": {
            "abbreviatedOid": "5bbc76d"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-10T15:01:42Z",
          "updatedAt": "2021-03-10T15:01:42Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Yes, this is what the PR says now but that wasn't the intention of the original text.\r\n\r\nI think we should rather say something like: for QUIC we really mean it; we really, really need to have at least 2 minutes. If you do that for UDP already fine. If you don't want to do it for all UDP traffic, please try to do it at least for QUIC.",
              "createdAt": "2021-03-10T15:01:42Z",
              "updatedAt": "2021-03-10T15:01:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE5NDg2NTI3",
          "commit": {
            "abbreviatedOid": "5bbc76d"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Nearly there... I think this needs slightly more encouragement to set the timers correctly.",
          "createdAt": "2021-03-24T09:21:01Z",
          "updatedAt": "2021-03-24T09:25:17Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "I think I agree, so can we change this: \"For these reasons, retaining the {{?RFC4787}} limits is useful, even where devices are able to distinguish QUIC traffic from other UDP payloads.\" to something stronger, e.g. perhaps like:\r\n\"For these reasons, the limits in {{?RFC4787}} are important to avoid black-holing of packets (and hence avoid interrupting the flow of data to the client), even where devices are able to distinguish QUIC traffic from other UDP payloads.\"",
              "createdAt": "2021-03-24T09:21:01Z",
              "updatedAt": "2021-03-24T09:25:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE5NTkwMjUy",
          "commit": {
            "abbreviatedOid": "5bbc76d"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T11:09:03Z",
          "updatedAt": "2021-03-24T11:09:06Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nEven though QUIC has explicitly been designed to improve robustness to NAT rebindings,\r\nwhich might look like a tempting feature to further reduce the UDP timeout and thereby\r\nminimize state, this is not recommended.  Instead it is recommended, even when lower\r\ntimers are used for other UDP traffic, to use a timer of at least two minutes for QUIC\r\ntraffic.\r\n\r\nWhile QUIC has no clear network-visible end-of-connection signal and therefore\r\ndoes require timer-based state removal, the QUIC handshake indicates confirmation\r\nof both ends that a valid bidirectional transmission is on-going. If state is removed\r\ntoo early, this could lead to black-holing of incoming packets after a short idle\r\nperiod. To detect this situation, a timer at the client needs to expire before a\r\nre-establishment can happen (if at all), which would lead to unnecessary long\r\ndelays in an otherwise working connection.\r\n\r\nFurrther, not all endpoints use routing architectures where connections will\r\nsurvive a port or address change. So even when the client revives the connection,\r\na NAT rebinding can cause a routing mismatch where a packet is not even delivered to\r\nthe server that might support address migration. \r\n\r\nFor these reasons, the limits in {{?RFC4787}} are important to avoid black-holing\r\nof packets (and hence avoid interrupting the flow of data to the client), especially\r\nwhere devices are able to distinguish QUIC traffic from other UDP payloads.\r\n```\r\n\r\nJust wanted to make a proposal to make the recommendation a bit stronger but then ended up with quite a bit a rewrite... so here is my proposal...",
              "createdAt": "2021-03-24T11:09:03Z",
              "updatedAt": "2021-03-24T11:10:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE5NzM5MDM1",
          "commit": {
            "abbreviatedOid": "5bbc76d"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T13:48:23Z",
          "updatedAt": "2021-03-24T13:48:23Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Looks better to me!\r\n\r\nCheck: /Furrther,/Further,/ or Furthermore,\r\n",
              "createdAt": "2021-03-24T13:48:23Z",
              "updatedAt": "2021-03-24T13:48:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 223,
      "id": "MDExOlB1bGxSZXF1ZXN0NTcyNzA0OTQ4",
      "title": "Editorial nits from @gorryfair, thanks!",
      "url": "https://github.com/quicwg/ops-drafts/pull/223",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": " Fixes #185.",
      "createdAt": "2021-02-12T18:30:38Z",
      "updatedAt": "2021-02-22T10:13:06Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "9570d541e5c13558dcd3fbe7e428c2cb324380ce",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "185-gorry-nits",
      "headRefOid": "7345b027b983a3b087b6a3add50a25f56e40c788",
      "closedAt": "2021-02-22T10:13:03Z",
      "mergedAt": "2021-02-22T10:13:03Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "3297b5565c5483b9c060d83c91d900cac7cd5df5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjQ0NDY4",
          "commit": {
            "abbreviatedOid": "60a250c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-15T17:00:44Z",
          "updatedAt": "2021-02-15T17:00:44Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nis not sustainable. First, it only provides one bit of information and is\r\n```",
              "createdAt": "2021-02-15T17:00:44Z",
              "updatedAt": "2021-02-22T10:11:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjQ0NTYz",
          "commit": {
            "abbreviatedOid": "60a250c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-15T17:00:53Z",
          "updatedAt": "2021-02-15T17:00:53Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjU0Mzg5",
          "commit": {
            "abbreviatedOid": "60a250c"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "LG, some small suggestions.",
          "createdAt": "2021-02-15T17:16:27Z",
          "updatedAt": "2021-02-15T17:21:21Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nis not reliable. First, it only provides one bit of information and is\r\n```",
              "createdAt": "2021-02-15T17:16:28Z",
              "updatedAt": "2021-02-22T10:11:52Z"
            },
            {
              "originalPosition": 114,
              "body": "```suggestion\r\nconnection ID as a flow key field for stateful treatment of flows may therefore\r\n```",
              "createdAt": "2021-02-15T17:17:44Z",
              "updatedAt": "2021-02-22T10:11:52Z"
            },
            {
              "originalPosition": 116,
              "body": "```suggestion\r\nof state in the middle of a connection. Use of connection IDs is specifically\r\n```",
              "createdAt": "2021-02-15T17:19:00Z",
              "updatedAt": "2021-02-22T10:11:52Z"
            },
            {
              "originalPosition": 113,
              "body": "```suggestion\r\nafter the handshake, and this renegotiation is not visible to the path. Using the\r\n```",
              "createdAt": "2021-02-15T17:19:48Z",
              "updatedAt": "2021-02-22T10:11:52Z"
            },
            {
              "originalPosition": 114,
              "body": "This sentence isn't quite as cautionary as I think it should be, but I don't have any good suggestion.",
              "createdAt": "2021-02-15T17:20:47Z",
              "updatedAt": "2021-02-22T10:11:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwODEyODI2",
          "commit": {
            "abbreviatedOid": "60a250c"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "...with Ian's suggestions.",
          "createdAt": "2021-02-16T00:20:56Z",
          "updatedAt": "2021-02-16T00:20:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 224,
      "id": "MDExOlB1bGxSZXF1ZXN0NTcyNzEwMzM0",
      "title": "Editorial comments from @seanturner, thanks!",
      "url": "https://github.com/quicwg/ops-drafts/pull/224",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "fix #189. fix #190. fix #191.",
      "createdAt": "2021-02-12T18:42:04Z",
      "updatedAt": "2021-02-22T10:19:44Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3297b5565c5483b9c060d83c91d900cac7cd5df5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "189-seanturner-nits",
      "headRefOid": "7607577c01afef4fb5d9fe0f9d6752a7bbc99157",
      "closedAt": "2021-02-22T10:19:38Z",
      "mergedAt": "2021-02-22T10:19:37Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "846c2758d334d647c5837f4b756afe6a816bfb71"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I set the ready to merge label but there are merge conflict, so please don't merge before accepting my suggestions...",
          "createdAt": "2021-02-15T17:13:27Z",
          "updatedAt": "2021-02-15T17:13:27Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjQ1OTk5",
          "commit": {
            "abbreviatedOid": "1ce4ec0"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-15T17:02:58Z",
          "updatedAt": "2021-02-15T17:06:32Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nare very likely to fail, and are emphatically NOT RECOMMENDED.\r\n```\r\n\r\nreverting as this was already address by PR #207 ",
              "createdAt": "2021-02-15T17:02:58Z",
              "updatedAt": "2021-02-22T10:18:33Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nthis method of recognizing QUIC traffic is NOT RECOMMENDED. First, it only\r\n```\r\n\r\nProposed another fix in PR #223. So reverting to avoid merge conflict....",
              "createdAt": "2021-02-15T17:06:01Z",
              "updatedAt": "2021-02-22T10:18:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyMjkwMTAy",
          "commit": {
            "abbreviatedOid": "1ce4ec0"
          },
          "author": "seanturner",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "I see what was done. Looks ready to go.",
          "createdAt": "2021-02-17T15:03:00Z",
          "updatedAt": "2021-02-17T15:03:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 225,
      "id": "MDExOlB1bGxSZXF1ZXN0NTcyNzYxOTc5",
      "title": "Editorial rollup for applicability",
      "url": "https://github.com/quicwg/ops-drafts/pull/225",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "Fixes #205 (thanks @gorryfair!); fixes #186 and fixes #187 (thanks @seanturner!). Fixes #216 as well (thanks @martinthomson!)",
      "createdAt": "2021-02-12T20:29:01Z",
      "updatedAt": "2021-02-22T10:07:26Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "9570d541e5c13558dcd3fbe7e428c2cb324380ce",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "205-applicability-nits",
      "headRefOid": "b7d3596fd59f6bcccf464944ea3ca0da435815dd",
      "closedAt": "2021-02-22T10:07:22Z",
      "mergedAt": "2021-02-22T10:07:21Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "6ca9cca19d073e9e2e8f76c51c1ac8b739a24c69"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5ODIwNDEx",
          "commit": {
            "abbreviatedOid": "3321fc9"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T20:39:04Z",
          "updatedAt": "2021-02-12T20:43:28Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "Missing and",
              "createdAt": "2021-02-12T20:39:04Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            },
            {
              "originalPosition": 100,
              "body": "Colon",
              "createdAt": "2021-02-12T20:40:20Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            },
            {
              "originalPosition": 129,
              "body": "Oxford comma",
              "createdAt": "2021-02-12T20:41:23Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            },
            {
              "originalPosition": 140,
              "body": "Two lots of QUIC in the same sentence",
              "createdAt": "2021-02-12T20:42:18Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5ODIzOTAy",
          "commit": {
            "abbreviatedOid": "3321fc9"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T20:44:51Z",
          "updatedAt": "2021-02-12T20:44:52Z",
          "comments": [
            {
              "originalPosition": 129,
              "body": "commits words and leaves. embarrassing. thanks!",
              "createdAt": "2021-02-12T20:44:51Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5ODI0MDIy",
          "commit": {
            "abbreviatedOid": "3321fc9"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T20:45:04Z",
          "updatedAt": "2021-02-12T20:45:05Z",
          "comments": [
            {
              "originalPosition": 129,
              "body": "```suggestion\r\nallowed, currently open, and currently used streams to the application to make\r\n```",
              "createdAt": "2021-02-12T20:45:04Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5ODI0MTg5",
          "commit": {
            "abbreviatedOid": "3321fc9"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T20:45:24Z",
          "updatedAt": "2021-02-12T20:45:24Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "```suggestion\r\ndesigning an application's use of streams:\r\n```",
              "createdAt": "2021-02-12T20:45:24Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5ODI1MjIy",
          "commit": {
            "abbreviatedOid": "c59688d"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T20:47:12Z",
          "updatedAt": "2021-02-12T20:47:13Z",
          "comments": [
            {
              "originalPosition": 140,
              "body": "```suggestion\r\nBy default, many implementations will try to maximally pack QUIC packets\r\n```",
              "createdAt": "2021-02-12T20:47:12Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjUwNjAx",
          "commit": {
            "abbreviatedOid": "bf18afe"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-15T17:10:10Z",
          "updatedAt": "2021-02-15T17:10:10Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMDkzNDU2",
          "commit": {
            "abbreviatedOid": "bf18afe"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "See specific comments",
          "createdAt": "2021-02-16T10:36:14Z",
          "updatedAt": "2021-02-16T10:57:12Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "/a message basis/ ???\r\n- could be: /for a specific message/",
              "createdAt": "2021-02-16T10:36:14Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            },
            {
              "originalPosition": 130,
              "body": "Bizarrely-complex sentence? \r\nPerhaps something like:\r\n\"Therefore, an application can utilise the maximum number of allowed, currently open, and currently used streams when determining how to map data to streams.\"",
              "createdAt": "2021-02-16T10:40:23Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            },
            {
              "originalPosition": 183,
              "body": "/prime/ seems like a topic that has some semantics that needs CC discussion, and I don't know where I see this in RFCs. This is discussed issue #197.",
              "createdAt": "2021-02-16T10:45:14Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            },
            {
              "originalPosition": 183,
              "body": "Although I see PR #122 used different language and avoided having to discuss this:-). ",
              "createdAt": "2021-02-16T10:56:42Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNjI5MjUw",
          "commit": {
            "abbreviatedOid": "bf18afe"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T21:13:21Z",
          "updatedAt": "2021-02-16T21:13:22Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "This change was just changing the line alignment not the words. Let's keep discussion in #197 for this topic.",
              "createdAt": "2021-02-16T21:13:21Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNjI5OTky",
          "commit": {
            "abbreviatedOid": "bf18afe"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T21:14:32Z",
          "updatedAt": "2021-02-16T21:14:32Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "Your proposal is missing the important point that a QUIC implementation should actually expose this information.",
              "createdAt": "2021-02-16T21:14:32Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNjMwNTMw",
          "commit": {
            "abbreviatedOid": "bf18afe"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T21:15:23Z",
          "updatedAt": "2021-02-16T21:15:24Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "```suggestion\r\nfor that message.\r\n```",
              "createdAt": "2021-02-16T21:15:23Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyMDk3MTkx",
          "commit": {
            "abbreviatedOid": "bf18afe"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-17T11:30:33Z",
          "updatedAt": "2021-02-17T11:30:33Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "That was evident in the text. Try: \"Therefore, a QUIC implementation ought to expose the maximum number of allowed, currently open, and currently used streams to help an application determine how to map data to streams.\"",
              "createdAt": "2021-02-17T11:30:33Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1MTg0MjE1",
          "commit": {
            "abbreviatedOid": "bf18afe"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T10:04:51Z",
          "updatedAt": "2021-02-22T10:04:51Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "on a per-message basis?",
              "createdAt": "2021-02-22T10:04:51Z",
              "updatedAt": "2021-02-22T10:05:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1MTg0NjU2",
          "commit": {
            "abbreviatedOid": "b7d3596"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T10:05:22Z",
          "updatedAt": "2021-02-22T10:05:22Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "(Mirja's suggestion accepted)",
              "createdAt": "2021-02-22T10:05:22Z",
              "updatedAt": "2021-02-22T10:05:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1MTg1OTkz",
          "commit": {
            "abbreviatedOid": "b7d3596"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T10:06:55Z",
          "updatedAt": "2021-02-22T10:06:55Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "We're pointing out that this is valuable; upgrading this to a \"should\" might be more than editorial. @mirjak will create a separate PR to discuss.",
              "createdAt": "2021-02-22T10:06:55Z",
              "updatedAt": "2021-02-22T10:06:55Z"
            }
          ]
        }
      ]
    },
    {
      "number": 226,
      "id": "MDExOlB1bGxSZXF1ZXN0NTcyNzY4MjIx",
      "title": "Make it clear that the spin bit generates samples",
      "url": "https://github.com/quicwg/ops-drafts/pull/226",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "...that must be postprocessed to become metrics. Fixes #180.",
      "createdAt": "2021-02-12T20:43:30Z",
      "updatedAt": "2021-02-22T10:10:17Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "9570d541e5c13558dcd3fbe7e428c2cb324380ce",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "180-spin-more",
      "headRefOid": "cc75befa9116a338bf40b06f73a4012b9c4b41fb",
      "closedAt": "2021-02-22T10:10:13Z",
      "mergedAt": "2021-02-22T10:10:13Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "b12f0da3f7697bef88823ea29315f96b062c32b6"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Waiting for more reviews, e.g. from @gorryfair, before we can merge.",
          "createdAt": "2021-02-15T17:14:44Z",
          "updatedAt": "2021-02-15T17:14:44Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjUzMDM0",
          "commit": {
            "abbreviatedOid": "cc75bef"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-15T17:14:13Z",
          "updatedAt": "2021-02-15T17:14:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 228,
      "id": "MDExOlB1bGxSZXF1ZXN0NTczMTk5MzQw",
      "title": "Ordered and reliable will be assumed",
      "url": "https://github.com/quicwg/ops-drafts/pull/228",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "Beware those who want to do something else.\r\n\r\nCloses #215.",
      "createdAt": "2021-02-15T01:42:55Z",
      "updatedAt": "2021-02-22T10:08:18Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "9570d541e5c13558dcd3fbe7e428c2cb324380ce",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "ordered-reliable",
      "headRefOid": "a2d48016e588cf658baac453ec348f7f25ebf76a",
      "closedAt": "2021-02-22T10:08:18Z",
      "mergedAt": "2021-02-22T10:08:18Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "1c2f3edf78e0be1324b930d35dd040331c108bbc"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Isn't this already covered by the next section on \"Flow Control Deadlocks\"? If not, what's missing? And can we just add a sentence or two there?",
          "createdAt": "2021-02-15T17:20:04Z",
          "updatedAt": "2021-02-15T17:20:04Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwMTI3NDk2",
          "commit": {
            "abbreviatedOid": "5f8e2a5"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-15T02:35:43Z",
          "updatedAt": "2021-02-15T02:38:54Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nreliably delivered in order.\r\n```",
              "createdAt": "2021-02-15T02:35:43Z",
              "updatedAt": "2021-02-21T22:13:50Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\navailable.  In particular, a receiver might withhold flow control credit until\r\n```",
              "createdAt": "2021-02-15T02:36:07Z",
              "updatedAt": "2021-02-21T22:13:50Z"
            },
            {
              "originalPosition": 16,
              "body": "This isn't clear -- maybe rephrase? \"until that data\" is unclear -- this doesn't mean data from the start of the stream, does it?",
              "createdAt": "2021-02-15T02:37:48Z",
              "updatedAt": "2021-02-21T22:13:50Z"
            },
            {
              "originalPosition": 20,
              "body": "It's worse -- the sender can easily get deadlocked, especially if it assumes partial reliability when the receiver does not.",
              "createdAt": "2021-02-15T02:38:49Z",
              "updatedAt": "2021-02-21T22:13:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwMTQwMTgx",
          "commit": {
            "abbreviatedOid": "76ae00c"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-15T03:33:00Z",
          "updatedAt": "2021-02-15T03:33:00Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjM5MTE2",
          "commit": {
            "abbreviatedOid": "76ae00c"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-15T16:52:57Z",
          "updatedAt": "2021-02-15T16:54:46Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nimplementation to provide options that use streams for partial reliability\r\n```",
              "createdAt": "2021-02-15T16:52:57Z",
              "updatedAt": "2021-02-21T22:13:50Z"
            },
            {
              "originalPosition": 14,
              "body": "This last sentence seems somewhat duplicative of text in transport, and given it's fairly proscriptive, I'd prefer to remove it,",
              "createdAt": "2021-02-15T16:54:43Z",
              "updatedAt": "2021-02-21T22:13:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwODEzNTQ4",
          "commit": {
            "abbreviatedOid": "af55917"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "@mirjak, the next section talks about deadlocking more generally, on the assumption that data is delivered in order; the deadlock mentioned here is an extra special one.  (I thought that the mention of deadlocks was a nice segue, as it happens.)",
          "createdAt": "2021-02-16T00:23:53Z",
          "updatedAt": "2021-02-16T00:25:05Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "You mean the \"in particular\"?  Would adding a reference to Section 2.2 of Transport help?  The text in transport only says that implementations MUST be able to deliver in order; it doesn't really say anything about the consequences of that, which is what this is emphasizing.",
              "createdAt": "2021-02-16T00:23:53Z",
              "updatedAt": "2021-02-21T22:13:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzgyMTgy",
          "commit": {
            "abbreviatedOid": "af55917"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-20T20:14:46Z",
          "updatedAt": "2021-02-20T20:14:46Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "A reference would be helpful, but good point on emphasis, happy to keep it in.",
              "createdAt": "2021-02-20T20:14:46Z",
              "updatedAt": "2021-02-21T22:13:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 229,
      "id": "MDExOlB1bGxSZXF1ZXN0NTczMjg1MjMz",
      "title": "Less encrypted; more correct about HTTP",
      "url": "https://github.com/quicwg/ops-drafts/pull/229",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "editorial",
        "ready-to-merge"
      ],
      "body": "This didn't need to say encrypted twice.  And it didn't really require changes to HTTP, just an adaptation.  (I'm less happy about that part; it could probably use a tweak or two.)",
      "createdAt": "2021-02-15T06:04:06Z",
      "updatedAt": "2021-02-22T10:10:43Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "9570d541e5c13558dcd3fbe7e428c2cb324380ce",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "encrypted-encrypted-encrypted",
      "headRefOid": "5c069424e6d2049951cc8fb86f2dd86a67d91f7d",
      "closedAt": "2021-02-22T10:10:43Z",
      "mergedAt": "2021-02-22T10:10:43Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "4d18f81986c1e3377cabf5d7f77290407462da6a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjQxMDc3",
          "commit": {
            "abbreviatedOid": "5c06942"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-15T16:55:46Z",
          "updatedAt": "2021-02-15T16:55:46Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjU3MjU2",
          "commit": {
            "abbreviatedOid": "5c06942"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-15T17:21:05Z",
          "updatedAt": "2021-02-15T17:21:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 233,
      "id": "MDExOlB1bGxSZXF1ZXN0NTczNjcwMTIx",
      "title": "Recommendation on ACKing",
      "url": "https://github.com/quicwg/ops-drafts/pull/233",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "meeting-agenda",
        "ready-to-merge"
      ],
      "body": "This is text from Gorry. I created a new section in the applicability document but not fully sure yet where this belongs.",
      "createdAt": "2021-02-15T16:21:50Z",
      "updatedAt": "2021-03-17T16:28:14Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "9570d541e5c13558dcd3fbe7e428c2cb324380ce",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-13",
      "headRefOid": "518010550902aacdb4b9561841205ae1b945ca17",
      "closedAt": "2021-03-17T16:28:10Z",
      "mergedAt": "2021-03-17T16:28:10Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "841a836f959be3ab02076fb5f7ff270a772086a1"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Okay. I updated the PR. Can people check again? But I think this is ready to merge (after the meeting).",
          "createdAt": "2021-03-04T14:51:00Z",
          "updatedAt": "2021-03-04T14:51:00Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "One more question: usually the ack rate is rather controller by the quic stack than the application. Should we add another sentence saying that an interface for indicating the maximum ack rate would be desirable....?",
          "createdAt": "2021-03-04T14:54:12Z",
          "updatedAt": "2021-03-04T14:54:12Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the text we have might be minimal, but is ok. \r\n\r\n(A good app needs to be aware of this or choose to use a good stack. Since this is a transport feature that isn't always required by the spec, then the app designer needs either the stack to work appropriately and/or to allow some control.)",
          "createdAt": "2021-03-08T09:21:00Z",
          "updatedAt": "2021-03-08T09:21:00Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwNjI0ODAy",
          "commit": {
            "abbreviatedOid": "0f24017"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I'm not sure this belongs in applicability.  This seems like a transport feature, and I would not expect most applications to have much control over it?",
          "createdAt": "2021-02-15T16:32:38Z",
          "updatedAt": "2021-02-15T16:38:37Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n# ACK-only packets on constrained links\r\n```",
              "createdAt": "2021-02-15T16:32:38Z",
              "updatedAt": "2021-03-04T14:50:20Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nthe transmission of packets only containing ACK frames can reduce the efficient use of network\r\n```",
              "createdAt": "2021-02-15T16:33:08Z",
              "updatedAt": "2021-03-04T14:50:20Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\ncapacity. This effect occurs\r\n```\r\nThis sentence is still a bit awkward, but I'm not sure what else to suggest.",
              "createdAt": "2021-02-15T16:34:53Z",
              "updatedAt": "2021-03-04T14:50:20Z"
            },
            {
              "originalPosition": 9,
              "body": "I don't believe return and forward are used elsewhere, but this sentence also seems a bit redundant to the previous sentence which discusses asymmetric paths.",
              "createdAt": "2021-02-15T16:36:56Z",
              "updatedAt": "2021-03-04T14:50:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwODEyNDMx",
          "commit": {
            "abbreviatedOid": "422eb5c"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T00:19:28Z",
          "updatedAt": "2021-02-16T00:19:28Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Maybe instead:\r\n\r\n> The cost of sending acknowledgments - in processing cost or link utilization - could be a significant proportion of available resources if these resources are constrained.  Reducing the rate at which acknowledgments are generated can preserve these resources and improve overall performance.",
              "createdAt": "2021-02-16T00:19:28Z",
              "updatedAt": "2021-03-04T14:50:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMDcxNzc1",
          "commit": {
            "abbreviatedOid": "422eb5c"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T10:11:05Z",
          "updatedAt": "2021-02-16T10:11:05Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "... Radio technologies can have costs per-packet, not per byte - and a sending packet high rate impacts that... in ways for QUIC that would not happen currently with TCP. \r\nI suggest a new additional sentence, something like:\r\n\"On some types of link, the rate of transmission of QUIC packets carrying control information can also impact the overall link efficiency and ultimately the user experience.\" ",
              "createdAt": "2021-02-16T10:11:05Z",
              "updatedAt": "2021-03-04T14:50:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMDc2MTg1",
          "commit": {
            "abbreviatedOid": "422eb5c"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T10:16:04Z",
          "updatedAt": "2021-02-16T10:16:04Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "This text (or similar) seems OK to me.\r\n\r\nIs \"overall\" here meaning QUIC user performance  (or overall link-layer?) I think impact on performance for the QUIC user is the more significant additional take-away. ",
              "createdAt": "2021-02-16T10:16:04Z",
              "updatedAt": "2021-03-04T14:50:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMDgzNTU5",
          "commit": {
            "abbreviatedOid": "422eb5c"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T10:24:53Z",
          "updatedAt": "2021-02-16T10:24:53Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Overall was meant to be all-inclusive, which definitely includes application-relevant metrics like time to first byte, total transfer time, transfer rate, ....  It's clear that there are many ways in which this might help.",
              "createdAt": "2021-02-16T10:24:53Z",
              "updatedAt": "2021-03-04T14:50:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMTk0MzAz",
          "commit": {
            "abbreviatedOid": "422eb5c"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T12:52:25Z",
          "updatedAt": "2021-02-16T12:52:25Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "We agree. Although my question is, it is obvious to a QUIC user that there user performance can be impacted - for several decades they could have used TCP, where other mitigations exist? So can we add \"(including application-relevant metrics)\" or something? ",
              "createdAt": "2021-02-16T12:52:25Z",
              "updatedAt": "2021-03-04T14:50:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MjA4NzQw",
          "commit": {
            "abbreviatedOid": "5180105"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-04T15:11:52Z",
          "updatedAt": "2021-03-04T15:11:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 245,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MDk0ODIw",
      "title": "Add \"--- back\" for appendix",
      "url": "https://github.com/quicwg/ops-drafts/pull/245",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-16T10:34:44Z",
      "updatedAt": "2021-02-22T10:42:52Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-14",
      "headRefOid": "499e2d7dfbe20d83ada2600cecd08a852a908c14",
      "closedAt": "2021-02-22T10:42:49Z",
      "mergedAt": "2021-02-22T10:42:49Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "eaa2bb28904619017ff7b2cc607b88537b8e09d7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 246,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MTAzNTgx",
      "title": "editorial edits on modifications and proxies in intro",
      "url": "https://github.com/quicwg/ops-drafts/pull/246",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #230",
      "createdAt": "2021-02-16T10:49:14Z",
      "updatedAt": "2021-02-22T10:46:27Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-15",
      "headRefOid": "a3b6bcae6ec14ec22775f09524b86574285e8855",
      "closedAt": "2021-02-22T10:46:25Z",
      "mergedAt": "2021-02-22T10:46:25Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "53249742561121d3a3f5b9f9261518d7692e366c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxOTg2NjEw",
          "commit": {
            "abbreviatedOid": "4352388"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-17T09:23:26Z",
          "updatedAt": "2021-02-17T09:23:27Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nSince QUIC's wire image {{?WIRE-IMAGE=RFC8546}} is integrity protected, in-network\r\n```",
              "createdAt": "2021-02-17T09:23:26Z",
              "updatedAt": "2021-02-22T10:42:19Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNjc1NDQ0",
          "commit": {
            "abbreviatedOid": "6e69a05"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-17T22:14:21Z",
          "updatedAt": "2021-02-17T22:15:34Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nwith the introduction of a proxy, which either authenticates as an endpoint.\r\n```\r\n\r\nIt's not necessary to distinguish acting **for** an endpoint and acting **as** an endpoint like this.  As far as the peer is concerned, they are the same thing.",
              "createdAt": "2021-02-17T22:14:22Z",
              "updatedAt": "2021-02-22T10:42:19Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nProxy operations are not in scope for this document.\r\n```",
              "createdAt": "2021-02-17T22:14:43Z",
              "updatedAt": "2021-02-22T10:42:19Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MzYyODU1",
          "commit": {
            "abbreviatedOid": "6e69a05"
          },
          "author": "MikeBishop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-19T16:37:36Z",
          "updatedAt": "2021-02-19T16:39:41Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nSince QUIC's wire image {{?WIRE-IMAGE=RFC8546}} is integrity-protected,\r\n```",
              "createdAt": "2021-02-19T16:37:36Z",
              "updatedAt": "2021-02-22T10:42:19Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nwith the introduction of a proxy which authenticates as an endpoint.\r\n```",
              "createdAt": "2021-02-19T16:39:24Z",
              "updatedAt": "2021-02-22T10:42:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 247,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MTE1ODEx",
      "title": "Edits on TLS vs TLS1.3",
      "url": "https://github.com/quicwg/ops-drafts/pull/247",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #174",
      "createdAt": "2021-02-16T11:09:18Z",
      "updatedAt": "2021-02-22T10:46:55Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "eaa2bb28904619017ff7b2cc607b88537b8e09d7",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-16",
      "headRefOid": "49a6d2bd69a9aefbbe345f3dca3f12a016a9b7f1",
      "closedAt": "2021-02-22T10:46:51Z",
      "mergedAt": "2021-02-22T10:46:51Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "ecbd840f4cd7064fbb9a61d740e664bd45b6cafa"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMTk5ODYx",
          "commit": {
            "abbreviatedOid": "5b955cc"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-16T12:59:49Z",
          "updatedAt": "2021-02-16T12:59:49Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1MjIwMTM2",
          "commit": {
            "abbreviatedOid": "49a6d2b"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-22T10:46:04Z",
          "updatedAt": "2021-02-22T10:46:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 248,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MTIzOTQ0",
      "title": "Add section references on how padding is used in QUIC",
      "url": "https://github.com/quicwg/ops-drafts/pull/248",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #194",
      "createdAt": "2021-02-16T11:23:03Z",
      "updatedAt": "2021-02-22T10:51:44Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-17",
      "headRefOid": "9a22a6b6e1dc126074de60d9294106cab4f16b51",
      "closedAt": "2021-02-22T10:51:42Z",
      "mergedAt": "2021-02-22T10:51:41Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "0fdfd54e83286d51c6918d9bc6dba3d0ee836d4c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyMjY0MDI5",
          "commit": {
            "abbreviatedOid": "9cfc9c6"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Looks good",
          "createdAt": "2021-02-17T14:40:09Z",
          "updatedAt": "2021-02-17T14:40:09Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNjgyNjcz",
          "commit": {
            "abbreviatedOid": "9cfc9c6"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-17T22:25:45Z",
          "updatedAt": "2021-02-17T22:27:13Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nduring the handshake (see Sections 8.1 and 14.1 of {{!QUIC}}) and for path\r\n```",
              "createdAt": "2021-02-17T22:25:46Z",
              "updatedAt": "2021-02-22T10:50:43Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nvalidation after connection migration (see {{Section 8.2. of QUIC}}) as well as for\r\n```\r\n\r\nNot entirely sure that the reference format works, but try it.",
              "createdAt": "2021-02-17T22:26:18Z",
              "updatedAt": "2021-02-22T10:50:43Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nDatagram Packetization Layer PMTU Discovery (DPLMTUD) (see Section 14.3 of\r\n```",
              "createdAt": "2021-02-17T22:26:31Z",
              "updatedAt": "2021-02-22T10:50:43Z"
            },
            {
              "originalPosition": 17,
              "body": "I would split here:\r\n\r\n```suggestion\r\n{{!QUIC}}).\r\n\r\nPadding can also be used by an application to reduce leakage of\r\n```",
              "createdAt": "2021-02-17T22:27:01Z",
              "updatedAt": "2021-02-22T10:50:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 249,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MTM3NTAx",
      "title": "New section on ICMP",
      "url": "https://github.com/quicwg/ops-drafts/pull/249",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses #200",
      "createdAt": "2021-02-16T11:47:44Z",
      "updatedAt": "2021-02-22T11:00:21Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-18",
      "headRefOid": "ec1d4a919db97a0832badb68bbcd4bc9288f7546",
      "closedAt": "2021-02-22T11:00:19Z",
      "mergedAt": "2021-02-22T11:00:19Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "914380dff2afbba0654697f600eb058204117d23"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMzc2MDQ3",
          "commit": {
            "abbreviatedOid": "860459b"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T16:03:47Z",
          "updatedAt": "2021-02-16T16:03:47Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "/optionally use/can optionally use/ or /optionally uses/",
              "createdAt": "2021-02-16T16:03:47Z",
              "updatedAt": "2021-02-22T10:56:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNDc3MDAx",
          "commit": {
            "abbreviatedOid": "860459b"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T17:49:25Z",
          "updatedAt": "2021-02-16T17:49:26Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nprobe for the supported PMTU. PLPMTUD optionally uses ICMP messages (e.g.,\r\n```",
              "createdAt": "2021-02-16T17:49:25Z",
              "updatedAt": "2021-02-22T10:56:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNzY4Mzc0",
          "commit": {
            "abbreviatedOid": "b379912"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-17T01:30:28Z",
          "updatedAt": "2021-02-17T01:32:30Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nIPv6 Packet Too Big messages). Given known attacks with the use of ICMP messages,\r\n```",
              "createdAt": "2021-02-17T01:30:28Z",
              "updatedAt": "2021-02-22T10:56:09Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nthe use of PLPMTUD in QUIC has been designed to safely use but not rely on\r\nreceiving ICMP feedback (see {{Section 14.2.1. of QUIC-TRANSPORT}}).\r\n```",
              "createdAt": "2021-02-17T01:31:46Z",
              "updatedAt": "2021-02-22T10:56:09Z"
            },
            {
              "originalPosition": 15,
              "body": "Wow, I didn't realize that this syntax was even possible.  I might have to use that in future.",
              "createdAt": "2021-02-17T01:32:25Z",
              "updatedAt": "2021-02-22T10:56:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxOTY0NTM2",
          "commit": {
            "abbreviatedOid": "b379912"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-17T08:59:07Z",
          "updatedAt": "2021-02-17T08:59:08Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Actually is not. The build is broken and I didn't check that yesterday. But would be nice...",
              "createdAt": "2021-02-17T08:59:08Z",
              "updatedAt": "2021-02-22T10:56:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxOTgyMjIx",
          "commit": {
            "abbreviatedOid": "01ed93e"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-17T09:18:46Z",
          "updatedAt": "2021-02-17T09:18:46Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nversion when generating ICMP messages as recommended in {{RFC1812, RFC4443}}.\r\n```",
              "createdAt": "2021-02-17T09:18:46Z",
              "updatedAt": "2021-02-22T10:56:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxOTg0MzQz",
          "commit": {
            "abbreviatedOid": "e61c2ee"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-17T09:20:55Z",
          "updatedAt": "2021-02-17T09:20:55Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nversion when generating ICMP messages as recommended in {{RFC1812}} {{RFC4443}}.\r\n```",
              "createdAt": "2021-02-17T09:20:55Z",
              "updatedAt": "2021-02-22T10:56:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1MjI1Mjk4",
          "commit": {
            "abbreviatedOid": "a6cbd50"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-22T10:52:25Z",
          "updatedAt": "2021-02-22T10:52:38Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nversion when generating ICMP messages as recommended in {{RFC1812}} and {{RFC4443}}.\r\n```",
              "createdAt": "2021-02-22T10:52:25Z",
              "updatedAt": "2021-02-22T10:56:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 250,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MTc4NTE4",
      "title": "Fix section reference to QUIC-http ALPN",
      "url": "https://github.com/quicwg/ops-drafts/pull/250",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "editorial",
        "ready-to-merge"
      ],
      "body": "fixes #217",
      "createdAt": "2021-02-16T13:02:06Z",
      "updatedAt": "2021-02-22T10:20:31Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-19",
      "headRefOid": "fc2bd8daf08679840712738f4bba6b986c19c5de",
      "closedAt": "2021-02-22T10:20:28Z",
      "mergedAt": "2021-02-22T10:20:28Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "4ca3a9515c81260fe0acb3857d26079391d228e5"
      },
      "comments": [
        {
          "author": "MikeBishop",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It still says ALPN, though.  ALPN doesn't have anything to do with using different ports; it has to do with using different protocols on the same port.",
          "createdAt": "2021-02-18T21:31:56Z",
          "updatedAt": "2021-02-18T21:31:56Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, Martin already pointed this out. Fixed now. Do we need to say still more about ALPN?",
          "createdAt": "2021-02-19T09:23:44Z",
          "updatedAt": "2021-02-19T09:23:44Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MzEyNjQy",
          "commit": {
            "abbreviatedOid": "244a120"
          },
          "author": "MikeBishop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-19T15:43:59Z",
          "updatedAt": "2021-02-19T15:43:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 251,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MTkwNzI1",
      "title": "Update version info",
      "url": "https://github.com/quicwg/ops-drafts/pull/251",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #231",
      "createdAt": "2021-02-16T13:18:48Z",
      "updatedAt": "2021-02-22T11:00:01Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-20",
      "headRefOid": "bfedfca7c64d22ace0183e6a30464fb08ef4230b",
      "closedAt": "2021-02-22T10:59:58Z",
      "mergedAt": "2021-02-22T10:59:58Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "d339a847411019dd4cabb42cd3ec8fdd41879c32"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNzM2MjIz",
          "commit": {
            "abbreviatedOid": "bfedfca"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Time of publication statements are not generally useful in this context.",
          "createdAt": "2021-02-17T00:24:01Z",
          "updatedAt": "2021-02-17T00:24:45Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n  packet as a Version Negotiation packet. QUIC\r\n  version 1 uses version 0x00000001. Operators should expect to observe\r\n```",
              "createdAt": "2021-02-17T00:24:01Z",
              "updatedAt": "2021-02-17T00:24:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1MjMxMzg5",
          "commit": {
            "abbreviatedOid": "bfedfca"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T10:59:48Z",
          "updatedAt": "2021-02-22T10:59:49Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Will merge this as is for editorial changes. Will create separate PR for content change.",
              "createdAt": "2021-02-22T10:59:49Z",
              "updatedAt": "2021-02-22T10:59:49Z"
            }
          ]
        }
      ]
    },
    {
      "number": 252,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MTk0Mjkw",
      "title": "clarify 10 0-RTT packets in first round",
      "url": "https://github.com/quicwg/ops-drafts/pull/252",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "editorial",
        "ready-to-merge"
      ],
      "body": "fixes #235",
      "createdAt": "2021-02-16T13:24:34Z",
      "updatedAt": "2021-02-22T10:22:31Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "4ca3a9515c81260fe0acb3857d26079391d228e5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-21",
      "headRefOid": "1f70537ffe6f1c75c30f4326a518f3b771d23226",
      "closedAt": "2021-02-22T10:22:28Z",
      "mergedAt": "2021-02-22T10:22:28Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "9341a939776e85228dca57aefd3ba468e875c144"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNzM3NDcx",
          "commit": {
            "abbreviatedOid": "593eeda"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "qualification works",
          "createdAt": "2021-02-17T00:27:05Z",
          "updatedAt": "2021-02-17T00:27:05Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzgxMTI3",
          "commit": {
            "abbreviatedOid": "593eeda"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "You can't ACK 0-RTT packets in 0-RTT, so realistically it's probably 10 packets worth of 0-RTT data at most, but one could construct some edge cases so this is likely better.",
          "createdAt": "2021-02-20T19:58:08Z",
          "updatedAt": "2021-02-20T19:58:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 253,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MTk3OTMz",
      "title": "Integrity check and on-path modifications",
      "url": "https://github.com/quicwg/ops-drafts/pull/253",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #236",
      "createdAt": "2021-02-16T13:30:32Z",
      "updatedAt": "2021-02-22T11:17:56Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-22",
      "headRefOid": "6bd704fdf695427b8227773dab7b70b71b1d79b8",
      "closedAt": "2021-02-22T11:17:53Z",
      "mergedAt": "2021-02-22T11:17:52Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "86de961054b5fc850665d8af3d857e495340bc1d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNzM2OTE4",
          "commit": {
            "abbreviatedOid": "521a669"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-17T00:25:45Z",
          "updatedAt": "2021-02-17T00:26:30Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\ncheck to fail, which results in the receiver discarding the packet.\r\n```",
              "createdAt": "2021-02-17T00:25:45Z",
              "updatedAt": "2021-02-17T08:43:03Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nauthenticated encryption. However,\r\n```",
              "createdAt": "2021-02-17T00:26:10Z",
              "updatedAt": "2021-02-17T08:43:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxOTUwNjEw",
          "commit": {
            "abbreviatedOid": "521a669"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-17T08:42:48Z",
          "updatedAt": "2021-02-17T08:42:49Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nauthenticated encryption without immediate discard at the receiver. However,\r\n```",
              "createdAt": "2021-02-17T08:42:48Z",
              "updatedAt": "2021-02-17T08:43:03Z"
            }
          ]
        }
      ]
    },
    {
      "number": 254,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MjA3NDQx",
      "title": "Version negotiation",
      "url": "https://github.com/quicwg/ops-drafts/pull/254",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "fixes #238",
      "createdAt": "2021-02-16T13:46:10Z",
      "updatedAt": "2021-02-22T10:22:51Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-23",
      "headRefOid": "c35e972dc2d078d09aaa38057a5f2fe9ebc2e8fa",
      "closedAt": "2021-02-22T10:22:48Z",
      "mergedAt": "2021-02-22T10:22:48Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "b97c07dd43b0ed4eef4efb565b62f87b4616ade5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNzM3NjQ0",
          "commit": {
            "abbreviatedOid": "1c6da08"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-17T00:27:33Z",
          "updatedAt": "2021-02-17T00:27:33Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxOTU3Mzg5",
          "commit": {
            "abbreviatedOid": "1c6da08"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-17T08:50:56Z",
          "updatedAt": "2021-02-17T08:50:56Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nversion 1 if the version number in the Initial packet from a client is the\r\n```",
              "createdAt": "2021-02-17T08:50:56Z",
              "updatedAt": "2021-02-22T10:16:49Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzgxMTg1",
          "commit": {
            "abbreviatedOid": "4db1bf5"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-20T19:59:12Z",
          "updatedAt": "2021-02-20T19:59:23Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nsame as the version number in Initial packet of the server response, that\r\n```",
              "createdAt": "2021-02-20T19:59:12Z",
              "updatedAt": "2021-02-22T10:16:49Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1MTkzOTI3",
          "commit": {
            "abbreviatedOid": "75cc763"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2021-02-22T10:16:06Z",
          "updatedAt": "2021-02-22T10:16:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 255,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MjEyMzU5",
      "title": "might eventually be able to associate the version...",
      "url": "https://github.com/quicwg/ops-drafts/pull/255",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "editorial"
      ],
      "body": "fixes #239",
      "createdAt": "2021-02-16T13:53:55Z",
      "updatedAt": "2021-04-19T08:35:25Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-24",
      "headRefOid": "8835646a42daaefbd36f9e60d8d63ac36ba4052c",
      "closedAt": "2021-02-22T11:03:59Z",
      "mergedAt": "2021-02-22T11:03:59Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "884b7ef314a6f05f4a005c27941638aa8719b562"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNzk1MDIy",
          "commit": {
            "abbreviatedOid": "65eaaa0"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-17T02:41:34Z",
          "updatedAt": "2021-02-17T02:41:37Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nobserved, such as in the case of connection migration; however, it might be\r\npossible to associate a flow with a flow for which a version has been\r\n```\r\n\r\nEventually implies an inevitability, which still implies that our linkability protection is ineffectual.",
              "createdAt": "2021-02-17T02:41:34Z",
              "updatedAt": "2021-02-17T09:06:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxOTcwNTU1",
          "commit": {
            "abbreviatedOid": "65eaaa0"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-17T09:06:03Z",
          "updatedAt": "2021-02-17T09:06:04Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "If you only switch CID (and maybe one IP address) but keep sending data with the same speed to the same endpoint on the same destination port, I would actually say the linkability protection is quite ineffectual. ",
              "createdAt": "2021-02-17T09:06:04Z",
              "updatedAt": "2021-02-17T09:06:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzgyMDgy",
          "commit": {
            "abbreviatedOid": "8835646"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-20T20:13:10Z",
          "updatedAt": "2021-02-20T20:13:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 256,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MjI4MDQ2",
      "title": "Recommendation for NATs and consequences of using CID",
      "url": "https://github.com/quicwg/ops-drafts/pull/256",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "next revision"
      ],
      "body": "fixes #241",
      "createdAt": "2021-02-16T14:17:41Z",
      "updatedAt": "2021-03-10T15:13:52Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-25",
      "headRefOid": "967f79018de6359737aa1f489a0e65f7c75b1555",
      "closedAt": "2021-03-10T15:13:52Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I guess this should be review together with #257. I didn't realise that I would do a larger rewrite when I started this PR.",
          "createdAt": "2021-02-16T16:26:48Z",
          "updatedAt": "2021-02-16T16:26:48Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is the \"intro\" part in the top section where #257 is the two subsections belonging to this main section. However, content is a bit redundant...",
          "createdAt": "2021-02-17T09:03:16Z",
          "updatedAt": "2021-02-17T09:03:16Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "replaced by PR #272",
          "createdAt": "2021-03-10T15:13:52Z",
          "updatedAt": "2021-03-10T15:13:52Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMzg2ODIw",
          "commit": {
            "abbreviatedOid": "10944b1"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T16:14:18Z",
          "updatedAt": "2021-02-16T16:14:18Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nminimize NAT port usage or to support the work of the QUIC server by\r\n```",
              "createdAt": "2021-02-16T16:14:18Z",
              "updatedAt": "2021-02-23T10:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNTA2MDc0",
          "commit": {
            "abbreviatedOid": "f9a95f7"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T18:24:21Z",
          "updatedAt": "2021-02-16T18:25:22Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nTranslation (NAT) better than other connection-oriented protocols, and\r\n```",
              "createdAt": "2021-02-16T18:24:22Z",
              "updatedAt": "2021-02-23T10:13:08Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nfor the endpoints even though it might appear to simplify network\r\n```",
              "createdAt": "2021-02-16T18:24:42Z",
              "updatedAt": "2021-02-23T10:13:08Z"
            },
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nchangeable and even impact security by facilitating amplification attacks.\r\n```",
              "createdAt": "2021-02-16T18:25:14Z",
              "updatedAt": "2021-02-23T10:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNzcyMzA4",
          "commit": {
            "abbreviatedOid": "d66275f"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I'm losing track.  I've seen variations on the same text in several places now.",
          "createdAt": "2021-02-17T01:40:47Z",
          "updatedAt": "2021-02-17T01:40:47Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1ODU1Nzc3",
          "commit": {
            "abbreviatedOid": "d66275f"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-22T22:46:58Z",
          "updatedAt": "2021-02-22T22:47:54Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nhiding path changes, use of the connection ID by a NAT device to identify\r\n```",
              "createdAt": "2021-02-22T22:46:58Z",
              "updatedAt": "2021-02-23T10:13:08Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nsurvive address rebindings. While this may appear as an opportunity to\r\n```",
              "createdAt": "2021-02-22T22:47:32Z",
              "updatedAt": "2021-02-23T10:13:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 257,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0MjY1NDU5",
      "title": "rewrite NAT section",
      "url": "https://github.com/quicwg/ops-drafts/pull/257",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "next revision"
      ],
      "body": "",
      "createdAt": "2021-02-16T15:12:38Z",
      "updatedAt": "2021-03-10T15:13:00Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-26",
      "headRefOid": "365fc06eb1f9188d0cba936643bfcc42d39a9dd7",
      "closedAt": "2021-03-10T15:12:15Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "replaced by PR #272 ",
          "createdAt": "2021-03-10T15:13:00Z",
          "updatedAt": "2021-03-10T15:13:00Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMzc1MDI5",
          "commit": {
            "abbreviatedOid": "66881ab"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T16:02:50Z",
          "updatedAt": "2021-02-16T16:02:50Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nbegin using new connection IDs at will at any time during the connection.\r\n```",
              "createdAt": "2021-02-16T16:02:50Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMzc3Mjc1",
          "commit": {
            "abbreviatedOid": "e72e262"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T16:04:59Z",
          "updatedAt": "2021-02-16T16:10:08Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "Not sure I fully understand this point actually. If path changes are concealed, no migration is needed...",
              "createdAt": "2021-02-16T16:04:59Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 69,
              "body": "I also wonder is this actually entirely true. If you cannot get a binding for your QUIC connection, why would you get a binding for a TCP connection? Isn't some connectivity, even at the risk that it might break later in the connection better than no connectivity?",
              "createdAt": "2021-02-16T16:06:18Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 71,
              "body": "Not sure if NATs would make a connection unstable or just break it...? Complete breaking is actually better to detect than unstable connectivity. You still have to eat a time-out but then you will immediately be able to re-connect.",
              "createdAt": "2021-02-16T16:07:41Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 113,
              "body": "```suggestion\r\nfrom QUIC enpoints and as such would facilitate amplification attacks (see\r\n```",
              "createdAt": "2021-02-16T16:08:14Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 118,
              "body": "This paragraph is probably redundant...",
              "createdAt": "2021-02-16T16:08:43Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 42,
              "body": "```suggestion\r\na point behind the NAT. {{QUIC_LB}} described mechanisms to encode the client's\r\n```",
              "createdAt": "2021-02-16T16:09:41Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNDA1NzI5",
          "commit": {
            "abbreviatedOid": "f8fde13"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T16:31:58Z",
          "updatedAt": "2021-02-16T16:31:58Z",
          "comments": [
            {
              "originalPosition": 104,
              "body": "```suggestion\r\naddress changes, this does not work if the routers or switches in the server\r\n```",
              "createdAt": "2021-02-16T16:31:58Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNDA2NTU3",
          "commit": {
            "abbreviatedOid": "1af0cab"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T16:32:48Z",
          "updatedAt": "2021-02-16T16:32:48Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "```suggestion\r\nAn NAT that bleaches peer address changes, hinders the other end\r\n```",
              "createdAt": "2021-02-16T16:32:48Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNDk4Nzg4",
          "commit": {
            "abbreviatedOid": "9631c3c"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Fixed a bunch of typos.",
          "createdAt": "2021-02-16T18:15:05Z",
          "updatedAt": "2021-02-16T18:23:41Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nUse of QUIC's connection ID for NAT mappings is not a viable approach to\r\n```",
              "createdAt": "2021-02-16T18:15:05Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nprovided in {#sec-stateful}.\r\n```",
              "createdAt": "2021-02-16T18:15:15Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 70,
              "body": "```suggestion\r\nto fail and fallback during connection establishment rather than persist with a\r\n```",
              "createdAt": "2021-02-16T18:15:35Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nextend operational limits of deployed NATs, as the connection ID is not\r\n```",
              "createdAt": "2021-02-16T18:15:54Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nbe easily associated with a connection ID in use, as new connection IDs are\r\n```",
              "createdAt": "2021-02-16T18:16:28Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nand as such are not observable in the network. Alternatively, sharing\r\n```",
              "createdAt": "2021-02-16T18:16:53Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nconfigurations between the client and NAT might be logistically challenging\r\n```",
              "createdAt": "2021-02-16T18:17:05Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nor impossible, especially when client migrates with an existing connection to\r\n```",
              "createdAt": "2021-02-16T18:17:14Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 66,
              "body": "```suggestion\r\nexhausted, it should drop the initial packets of a connection rather than\r\n```",
              "createdAt": "2021-02-16T18:18:04Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nrisking breakage later. As QUIC is based on UDP and some devices are known to block\r\n```",
              "createdAt": "2021-02-16T18:18:45Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 68,
              "body": "```suggestion\r\nUDP, QUIC deployments are recommended to implement a fallback to TCP\r\n```",
              "createdAt": "2021-02-16T18:19:01Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 71,
              "body": "```suggestion\r\nconnection that might be unstable or experiencing\r\n```",
              "createdAt": "2021-02-16T18:19:54Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 114,
              "body": "```suggestion\r\nAn alternative, potentially simpler approach would seem to be the use of NAT in front\r\nof such an infrastructure setup. However, hiding information about the change\r\nof the IP address or port conceals important, and security relevant information\r\nfrom QUIC endpoints, and as such would facilitate amplification attacks (see\r\nsection 9 of {{QUIC-TRANSPORT}}).\r\n```",
              "createdAt": "2021-02-16T18:21:18Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 118,
              "body": "Honestly, I prefer the original wording of this subsection. But you're the editor!",
              "createdAt": "2021-02-16T18:22:01Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNTk3NzYy",
          "commit": {
            "abbreviatedOid": "15263c5"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T20:28:59Z",
          "updatedAt": "2021-02-16T20:29:00Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "I was trying to make it more clear what the recommendation actually is and remove some redundancy. I can give it another, less invasive try.\r\n\r\nHowever, I think the main point about redundancy is actually that you basically say the same thing in this and the previous section (only that the motivation do use CID is different). So I would actually rather structure the text by \"approach\" than by use case but that would an even bigger rewrite. \r\n\r\nI'll have another look with a fresh pair of eyes tomorrow!",
              "createdAt": "2021-02-16T20:28:59Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNzQ5ODY4",
          "commit": {
            "abbreviatedOid": "15263c5"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-17T00:53:24Z",
          "updatedAt": "2021-02-17T01:09:29Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "I think that this is rely\r\n\r\n```suggestion\r\ninfrastructure rely on address-port 4-tuple as a NAT rebinding or address\r\n```",
              "createdAt": "2021-02-17T00:53:24Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 108,
              "body": "```suggestion\r\nmigration will cause packets to be delivered to the wrong server. {{QUIC_LB}}\r\ndescribes a system for coordinating selection and use of connection IDs between\r\nload-balancers and servers.\r\n```\r\nI couldn't understand this sentence.",
              "createdAt": "2021-02-17T00:55:14Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 114,
              "body": "Rather than phrase this as a viable alternative (as the lead-in text implies), make it clear that this is non-viable.\r\n\r\n> It might seem possible to use a NAT that uses connection IDs to provide a stable address 4-tuple.  This might work if servers cooperate to inform the NAT of all connection IDs that might be used for each connection.  However, hiding address changes from a server prevents the server from validating new addresses, which would facilitate amplification attacks (see {{Section 9 of QUIC-TRANSPORT}}).",
              "createdAt": "2021-02-17T01:00:32Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 127,
              "body": "```suggestion\r\ninternal mechanisms in QUIC. When a path change is detected, path-dependent\r\n```",
              "createdAt": "2021-02-17T01:02:14Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 69,
              "body": "If clients prefer QUIC over TCP, which is likely to happen real soon now, then I don't think that it is unreasonable to expect more free TCP capacity.",
              "createdAt": "2021-02-17T01:03:33Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 47,
              "body": "This might be replaced by text that just says \"Coordination with endpoints is necessary if connection IDs are to be used as QUIC provides confidentiality protection for the negotiation of connection IDs.  A NAT might be able to coordinate with endpoints using the methods described in {{QUIC_LB}}.\"",
              "createdAt": "2021-02-17T01:07:41Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 66,
              "body": "NATs don't know about connections, they can only observe flows.\r\n\r\n```suggestion\r\nexhausted, it should drop the initial packets of a flow rather than\r\n```",
              "createdAt": "2021-02-17T01:08:24Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 70,
              "body": "```suggestion\r\nto fail and fallback when the flow is first used rather than persist with a\r\n```",
              "createdAt": "2021-02-17T01:08:51Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            },
            {
              "originalPosition": 72,
              "body": "```suggestion\r\nsudden errors and time outs later.\r\n```",
              "createdAt": "2021-02-17T01:09:24Z",
              "updatedAt": "2021-02-17T09:14:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxMzg3NDcw",
          "commit": {
            "abbreviatedOid": "71b0491"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-16T16:14:57Z",
          "updatedAt": "2021-02-20T20:05:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nprovided in {#sec-stateful}.\r\n```",
              "createdAt": "2021-02-16T16:14:57Z",
              "updatedAt": "2021-02-20T20:05:01Z"
            },
            {
              "originalPosition": 42,
              "body": "```suggestion\r\na point behind the NAT. {{QUIC_LB}} describes mechanisms to encode the connection's\r\n```",
              "createdAt": "2021-02-20T20:02:37Z",
              "updatedAt": "2021-02-20T20:05:01Z"
            },
            {
              "originalPosition": 49,
              "body": "```suggestion\r\nNote that multiplexing connection IDs over a single port also violates the\r\n```",
              "createdAt": "2021-02-20T20:03:42Z",
              "updatedAt": "2021-02-20T20:05:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 259,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0Mzc4MDEw",
      "title": "Add a sentence on taps",
      "url": "https://github.com/quicwg/ops-drafts/pull/259",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "This is a proposal by Gorry to address issue #203",
      "createdAt": "2021-02-16T17:59:16Z",
      "updatedAt": "2021-02-22T10:23:26Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-27",
      "headRefOid": "045ab04ebfbed894c35194dea11b6f190811a2c2",
      "closedAt": "2021-02-22T10:23:24Z",
      "mergedAt": "2021-02-22T10:23:24Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "1137b103d08f7de7e0a29fe1c4e11588cb6e8bed"
      },
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This works for me.",
          "createdAt": "2021-02-17T14:27:55Z",
          "updatedAt": "2021-02-17T14:27:55Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNzY5NDE1",
          "commit": {
            "abbreviatedOid": "74c088e"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-17T01:33:10Z",
          "updatedAt": "2021-02-17T01:33:13Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\ncommon API for multiple protocols and some of the implications of fallback\r\n```",
              "createdAt": "2021-02-17T01:33:10Z",
              "updatedAt": "2021-02-17T09:15:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyMjQ5NTY1",
          "commit": {
            "abbreviatedOid": "045ab04"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-17T14:26:47Z",
          "updatedAt": "2021-02-17T14:26:47Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1MjAwMjgz",
          "commit": {
            "abbreviatedOid": "045ab04"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "\\o/ lgtm",
          "createdAt": "2021-02-22T10:23:19Z",
          "updatedAt": "2021-02-22T10:23:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 260,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0NDY0MjYw",
      "title": "Add reference to quit-transport sec 6 on version negotiation",
      "url": "https://github.com/quicwg/ops-drafts/pull/260",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses #199",
      "createdAt": "2021-02-16T20:46:07Z",
      "updatedAt": "2021-02-22T11:07:24Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-28",
      "headRefOid": "8679e8b63bbf4e0121bff3534aa49fc82a1804b1",
      "closedAt": "2021-02-22T11:07:23Z",
      "mergedAt": "2021-02-22T11:07:23Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "3389c0eeee6133036b39657f714597b31fe3ffa6"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 261,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0NTU2OTA5",
      "title": "Tighten up language around 0-RTT",
      "url": "https://github.com/quicwg/ops-drafts/pull/261",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "This cuts a section heading and coalesces a few paragraphs.  It adds a\r\npoint of comparison with TLS 1.3.\r\n\r\nCloses #227.",
      "createdAt": "2021-02-17T00:22:54Z",
      "updatedAt": "2021-02-22T10:24:46Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "zero-rtt-titles",
      "headRefOid": "e3b78e3b174046f85129c698e07736b06e4f0dd1",
      "closedAt": "2021-02-22T10:24:46Z",
      "mergedAt": "2021-02-22T10:24:46Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "4ddbc8df0735290bcd1a7b1f27b6438857855164"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyMzkzMTQ0",
          "commit": {
            "abbreviatedOid": "e3b78e3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-17T16:35:25Z",
          "updatedAt": "2021-02-17T16:35:25Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNjU4Nzk5",
          "commit": {
            "abbreviatedOid": "e3b78e3"
          },
          "author": "MikeBishop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-18T21:26:48Z",
          "updatedAt": "2021-02-18T21:26:48Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzgxODI4",
          "commit": {
            "abbreviatedOid": "e3b78e3"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-20T20:08:41Z",
          "updatedAt": "2021-02-20T20:08:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 262,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0OTc4MDAx",
      "title": "Update  MTU  to Min QUIC packet size in manageability",
      "url": "https://github.com/quicwg/ops-drafts/pull/262",
      "state": "MERGED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This seeks to address  issue: \"MTU or Min QUIC Packet Size? #177\"",
      "createdAt": "2021-02-17T14:55:37Z",
      "updatedAt": "2021-02-22T11:09:07Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "gorryfair/ops-drafts",
      "headRefName": "patch-1",
      "headRefOid": "51277d3db4b2e0fd9dffe6b3aef94875efd6a741",
      "closedAt": "2021-02-22T11:09:07Z",
      "mergedAt": "2021-02-22T11:09:06Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "37f71ca90490456560c9f52a779fbadacb183255"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyMzAyMjAx",
          "commit": {
            "abbreviatedOid": "0fc13ce"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-17T15:13:54Z",
          "updatedAt": "2021-02-17T15:13:54Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNjg0MTkz",
          "commit": {
            "abbreviatedOid": "0fc13ce"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-17T22:28:12Z",
          "updatedAt": "2021-02-17T22:28:15Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nthe Initial Packet with other packets. A network path \r\n```",
              "createdAt": "2021-02-17T22:28:12Z",
              "updatedAt": "2021-02-22T11:07:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMzE2Mjg4",
          "commit": {
            "abbreviatedOid": "449a0c3"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I think there are only 3 ways to fill up the space, so maybe enumerate them?\r\n\r\nI also wonder if we need to caution against stripping unused UDP payload or splitting up packets within a UDP datagram?",
          "createdAt": "2021-02-18T15:08:29Z",
          "updatedAt": "2021-02-18T15:11:12Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n{{QUIC-TRANSPORT}}. This is accomplished by\r\neither adding PADDING frames within the Initial packet, coalescing other packets with the Initial packet, or \r\nleaving unused payload in the UDP packet after the Initial packet. A network path \r\n```",
              "createdAt": "2021-02-18T15:08:29Z",
              "updatedAt": "2021-02-22T11:07:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 266,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc1MDc2Mjc5",
      "title": "Full rewrite of entire NAT sec and some reordering",
      "url": "https://github.com/quicwg/ops-drafts/pull/266",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-17T17:11:36Z",
      "updatedAt": "2021-02-18T01:31:08Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-29",
      "headRefOid": "29ea1f30578fccad96bbddf18088e547231435c2",
      "closedAt": "2021-02-18T01:31:08Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNjg2MTE2",
          "commit": {
            "abbreviatedOid": "29ea1f3"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2021-02-17T22:31:16Z",
          "updatedAt": "2021-02-17T22:45:27Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nTranslation (NAT) to mean NAPT (Section 2.2 of\r\n```",
              "createdAt": "2021-02-17T22:31:16Z",
              "updatedAt": "2021-02-17T22:45:27Z"
            },
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n{{?RFC3022}}), which rewrites addresses on flows from multiple IP addresses to\r\nallow sharing of a limited pool of addresses, as commonly deployed in\r\ncarrier-grade NATs or residential NATs.\r\n```",
              "createdAt": "2021-02-17T22:32:45Z",
              "updatedAt": "2021-02-17T22:45:27Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nIn summary, the advice is simple: devices that perform NAT should use the\r\n```",
              "createdAt": "2021-02-17T22:33:43Z",
              "updatedAt": "2021-02-17T22:45:27Z"
            },
            {
              "originalPosition": 34,
              "body": "I don't know what \"map their internal state means\".  If it means that the NAT can use extra knowledge of QUIC to learn more about how things are operating, then I don't know what use that has unless it is applied.\r\n\r\nI would remove this extra piece, on the basis that it is confusing and misleading.  Other text can cover the learnings.",
              "createdAt": "2021-02-17T22:38:15Z",
              "updatedAt": "2021-02-17T22:45:27Z"
            },
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nAs already recognised in {{sec-stateful}} the QUIC connection ID is not\r\n```",
              "createdAt": "2021-02-17T22:38:26Z",
              "updatedAt": "2021-02-17T22:45:27Z"
            },
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nguaranteed to be constant over the lifetime of a connection. A NAT that uses connection IDs as part of its mapping will lose those mappings when a change of connection ID occurs.\r\n```\r\n\r\nThis was missing the bit where you explain that the NAT is using connection IDs somehow.",
              "createdAt": "2021-02-17T22:38:39Z",
              "updatedAt": "2021-02-17T22:45:27Z"
            },
            {
              "originalPosition": 42,
              "body": "This is just repetition of a previous statement.",
              "createdAt": "2021-02-17T22:40:47Z",
              "updatedAt": "2021-02-17T22:45:27Z"
            },
            {
              "originalPosition": 44,
              "body": "```suggestion\r\n{{sec-stateful}} also provides further recommendations on timeouts\r\n```",
              "createdAt": "2021-02-17T22:41:11Z",
              "updatedAt": "2021-02-17T22:45:27Z"
            },
            {
              "originalPosition": 48,
              "body": "This is getting quite repetitive.  Maybe you can just list things that don't work:\r\n\r\n* Tracking connections based on connection ID (connection IDs change).\r\n* Changing NAT timeouts based on detecting QUIC (QUIC doesn't care).\r\n* Rewriting addresses to ensure stability (requires endpoint cooperation; enables amplification attacks).",
              "createdAt": "2021-02-17T22:42:10Z",
              "updatedAt": "2021-02-17T22:45:27Z"
            },
            {
              "originalPosition": 19,
              "body": "This section is too long for me.  I started reviewing it, but I lost the thread.  I don't think that this is an improvement.",
              "createdAt": "2021-02-17T22:45:24Z",
              "updatedAt": "2021-02-17T22:45:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNzc1MTQ4",
          "commit": {
            "abbreviatedOid": "29ea1f3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T01:27:56Z",
          "updatedAt": "2021-02-18T01:27:56Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I actually agree. I was just trying to keep all of the points in Martin Duke's original text (while removing redundancy). PR #272 is a proposal for a minimum text version. Maybe we can start from there and re-add things if needed.",
              "createdAt": "2021-02-18T01:27:56Z",
              "updatedAt": "2021-02-18T01:27:56Z"
            }
          ]
        }
      ]
    },
    {
      "number": 267,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc1MDc4Njkz",
      "title": "Move \"Distinguishing Acknowledgment traffic\" into sec 3",
      "url": "https://github.com/quicwg/ops-drafts/pull/267",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "where it belongs. This is not a network function but a piece of information that can be identified (or not)",
      "createdAt": "2021-02-17T17:15:17Z",
      "updatedAt": "2021-02-22T11:15:56Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3389c0eeee6133036b39657f714597b31fe3ffa6",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-30",
      "headRefOid": "49930e8aac0adaa59f157e13c6ed1e17d7a02400",
      "closedAt": "2021-02-22T11:15:51Z",
      "mergedAt": "2021-02-22T11:15:50Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "b4ba53ef8d4965ae200dd977b778c68b50cf763b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzgyMDQz",
          "commit": {
            "abbreviatedOid": "73dfd48"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-20T20:12:17Z",
          "updatedAt": "2021-02-20T20:12:17Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1MjM3OTA0",
          "commit": {
            "abbreviatedOid": "73dfd48"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-22T11:08:11Z",
          "updatedAt": "2021-02-22T11:08:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 268,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc1MDc5NDQ4",
      "title": "Editorial notes from applicability read-through",
      "url": "https://github.com/quicwg/ops-drafts/pull/268",
      "state": "MERGED",
      "author": "MikeBishop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "These changes should be largely editorial; I'm happy to pull out anything controversial into a separate PR if desired.",
      "createdAt": "2021-02-17T17:16:09Z",
      "updatedAt": "2021-02-22T15:40:39Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "86de961054b5fc850665d8af3d857e495340bc1d",
      "headRepository": "MikeBishop/ops-drafts",
      "headRefName": "applicability/mbishop-editorial",
      "headRefOid": "d80bdb5e479890f456a00e36d7f5d6944ef7465d",
      "closedAt": "2021-02-22T13:25:22Z",
      "mergedAt": "2021-02-22T13:25:22Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "cee71e08bbdd6188efce99db675cbf2c2b84c059"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNjk0Nzc3",
          "commit": {
            "abbreviatedOid": "286956e"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-17T22:46:13Z",
          "updatedAt": "2021-02-17T22:49:53Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nencrypt all payload data and most control information. The version of HTTP that\r\n```",
              "createdAt": "2021-02-17T22:46:13Z",
              "updatedAt": "2021-02-22T13:22:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0Nzc5NDk0",
          "commit": {
            "abbreviatedOid": "be82168"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "A few additional suggestions, but these changes LG.",
          "createdAt": "2021-02-20T19:34:09Z",
          "updatedAt": "2021-02-20T19:44:39Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nencapsulated in UDP. QUIC version 1 integrates TLS 1.3 {{!TLS13=RFC8446}} to\r\n```",
              "createdAt": "2021-02-20T19:34:09Z",
              "updatedAt": "2021-02-22T13:22:09Z"
            },
            {
              "originalPosition": 52,
              "body": "```suggestion\r\nexisting network infrastructure.\r\n```",
              "createdAt": "2021-02-20T19:35:12Z",
              "updatedAt": "2021-02-22T13:22:09Z"
            },
            {
              "originalPosition": 94,
              "body": "This sentence is long, can we break it up?\r\n\r\n```suggestion\r\nA QUIC applications can adjust idle periods to manage the risk of timeout.\r\nIdle periods and the network idle timeout are distinct from the connection\r\nidle timeout, which is defined as the minimum of either endpoint's idle timeout\r\nparameter; see {{Section 10.1 of QUIC}}). There are three options:\r\n```",
              "createdAt": "2021-02-20T19:38:01Z",
              "updatedAt": "2021-02-22T13:22:09Z"
            },
            {
              "originalPosition": 191,
              "body": "In other spots, you mention the frame, so it seems sensible to do so here?\r\n\r\n```suggestion\r\nother end indicates that more streams are needed via a STREAMS_BLOCKED frame, it doesn't automatically lead\r\n```",
              "createdAt": "2021-02-20T19:42:35Z",
              "updatedAt": "2021-02-22T13:22:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0Nzg2NjY3",
          "commit": {
            "abbreviatedOid": "be82168"
          },
          "author": "MikeBishop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-20T21:27:36Z",
          "updatedAt": "2021-02-20T21:27:37Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "\"A QUIC applications\" => \"QUIC applications\" or \"A QUIC application\"",
              "createdAt": "2021-02-20T21:27:37Z",
              "updatedAt": "2021-02-22T13:22:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 270,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc1MTQ3OTI0",
      "title": "Stream ID interactions",
      "url": "https://github.com/quicwg/ops-drafts/pull/270",
      "state": "MERGED",
      "author": "MikeBishop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #263.",
      "createdAt": "2021-02-17T19:12:25Z",
      "updatedAt": "2021-02-23T12:03:19Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "MikeBishop/ops-drafts",
      "headRefName": "applicability/stream_api",
      "headRefOid": "0cdc7713a8192a636421bfc11c70c2d79b9121fa",
      "closedAt": "2021-02-22T11:11:17Z",
      "mergedAt": "2021-02-22T11:11:17Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "5c39f2fe13d2aa2b98e4ceadac344c8e2f73bc5d"
      },
      "comments": [
        {
          "author": "mikkelfj",
          "authorAssociation": "NONE",
          "body": "I believe it is sane to not assume a specific ID ordering, but I do not think it is right to require that all applications do not so. You can easily have applications that benefit from knowing and controlling the ID sequencing in detail, but such applications may not be implementable on the majority of QUIC library implementations. Ops should only make this a guidance for designing new app level protocols, not a requirement.",
          "createdAt": "2021-02-23T10:39:07Z",
          "updatedAt": "2021-02-23T10:39:07Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would see everything in the ops docs as a recommendation and not a requirement. However this PR is already merged. Can you open a new issue (and ideally propose some wording or say more specifically where you think the current wording is too restrictive)?",
          "createdAt": "2021-02-23T10:45:37Z",
          "updatedAt": "2021-02-23T10:45:37Z"
        },
        {
          "author": "mikkelfj",
          "authorAssociation": "NONE",
          "body": "@mirjak done",
          "createdAt": "2021-02-23T12:03:19Z",
          "updatedAt": "2021-02-23T12:03:19Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNzAyMTU0",
          "commit": {
            "abbreviatedOid": "3881266"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "That captures it.",
          "createdAt": "2021-02-17T22:59:47Z",
          "updatedAt": "2021-02-17T22:59:47Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzgwMjkx",
          "commit": {
            "abbreviatedOid": "0cdc771"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-20T19:45:36Z",
          "updatedAt": "2021-02-20T19:45:36Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1MjM5OTQx",
          "commit": {
            "abbreviatedOid": "0cdc771"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-22T11:10:47Z",
          "updatedAt": "2021-02-22T11:10:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 271,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc1MzIwNDIy",
      "title": "Rewrite NAT sec to minimal text",
      "url": "https://github.com/quicwg/ops-drafts/pull/271",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Note that the main point about using CID in a NAT can break connectivity was already covered the section \"Stateful Treatment of QUIC Traffic\". The new section now only covers the NAT for routing stability case.",
      "createdAt": "2021-02-18T01:16:53Z",
      "updatedAt": "2021-02-18T01:19:25Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "mirjak-patch-29",
      "baseRefOid": "29ea1f30578fccad96bbddf18088e547231435c2",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-31",
      "headRefOid": "c4e73a5d7e05172ecda048033759b7a2d88ba02b",
      "closedAt": "2021-02-18T01:18:51Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 272,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc1MzIyMjAw",
      "title": "Rewrite NAT section to minimum text",
      "url": "https://github.com/quicwg/ops-drafts/pull/272",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "next revision",
        "ready-to-merge"
      ],
      "body": "Note that the main point about using CID in a NAT can break connectivity was already covered the section \"Stateful Treatment of QUIC Traffic\". The new section now only covers the NAT for routing stability case.",
      "createdAt": "2021-02-18T01:22:31Z",
      "updatedAt": "2021-03-17T16:42:50Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "841a836f959be3ab02076fb5f7ff270a772086a1",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-31",
      "headRefOid": "09d49bab41cd2018f7e2a349c8c53cfab1a56432",
      "closedAt": "2021-03-17T16:42:46Z",
      "mergedAt": "2021-03-17T16:42:46Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "760f3d3da69427dd5176cc94e2788ffc3ed377c9"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note also that this PR also contains some rearrangement of sections.",
          "createdAt": "2021-02-18T01:23:44Z",
          "updatedAt": "2021-02-18T01:23:44Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I updated the text in the \"Address Rewriting to Ensure Routing Stability\" as agreed with @martinduke. The remaining comments are on sections where I didn't change any of the text but did move them to a different position in the document. Please open separate issue for them!\r\n\r\nI would really like to merge this PR now/first so we have all the pieces in the right place. We can then create new PRs on further changes needed. Is that okay?",
          "createdAt": "2021-03-05T17:33:35Z",
          "updatedAt": "2021-03-05T17:33:35Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addresses #241 and addresses #242",
          "createdAt": "2021-03-10T15:17:14Z",
          "updatedAt": "2021-03-10T15:17:14Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNzk4MzQy",
          "commit": {
            "abbreviatedOid": "5b5b7c5"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "This is better, I think.",
          "createdAt": "2021-02-18T02:25:54Z",
          "updatedAt": "2021-02-18T02:34:54Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\ninitial packets of a flow (see also {{sec-filtering}}),\r\n```",
              "createdAt": "2021-02-18T02:25:54Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 30,
              "body": "This sentence is too long.",
              "createdAt": "2021-02-18T02:26:44Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nIf the routers or switches in the server infrastructure rely on address-port\r\n4-tuple, a NAT rebinding or any other address migration on the client side,\r\neven if that could be handled by the QUIC server, will cause packets to be\r\ndelivered to the wrong server. In this case it seems tempting to use NAT in\r\n```",
              "createdAt": "2021-02-18T02:27:05Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 52,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-02-18T02:27:58Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 65,
              "body": "```suggestion\r\n{{?QUIC-APPLICABILITY=I-D.ietf-quic-applicability}}. {{QUIC_LB}}\r\n```",
              "createdAt": "2021-02-18T02:28:58Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 69,
              "body": "```suggestion\r\n## Filtering Behavior {#sec-filtering}\r\n```",
              "createdAt": "2021-02-18T02:29:12Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 76,
              "body": "```suggestion\r\nbased on UDP and there are known block of UDP (see {{sec-udp-1312}}).\r\n```",
              "createdAt": "2021-02-18T02:30:25Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\npackets is to either drop them all or to throttle them based on\r\n```",
              "createdAt": "2021-02-18T02:31:15Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 94,
              "body": "```suggestion\r\nonly source and destination addresses.\r\n```",
              "createdAt": "2021-02-18T02:31:38Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 95,
              "body": "```suggestion\r\n```\r\n\r\nThe extra words don't really help here.  If anything, you need to highlight the need to block only a subset of addresses rather than a subset of packets.",
              "createdAt": "2021-02-18T02:32:32Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 98,
              "body": "```suggestion\r\n(at least applications using well-known UDP ports). However, blocking a\r\nfraction of QUIC packets will allow many QUIC handshakes\r\n```",
              "createdAt": "2021-02-18T02:32:55Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 99,
              "body": "```suggestion\r\nto complete, which might discouraging endpoints from attempting to fall back to TCP.\r\nThe increased loss the connections experience will only degrade performance.\r\n```",
              "createdAt": "2021-02-18T02:34:39Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMDc5MzEx",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T10:46:37Z",
          "updatedAt": "2021-02-18T10:46:37Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Okay for me to take this example text out.",
              "createdAt": "2021-02-18T10:46:37Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMDgxNzIy",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T10:49:22Z",
          "updatedAt": "2021-02-18T10:49:23Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "I know. That's my German gens come through. I will break it up in two sentences.",
              "createdAt": "2021-02-18T10:49:22Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMTIyMzI1",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T11:39:31Z",
          "updatedAt": "2021-02-18T11:39:32Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "Yes, that was the intention here and I think your proposed edit changes the meaning.\r\n\r\n(Also I only moved this part of the text in this PR but didn't change the wording. Maybe a separate PR would be better here.)",
              "createdAt": "2021-02-18T11:39:31Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMTIzMTI2",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T11:40:37Z",
          "updatedAt": "2021-02-18T11:40:37Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "This also changes the meaning completely. This sentence was supposed to say that if you instead just blindly block random QUIC packets without being flow-aware this is really bad.",
              "createdAt": "2021-02-18T11:40:37Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMTIzNTEz",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T11:41:10Z",
          "updatedAt": "2021-02-18T11:41:11Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "I think prevent fallback is more correct here.",
              "createdAt": "2021-02-18T11:41:11Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMTI0NzU1",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T11:42:50Z",
          "updatedAt": "2021-02-18T11:42:50Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nconnectivity breakage later, in case the connection ID changes.\r\n```",
              "createdAt": "2021-02-18T11:42:50Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0Nzc2NTMz",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "There's a lot here, and the tradeoffs are subtle and fairly scary in my opinion.  Some of this may be worth discussion at the meeting.",
          "createdAt": "2021-02-20T18:51:17Z",
          "updatedAt": "2021-02-20T19:22:02Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "This section is fairly long, but seems to mostly advise:\r\n\r\n\"In QUIC, Connection IDs can change during the connection, even if the 4-tuple does not change.  Therefore, don't rely on Connection ID, unless you're aware of how Connection IDs are used in the server infrastructure, for example as described in QUIC-LB\"\r\n\r\nWhat about saying something simple like that, rather than what we have here, which I'm having a very difficult time following.",
              "createdAt": "2021-02-20T18:59:13Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 60,
              "body": "There are a lot of server architectures which are not CDNs and may want to use something like QUIC-LB.\r\n\r\n```suggestion\r\nIn the case of networking architectures including load\r\n```",
              "createdAt": "2021-02-20T19:01:40Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 19,
              "body": "I think the caution against using Connection ID needs to be a lot stronger.  Things will break, users will notice.  I realize that implementations have to use this to enforce that, but I believe some already are.  See a comment below as well.",
              "createdAt": "2021-02-20T19:06:36Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 81,
              "body": "Policing has a slightly different meaning(token bucket policer) that's widely used, so can we find a different term in this context?\r\n",
              "createdAt": "2021-02-20T19:10:28Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 98,
              "body": "```suggestion\r\n(at least applications using well-known UDP ports). However, blocking a\r\nrandom fraction of QUIC packets across 4-tuples will allow many QUIC handshakes\r\n```",
              "createdAt": "2021-02-20T19:16:27Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 92,
              "body": "This is recommending something that relies on the 4-tuple, but particularly if there's another NAT involved, the 4-tuple may not be stable.  So this puts connections in a situation where the handshake completes, they use the connection for a bit, a NAT rebind occurs, and then the connection is blackholed.\r\n\r\nThere are defenses against this problem, but this seems like a fairly dangerous recommendation.",
              "createdAt": "2021-02-20T19:19:07Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 87,
              "body": "If the port really is only used for QUIC, then we're in fairly good shape, it's if the port is used by QUIC, but isn't QUIC traffic.",
              "createdAt": "2021-02-20T19:20:59Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1ODM0NTMz",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T22:14:12Z",
          "updatedAt": "2021-02-22T22:29:01Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "This is not how QUIC-LB works; the servers do not inform the LB about new connection IDs. In fact, there is no way in QUIC-LB to match two connection IDs to the same connection, merely to the same server.",
              "createdAt": "2021-02-22T22:14:12Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 27,
              "body": "I don't think this section captures the purpose of the text it's replacing.\r\n\r\n1.  Whether or not I have QUIC-LB, if there's some part of the infrastructure that wants stable 4tuples,  I could try to use the CID to catch NAT rebindings and just rewrite the source address to mask the change from the infrastructure. Yes, this will break if CIDs change; but even if the CID stays the same it will also break the security mechanisms that protect attacks related to NAT rebinding. This is the point of the original text.\r\n\r\n2. Whether or not I have QUIC-LB, if the CID and 4tuple change there is no way to maintain the original source and IP port for the connection.",
              "createdAt": "2021-02-22T22:28:57Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2MTc3NTY3",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T10:16:29Z",
          "updatedAt": "2021-02-23T10:16:30Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "Blocking?",
              "createdAt": "2021-02-23T10:16:30Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2MTg0NDgx",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T10:24:45Z",
          "updatedAt": "2021-02-23T10:24:45Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nrequire servers cooperate with the in-network device about the use of connection IDs,\r\n```\r\n\r\nIs this okay @martinduke ?",
              "createdAt": "2021-02-23T10:24:45Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2MTg4NjQ5",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T10:29:44Z",
          "updatedAt": "2021-02-23T10:29:44Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Regarding your point 1: I think this is covered by \r\n\"this approach is not recommended to be used with NAT functions, as hiding address\r\n changes from a server prevents the server from validating new addresses,\r\n which would facilitate amplification attacks\"\r\nWhat's missing?\r\n\r\nRegarding you point 2, I would think it is also possible to use similar mechanisms as described in the LB doc to not only encode with server but also the actual connection, no?",
              "createdAt": "2021-02-23T10:29:44Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2MTg4OTYx",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T10:30:08Z",
          "updatedAt": "2021-02-23T10:30:09Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Or should we keep the original text and remove the reference to the LB doc?",
              "createdAt": "2021-02-23T10:30:09Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2MTk0NTky",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T10:37:05Z",
          "updatedAt": "2021-02-23T10:37:06Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "This is the text from the other rewrite attempt:\r\n\r\n```\r\nConcealing client address changes in order to simplify operational routing\r\n issues will mask important signals that drive security mechanisms, and\r\n therefore opens QUIC up to various attacks.\r\n\r\nWhile QUIC's migration capability makes it possible for an server to survive\r\n address changes, this does not work if the routers or switches in the server\r\n infrastructure rely on address-port 4-tuple as a NAT rebinding or address\r\n migration will cause packets to be delivered to the wrong server. {{QUIC_LB}}\r\n addresses this problem proposing a QUIC extension to allow server-load balancer\r\n coordination to routable CIDs.\r\n\r\nAn alternative, potentially simpler approach would seem to be the use of NAT\r\n in front of such an infrastructure setup. However, hiding information about the\r\n change of the IP address or port conceals important, and security relevant\r\n information from QUIC endpoints, and as such would facilitate amplification\r\n attacks (see section 9 of {{QUIC-TRANSPORT}}).\r\n\r\n An NAT that bleaches peer address changes, hinders the other end\r\n to detect and mitigate these attacks and verify connectivity to the\r\n new address based on QUIC PATH_CHALLENGE and PATH_RESPONSE frames.\r\n```\r\n\r\nOr is this a better starting point?",
              "createdAt": "2021-02-23T10:37:06Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2NzE1OTk0",
          "commit": {
            "abbreviatedOid": "668ee0c"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T19:26:15Z",
          "updatedAt": "2021-02-23T19:26:16Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I like the other rewrite text better, yes.\r\n\r\nOn point 1: what I'm saying is that QUIC-LB doesn't enter into it.\r\n\r\nOn point 2: yes, that is theoretically possible. However, I don't want to suggest in any way that we make CIDs absolutely linkable. Exposing the server mapping is bad enough!",
              "createdAt": "2021-02-23T19:26:15Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NDQwNzU2",
          "commit": {
            "abbreviatedOid": "294ebd1"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-05T17:22:20Z",
          "updatedAt": "2021-03-05T17:22:20Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "Yes that's what the text is trying to say.",
              "createdAt": "2021-03-05T17:22:20Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NDQxMzE2",
          "commit": {
            "abbreviatedOid": "294ebd1"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-05T17:23:02Z",
          "updatedAt": "2021-03-05T17:23:03Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "I only copied this section to a different position in the draft. Can you please add a separate issue for this.",
              "createdAt": "2021-03-05T17:23:02Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NDQzNTA0",
          "commit": {
            "abbreviatedOid": "9507a73"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-05T17:25:43Z",
          "updatedAt": "2021-03-05T17:25:43Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Can you open a separate issue for this and propose some text (actually in the issue for now maybe, until this PR is merged) as this PR is only moving but not changing this part of the text.",
              "createdAt": "2021-03-05T17:25:43Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NDQ0MDI0",
          "commit": {
            "abbreviatedOid": "9507a73"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-05T17:26:20Z",
          "updatedAt": "2021-03-05T17:26:20Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "or just filtering?",
              "createdAt": "2021-03-05T17:26:20Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NDQ1MzM3",
          "commit": {
            "abbreviatedOid": "9507a73"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-05T17:27:50Z",
          "updatedAt": "2021-03-05T17:27:50Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "Maybe this and the previous section should be merged. But let me merge in the PR first and then do another PR if needed.",
              "createdAt": "2021-03-05T17:27:50Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NDQ2MzM3",
          "commit": {
            "abbreviatedOid": "9507a73"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-05T17:29:02Z",
          "updatedAt": "2021-03-05T17:29:02Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "Also I also musst copied this text to a different place in the draft. Can you maybe open a separate issue for this.",
              "createdAt": "2021-03-05T17:29:02Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1ODk5NTE0",
          "commit": {
            "abbreviatedOid": "ef1fa1e"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Getting better.  Though this PR is now at the point that I can't follow all the different pieces.",
          "createdAt": "2021-03-07T23:48:54Z",
          "updatedAt": "2021-03-07T23:55:41Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nas such opens QUIC up to various attacks.\r\n```",
              "createdAt": "2021-03-07T23:48:54Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 40,
              "body": "```suggestion\r\ninfrastructure route using the address-port 4-tuple. If infrastructure routes on\r\naddresses only, NAT rebinding or address\r\nmigration will cause packets to be delivered to the wrong server. {{QUIC_LB}}\r\n```",
              "createdAt": "2021-03-07T23:50:26Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nApplying address translation at a middlebox to maintain a stable\r\naddress-port mapping for flows based on connection ID might seem\r\nlike a solution to this problem. However, hiding information about the\r\n```",
              "createdAt": "2021-03-07T23:52:35Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nchange of the IP address or port conceals important and security-relevant\r\n```",
              "createdAt": "2021-03-07T23:52:42Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nattacks (see section 9 of {{QUIC-TRANSPORT}}). An NAT function that hides\r\n```",
              "createdAt": "2021-03-07T23:52:57Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 49,
              "body": "```suggestion\r\npeer address changes prevents the other end from\r\n```",
              "createdAt": "2021-03-07T23:53:13Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 50,
              "body": "```suggestion\r\ndetecting and mitigating attacks as the endpoint cannot verify connectivity to the\r\n```",
              "createdAt": "2021-03-07T23:54:06Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nnew address using QUIC PATH_CHALLENGE and PATH_RESPONSE frames.\r\n```",
              "createdAt": "2021-03-07T23:54:20Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0NTQ3MDcx",
          "commit": {
            "abbreviatedOid": "f8d3dae"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-17T16:39:34Z",
          "updatedAt": "2021-03-17T16:39:34Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\ndescribes a way to addresses this problem by coordinating the selection and\r\n```",
              "createdAt": "2021-03-17T16:39:34Z",
              "updatedAt": "2021-03-17T16:41:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 273,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc1NjI2Mjc4",
      "title": "Text on datagrams",
      "url": "https://github.com/quicwg/ops-drafts/pull/273",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "meeting-agenda",
        "ready-to-merge"
      ],
      "body": "resolves #269 ",
      "createdAt": "2021-02-18T11:57:56Z",
      "updatedAt": "2021-03-17T16:34:26Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-32",
      "headRefOid": "cc6dd84000087b1eab642718886bcd54f286ec03",
      "closedAt": "2021-03-17T16:34:23Z",
      "mergedAt": "2021-03-17T16:34:23Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "eed9093b12b8c1dd82f6846ec1927d6eeb27106b"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I updated the text of the second paragraph. If people could have another look that would be welcome. But I believe we are ready to merge (after the meeting).",
          "createdAt": "2021-03-04T14:33:56Z",
          "updatedAt": "2021-03-04T14:33:56Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0Nzc4OTA5",
          "commit": {
            "abbreviatedOid": "0672481"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-20T19:26:06Z",
          "updatedAt": "2021-02-20T19:31:51Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "What does \"Other than with the use of UDP only, the datagram service in QUIC is congestion-controlled,\" mean?",
              "createdAt": "2021-02-20T19:26:07Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            },
            {
              "originalPosition": 11,
              "body": "I'd move this last sentence into the next paragraph, because lack of flow control is just another way in which Datagrams are not reliable. ",
              "createdAt": "2021-02-20T19:28:11Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nThe reliable transmission service of QUIC provides a stream-based\r\ninterface to send and receive data over multiple QUIC streams.\r\n```",
              "createdAt": "2021-02-20T19:29:25Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nThe datagram service, however, provides a message-based interface,\r\n```\r\n\r\nUnless there's a reason to use usually and you're going to explain what happens when that's not the case, I think it's clearer without.",
              "createdAt": "2021-02-20T19:30:21Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nApplication layer framing can exist on top to recognise messages boundaries\r\nas well as the order of received message chunks if needed.\r\n```",
              "createdAt": "2021-02-20T19:31:44Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0OTEyMzAw",
          "commit": {
            "abbreviatedOid": "0672481"
          },
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T01:28:25Z",
          "updatedAt": "2021-02-22T01:28:25Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "This probably would be cleared if it were phrased as being about unreliable datagrams, not UDP. Tunneling UDP is just one way to use datagram frames. ",
              "createdAt": "2021-02-22T01:28:25Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1NjgxODc3",
          "commit": {
            "abbreviatedOid": "0672481"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2021-02-22T18:58:35Z",
          "updatedAt": "2021-02-22T18:58:55Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I would rephrase this as \"Unlike operating directly over UDP, an applications that uses the QUIC datagram service need not provide its own congestion control, per {{?RFC8085}}, as QUIC datagrams are congestion controlled.\"",
              "createdAt": "2021-02-22T18:58:35Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2MDkzNTA5",
          "commit": {
            "abbreviatedOid": "0672481"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T08:35:12Z",
          "updatedAt": "2021-02-23T08:35:12Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nand receiving unreliable datagrams over QUIC. Unlike operating directly over UDP,\r\napplications that use the QUIC datagram service do not need to implement their own\r\ncongestion control, per {{?RFC8085}}, as QUIC datagrams are congestion controlled.\r\n```",
              "createdAt": "2021-02-23T08:35:12Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2MDk0NDYw",
          "commit": {
            "abbreviatedOid": "0672481"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T08:36:34Z",
          "updatedAt": "2021-02-23T08:36:34Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2021-02-23T08:36:34Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2MDk2MjI4",
          "commit": {
            "abbreviatedOid": "0672481"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T08:38:54Z",
          "updatedAt": "2021-02-23T08:38:55Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Usually is there because you can also implement a message-based interface for streams (see taps) and there is nothing in the protocol spec that says anything about the interface.",
              "createdAt": "2021-02-23T08:38:54Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2NDgxNDQ5",
          "commit": {
            "abbreviatedOid": "0672481"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T15:42:43Z",
          "updatedAt": "2021-02-23T15:42:43Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Yes, thanks. That seems clearer to me, except s/its/their",
              "createdAt": "2021-02-23T15:42:43Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NDcxNTI3",
          "commit": {
            "abbreviatedOid": "72768bc"
          },
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2021-03-05T18:00:31Z",
          "updatedAt": "2021-03-05T18:03:09Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n{{?I-D.draft-ietf-quic-datagram}} specifies a QUIC extension to enable sending\r\n```",
              "createdAt": "2021-03-05T18:00:31Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nQUIC datagrams are not flow-controlled, and as such data chunks may be dropped\r\n```",
              "createdAt": "2021-03-05T18:00:53Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\ninterface. If needed, an application layer framing can be used on top to\r\n```",
              "createdAt": "2021-03-05T18:01:41Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            },
            {
              "originalPosition": 17,
              "body": "I think it's more about demultiplexing than ordering, since ordering is implicit in the QUIC packet numbers.\r\n\r\n```suggestion\r\nallow separate flows of unreliable datagrams to be multiplexed on one QUIC connection.\r\n```",
              "createdAt": "2021-03-05T18:03:02Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NTU3NDk4",
          "commit": {
            "abbreviatedOid": "6f8062d"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-05T20:00:20Z",
          "updatedAt": "2021-03-05T20:00:21Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nallow separate flows of unreliable datagrams to be multiplexed on one QUIC\r\nconnection.\r\n```",
              "createdAt": "2021-03-05T20:00:20Z",
              "updatedAt": "2021-03-05T20:00:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NzMzNDk3",
          "commit": {
            "abbreviatedOid": "cc6dd84"
          },
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-06T06:25:13Z",
          "updatedAt": "2021-03-06T06:25:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 275,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc2MTA3MDkw",
      "title": "Simplify",
      "url": "https://github.com/quicwg/ops-drafts/pull/275",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #218.\r\n\r\nThanks to Mike for noticing this.",
      "createdAt": "2021-02-19T01:22:00Z",
      "updatedAt": "2021-02-22T11:02:47Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1a5b60f913adad4ea0de8a107c12a4fb8da5e8b0",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "error-code-spaces",
      "headRefOid": "aa1689fd090fd1bbf76995b620186cceadac7a6d",
      "closedAt": "2021-02-22T11:02:47Z",
      "mergedAt": "2021-02-22T11:02:47Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "56a7ab33654ca555fa1bc00b5cc1a245caeffc58"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzgxOTY3",
          "commit": {
            "abbreviatedOid": "aa1689f"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-20T20:10:48Z",
          "updatedAt": "2021-02-20T20:10:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 277,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc3NTEyODAx",
      "title": "Wording proposal by Gorry on exposing numbers of streams and such",
      "url": "https://github.com/quicwg/ops-drafts/pull/277",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "editorial",
        "ready-to-merge"
      ],
      "body": "",
      "createdAt": "2021-02-22T10:11:08Z",
      "updatedAt": "2021-04-19T08:35:13Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "dd7f59476497d7b86ac0961254f77f8d1047d52d",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-33",
      "headRefOid": "863c211ded6892813785561c90f0dd24cb30950b",
      "closedAt": "2021-03-17T16:49:56Z",
      "mergedAt": "2021-03-17T16:49:56Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "c3b9219f43d915f780e8b9543cacf9a235afef1b"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The proposed wording makes sentence stronger, more list a SHOULD requirement. Therefore we wanted to check with others before we merge.",
          "createdAt": "2021-02-22T11:20:00Z",
          "updatedAt": "2021-02-22T11:20:00Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1NzYwNTMx",
          "commit": {
            "abbreviatedOid": "43dbadf"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Seems simpler and clearer. I don't see this as normative.",
          "createdAt": "2021-02-22T20:38:01Z",
          "updatedAt": "2021-02-22T20:38:56Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "S/utilise/use",
              "createdAt": "2021-02-22T20:38:01Z",
              "updatedAt": "2021-03-17T16:47:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0NTUyMDI5",
          "commit": {
            "abbreviatedOid": "43dbadf"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-17T16:44:02Z",
          "updatedAt": "2021-03-17T16:44:03Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nthe receiver. Therefore, an application can use the maximum number of\r\n```",
              "createdAt": "2021-03-17T16:44:03Z",
              "updatedAt": "2021-03-17T16:47:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 279,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc3NTQ2NDMz",
      "title": "Remove line about use of 0xff",
      "url": "https://github.com/quicwg/ops-drafts/pull/279",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "meeting-agenda",
        "ready-to-merge"
      ],
      "body": "proposed by @martinthomson",
      "createdAt": "2021-02-22T11:00:55Z",
      "updatedAt": "2021-03-17T16:43:22Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "914380dff2afbba0654697f600eb058204117d23",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-14",
      "headRefOid": "ec6e2986d4612f0095a089ec6ecbcdf98277ac95",
      "closedAt": "2021-03-17T16:43:20Z",
      "mergedAt": "2021-03-17T16:43:20Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "dd7f59476497d7b86ac0961254f77f8d1047d52d"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Plan is to update the PR to point to the IANA registry instead.",
          "createdAt": "2021-03-10T13:52:58Z",
          "updatedAt": "2021-03-10T13:52:58Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Added a ref to the iana registration sec in the transport draft. Should be ready to go now!",
          "createdAt": "2021-03-10T15:25:09Z",
          "updatedAt": "2021-03-10T15:25:09Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1NzU5ODA0",
          "commit": {
            "abbreviatedOid": "8dc18cb"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-22T20:37:03Z",
          "updatedAt": "2021-02-22T20:37:03Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4ODM4ODEw",
          "commit": {
            "abbreviatedOid": "8dc18cb"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-10T15:24:06Z",
          "updatedAt": "2021-03-10T15:24:06Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n  experiments, future standards, and greasing. All deployed version are\r\n  maintained in an IANA registry (see {{Section 22.2 of QUIC-TRANSPORT}}).\r\n```",
              "createdAt": "2021-03-10T15:24:06Z",
              "updatedAt": "2021-03-17T16:35:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0NTQxOTI3",
          "commit": {
            "abbreviatedOid": "4f6fc44"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-17T16:34:55Z",
          "updatedAt": "2021-03-17T16:34:55Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n  experiments, future standards, and greasing. All deployed versions are\r\n```",
              "createdAt": "2021-03-17T16:34:55Z",
              "updatedAt": "2021-03-17T16:35:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 281,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc4MjU3NTc2",
      "title": "Applicability: Contributors and acks",
      "url": "https://github.com/quicwg/ops-drafts/pull/281",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "",
      "createdAt": "2021-02-23T08:28:43Z",
      "updatedAt": "2021-03-17T16:51:15Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "cee71e08bbdd6188efce99db675cbf2c2b84c059",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-15",
      "headRefOid": "4ea79d6c043987fe99d85e276b6598dc3609f49b",
      "closedAt": "2021-03-17T16:51:13Z",
      "mergedAt": "2021-03-17T16:51:13Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "f80e76cfdfc043507f1937c50464a78c6613028e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 282,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc4MjU5NTg5",
      "title": "Manageability: Contributor and acks",
      "url": "https://github.com/quicwg/ops-drafts/pull/282",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "",
      "createdAt": "2021-02-23T08:32:10Z",
      "updatedAt": "2021-03-17T16:50:13Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "cee71e08bbdd6188efce99db675cbf2c2b84c059",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-16",
      "headRefOid": "3623ca373c380fa222d8cbf0fe08bfdea6631ce4",
      "closedAt": "2021-03-17T16:50:10Z",
      "mergedAt": "2021-03-17T16:50:10Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "968b6067664276f5d68914907faf0c6a0b029472"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 284,
      "id": "MDExOlB1bGxSZXF1ZXN0NTgzMTU5MTc3",
      "title": "Manageability editorial pass",
      "url": "https://github.com/quicwg/ops-drafts/pull/284",
      "state": "MERGED",
      "author": "MikeBishop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "Mostly nits, some text about versions.  Some reflow, and fixed up section references to other documents.  If there's anything you think needs to be lifted out to a separate PR/issue, I'm happy to do that.",
      "createdAt": "2021-03-02T16:17:54Z",
      "updatedAt": "2021-03-17T17:32:16Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5a9bb75f0c091262a5e24db92465f5cbbd596897",
      "headRepository": "MikeBishop/ops-drafts",
      "headRefName": "manage/mbishop_nits",
      "headRefOid": "8256b63f518c1293f08a25d73b6b87f6854a5285",
      "closedAt": "2021-03-17T17:32:16Z",
      "mergedAt": "2021-03-17T17:32:16Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "e453f61d6ad072e12a6e1cc6f6c4c62e654e7d8b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0NTgwNjU4",
          "commit": {
            "abbreviatedOid": "156af49"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-17T17:09:47Z",
          "updatedAt": "2021-03-17T17:09:47Z",
          "comments": [
            {
              "originalPosition": 264,
              "body": "```suggestion\r\nsupplied via encrypted frames (see {{Section 5.1 of QUIC-TRANSPORT}}). Therefore,\r\n```",
              "createdAt": "2021-03-17T17:09:47Z",
              "updatedAt": "2021-03-17T17:30:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0NTgxNzM3",
          "commit": {
            "abbreviatedOid": "156af49"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-17T17:10:50Z",
          "updatedAt": "2021-03-17T17:10:51Z",
          "comments": [
            {
              "originalPosition": 289,
              "body": "```suggestion\r\nThe packet number field is always present in the QUIC packet header in version\r\n1; however, it is always encrypted. The encryption key for packet number\r\n```",
              "createdAt": "2021-03-17T17:10:50Z",
              "updatedAt": "2021-03-17T17:30:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0NTk3MDY5",
          "commit": {
            "abbreviatedOid": "c3a546e"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-17T17:25:25Z",
          "updatedAt": "2021-03-17T17:25:26Z",
          "comments": [
            {
              "originalPosition": 669,
              "body": "```suggestion\r\nendpoint about the best peer address for the connection (see section 9 of\r\n{{QUIC-TRANSPORT}}). The QUIC PATH_CHALLENGE and PATH_RESPONSE frames are\r\n```",
              "createdAt": "2021-03-17T17:25:25Z",
              "updatedAt": "2021-03-17T17:30:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0NTk5MDkw",
          "commit": {
            "abbreviatedOid": "3bfc335"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-17T17:27:17Z",
          "updatedAt": "2021-03-17T17:27:18Z",
          "comments": [
            {
              "originalPosition": 654,
              "body": "```suggestion\r\nacross all QUIC versions {{QUIC-INVARIANTS}}, see {{rebinding}}. This feature\r\n```",
              "createdAt": "2021-03-17T17:27:18Z",
              "updatedAt": "2021-03-17T17:30:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0NTk5NTE4",
          "commit": {
            "abbreviatedOid": "3bfc335"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-17T17:27:41Z",
          "updatedAt": "2021-03-17T17:27:42Z",
          "comments": [
            {
              "originalPosition": 658,
              "body": "```suggestion\r\ncause connection failure when endpoints change Connection ID, and disable\r\n```",
              "createdAt": "2021-03-17T17:27:41Z",
              "updatedAt": "2021-03-17T17:30:31Z"
            }
          ]
        }
      ]
    },
    {
      "number": 285,
      "id": "MDExOlB1bGxSZXF1ZXN0NTg0ODg0Nzk2",
      "title": "CID must be present and is directional",
      "url": "https://github.com/quicwg/ops-drafts/pull/285",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "ready-to-merge"
      ],
      "body": "fixes #280",
      "createdAt": "2021-03-04T15:13:05Z",
      "updatedAt": "2021-03-17T16:46:34Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "cee71e08bbdd6188efce99db675cbf2c2b84c059",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-17",
      "headRefOid": "8ec03cc9f1b0f9dbc17e2f8fc57c1e670834c8c0",
      "closedAt": "2021-03-17T16:46:29Z",
      "mergedAt": "2021-03-17T16:46:29Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "f88f644089cf6d6c9cf5fdcde5e165b99e3762b7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1OTAwMjk2",
          "commit": {
            "abbreviatedOid": "effda7d"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-07T23:56:39Z",
          "updatedAt": "2021-03-07T23:56:44Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nconnection ID in the same direction between client and server and sharing one\r\nendpoint address (IP address and port) with the known flow.\r\n```\r\n\r\nThis is a bit hard to follow without the extra word.",
              "createdAt": "2021-03-07T23:56:39Z",
              "updatedAt": "2021-03-08T10:37:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 287,
      "id": "MDExOlB1bGxSZXF1ZXN0NTg4NDkzNzg5",
      "title": "Reword TFO/0-rtt sentence.",
      "url": "https://github.com/quicwg/ops-drafts/pull/287",
      "state": "MERGED",
      "author": "mjoras",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "editorial"
      ],
      "body": "I don't think this sentence was accurate. TFO isn't analogous to 0-RTT session resumption, but it's needed to achieve the same application effect.",
      "createdAt": "2021-03-09T19:13:46Z",
      "updatedAt": "2021-03-17T16:59:33Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "cee71e08bbdd6188efce99db675cbf2c2b84c059",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mjoras-0rtt-tfo",
      "headRefOid": "85db0b5891aaa4e081ec2c13d9816f7b00462d3a",
      "closedAt": "2021-03-17T16:59:30Z",
      "mergedAt": "2021-03-17T16:59:30Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "d320e48854704a24e883022ae79bbf3489bdd6de"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "maybe analogous wasn't the right term but I'm also not sure about the word \"true\" here... ",
          "createdAt": "2021-03-09T20:08:27Z",
          "updatedAt": "2021-03-09T20:08:27Z"
        },
        {
          "author": "mjoras",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@mirjak \"true\" meaning \"actual\", i.e. you can resume a session without a round trip. We could specify that further but it probably has to be more wordy.",
          "createdAt": "2021-03-09T20:20:41Z",
          "updatedAt": "2021-03-09T20:20:41Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3ODI0MTg1",
          "commit": {
            "abbreviatedOid": "7bd4eb9"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-09T19:32:45Z",
          "updatedAt": "2021-03-09T19:33:31Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nend-to-end, it is limited to a single packet of TLS handshake and application data, unlike QUIC 0-RTT.\r\n```",
              "createdAt": "2021-03-09T19:32:46Z",
              "updatedAt": "2021-03-17T16:55:55Z"
            },
            {
              "originalPosition": 13,
              "body": "I think it's worth clarifying that it's not one packet of application data.",
              "createdAt": "2021-03-09T19:33:23Z",
              "updatedAt": "2021-03-17T16:55:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4NTkyNjM3",
          "commit": {
            "abbreviatedOid": "7bd4eb9"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-10T11:11:41Z",
          "updatedAt": "2021-03-10T11:11:42Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nenables sending of payload data together with the first control packet of a new\r\nconnection as also provided by 0-RTT session resumption in QUIC. Note that there is\r\n```\r\n\r\nMaybe a few more words are better?",
              "createdAt": "2021-03-10T11:11:42Z",
              "updatedAt": "2021-03-17T16:55:55Z"
            }
          ]
        }
      ]
    },
    {
      "number": 288,
      "id": "MDExOlB1bGxSZXF1ZXN0NTg4NTA5NzY1",
      "title": "Connections aren't reset, they are closed.",
      "url": "https://github.com/quicwg/ops-drafts/pull/288",
      "state": "MERGED",
      "author": "mjoras",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "editorial"
      ],
      "body": "Reset is a directional stream semantic, not a connection one.",
      "createdAt": "2021-03-09T19:27:33Z",
      "updatedAt": "2021-03-17T16:59:44Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "cee71e08bbdd6188efce99db675cbf2c2b84c059",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mjoras-conn-reset",
      "headRefOid": "2e3d768c2dfd536704203f9b682f7ee1bfc23b30",
      "closedAt": "2021-03-17T16:59:41Z",
      "mergedAt": "2021-03-17T16:59:41Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "23d22e4e6b6ee533fd675e2f7a382f0a731956e7"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Actually the idea here was not necessarily talk about the semantics of how a connection is closed. So maybe using something else like \"abort\" would avoid any confusion here...?\r\n",
          "createdAt": "2021-03-09T20:11:53Z",
          "updatedAt": "2021-03-09T20:11:53Z"
        },
        {
          "author": "mjoras",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Oh, I see. Yeah maybe abort is better. For me reading this \"reset\" made me think of TCP connection and or QUIC stream semantics, which is probably not the intention.",
          "createdAt": "2021-03-09T20:19:36Z",
          "updatedAt": "2021-03-09T20:19:36Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0NTAyMDI0",
          "commit": {
            "abbreviatedOid": "99d8df6"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-17T16:00:18Z",
          "updatedAt": "2021-03-17T16:00:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nthe higher layer, which can eventually result in aborting of the QUIC connection.\r\n```",
              "createdAt": "2021-03-17T16:00:18Z",
              "updatedAt": "2021-03-17T16:54:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0NTYzODk2",
          "commit": {
            "abbreviatedOid": "99d8df6"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-17T16:54:40Z",
          "updatedAt": "2021-03-17T16:54:40Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nthe higher layer, which can eventually terminate the QUIC connection.\r\n```",
              "createdAt": "2021-03-17T16:54:40Z",
              "updatedAt": "2021-03-17T16:54:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 291,
      "id": "MDExOlB1bGxSZXF1ZXN0NTg5NzM2MTQ0",
      "title": "Rewrite sentence about probes to prime cc",
      "url": "https://github.com/quicwg/ops-drafts/pull/291",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses #197",
      "createdAt": "2021-03-10T14:57:06Z",
      "updatedAt": "2021-03-17T17:02:51Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "cee71e08bbdd6188efce99db675cbf2c2b84c059",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-18",
      "headRefOid": "967ddfe02297fdb28a53e4f26c0f0ab03670d3a5",
      "closedAt": "2021-03-17T17:02:48Z",
      "mergedAt": "2021-03-17T17:02:48Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "5a9bb75f0c091262a5e24db92465f5cbbd596897"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4ODE5NjE1",
          "commit": {
            "abbreviatedOid": "d904ccd"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-10T15:07:39Z",
          "updatedAt": "2021-03-10T15:07:39Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\ncan be used together with padding frames in which case they account for\r\n```",
              "createdAt": "2021-03-10T15:07:39Z",
              "updatedAt": "2021-03-17T16:59:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4ODM4OTY5",
          "commit": {
            "abbreviatedOid": "75569b0"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Phrasing suggestion.",
          "createdAt": "2021-03-10T15:24:14Z",
          "updatedAt": "2021-03-10T15:24:24Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nfor the switching decision. Probing packets cannot carry application data but\r\nendpoints can use information about their receipt as input to congestion\r\ncontrol for that path. Applications could use information learned from probing\r\nto inform a decisions to switch paths.\r\n```",
              "createdAt": "2021-03-10T15:24:14Z",
              "updatedAt": "2021-03-17T16:59:16Z"
            }
          ]
        }
      ]
    },
    {
      "number": 298,
      "id": "MDExOlB1bGxSZXF1ZXN0NTk5Mzk5NjEz",
      "title": "Split Connection Closure discussion into two parts",
      "url": "https://github.com/quicwg/ops-drafts/pull/298",
      "state": "MERGED",
      "author": "LPardue",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "-applicability",
        "check-on-list"
      ],
      "body": "Fixes #297 and #175.\r\n\r\nThis ended up much larger than I anticiated but I found the old Connection Closure text quite hard to modify in a way that let me frame the graceful close additions. \r\n\r\nI think this is a net positive structural move, even if we might need to bash the section ordering and contained text.",
      "createdAt": "2021-03-24T05:34:43Z",
      "updatedAt": "2021-04-14T12:15:10Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e453f61d6ad072e12a6e1cc6f6c4c62e654e7d8b",
      "headRepository": "LPardue/ops-drafts",
      "headRefName": "297-error-codez",
      "headRefOid": "b591023dc49f716aaed81fda3dd550868831bc34",
      "closedAt": "2021-04-14T12:15:10Z",
      "mergedAt": "2021-04-14T12:15:10Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "21483d9f6d5570527c400b9ac7763c2a070d7b62"
      },
      "comments": [
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "Many thanks for the editorial feedback. I believe this is now addresses it all. I'll defer to @mirjak to merge this one, I strongly suggest the \"squash and merge button\" :)",
          "createdAt": "2021-04-12T02:48:11Z",
          "updatedAt": "2021-04-12T02:48:11Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMzM2NDcz",
          "commit": {
            "abbreviatedOid": "cd55a13"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "This looked good up until the point where it started to talk about stream limit management.",
          "createdAt": "2021-03-25T00:36:47Z",
          "updatedAt": "2021-03-25T00:46:00Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nQUIC recommends that endpoints that detect errors signal the occurance to\r\n```",
              "createdAt": "2021-03-25T00:36:47Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nQUIC defines an error code space that is used for error handling at the transport layer. QUIC\r\n```",
              "createdAt": "2021-03-25T00:37:43Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nis permitted including generic ones.\r\n\r\nApplications using QUIC can define an error\r\n```",
              "createdAt": "2021-03-25T00:37:51Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nexample, {{Section 8.1 of QUIC-HTTP}}). The values in an application error code\r\nspace can be reused across connection-level and stream-level errors.\r\n```\r\n\r\nThis is not completely necessary, though this is what HTTP does.  They could be separate spaces if that was what people wanted.  That is, if 2^62 error codes is not enough, you can at least double the space.",
              "createdAt": "2021-03-25T00:39:03Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nbe zero length. Different types of CONNECTION_CLOSE frame are used to\r\nsignal transport and application errors.\r\n```",
              "createdAt": "2021-03-25T00:40:18Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 83,
              "body": "```suggestion\r\ntimeout values may free-up resources more quickly.\r\n```",
              "createdAt": "2021-03-25T00:41:11Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 102,
              "body": "This bit about streams completely surprised me.  It's now into flow control and maximum stream limits, which really don't belong here.  If you like the text, I would suggest finding it another home.\r\n\r\n",
              "createdAt": "2021-03-25T00:43:22Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 109,
              "body": "The text on graceful close should be its own paragraph.",
              "createdAt": "2021-03-25T00:43:43Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 113,
              "body": "This is a little odd.  I would phrase the last sentence here more along the lines of \"receiving a stateless reset is an indication of an unrecoverable error distinct from connection errors in that there is no application-layer information provided\"",
              "createdAt": "2021-03-25T00:45:22Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwODU1NDMy",
          "commit": {
            "abbreviatedOid": "cd55a13"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-25T08:51:58Z",
          "updatedAt": "2021-03-25T08:51:58Z",
          "comments": [
            {
              "originalPosition": 102,
              "body": "Yes, section 4 is on use of streams. Maybe we can just add another short subsection there to talk about the max stream limit.",
              "createdAt": "2021-03-25T08:51:58Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIxNTA3Mzk4",
          "commit": {
            "abbreviatedOid": "cd55a13"
          },
          "author": "MikeBishop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I like the general outline, but lots of editorial nits here.  Also, you're inconsistent on whether the \"l\" gets doubled in \"signaling/signalling\" and \"signaled/signalled.\"",
          "createdAt": "2021-03-25T19:32:51Z",
          "updatedAt": "2021-03-25T19:45:47Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Or perhaps \r\n```suggestion\r\nQUIC recommends that endpoints signal any detected errors to\r\n```\r\n...as both more concise and removes the mis-spelling of \"occurrence.\"",
              "createdAt": "2021-03-25T19:32:51Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nencourages endpoints to use the most specific code, although any applicable code\r\n```",
              "createdAt": "2021-03-25T19:37:17Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nis permitted, including generic ones.\r\n\r\nApplications using QUIC define an error\r\n```\r\nIt's not a \"can,\" since the spaces are distinct.  The application defines any semantics that might exist.",
              "createdAt": "2021-03-25T19:37:42Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 97,
              "body": "```suggestion\r\nwould allow to be opened using the MAX_STREAMS frame, but there is no mechanism\r\n```",
              "createdAt": "2021-03-25T19:42:23Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 101,
              "body": "```suggestion\r\n(see {{use-of-streams}}), abrupt closure of actively used streams may be\r\n```",
              "createdAt": "2021-03-25T19:42:44Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 105,
              "body": "```suggestion\r\nenacting an immediate close. Alternatively, a graceful close mechanism can be\r\n```",
              "createdAt": "2021-03-25T19:43:16Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 106,
              "body": "```suggestion\r\nused to communicate the intention to explicitly close the connection at some\r\n```",
              "createdAt": "2021-03-25T19:43:30Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 108,
              "body": "```suggestion\r\ntermination; applications using QUIC can define their own graceful termination\r\n```",
              "createdAt": "2021-03-25T19:43:51Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzNzQzOTIz",
          "commit": {
            "abbreviatedOid": "cd55a13"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-30T00:09:28Z",
          "updatedAt": "2021-03-30T00:09:28Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I like Mike's",
              "createdAt": "2021-03-30T00:09:28Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzNzUwNzU3",
          "commit": {
            "abbreviatedOid": "cd55a13"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-30T00:27:42Z",
          "updatedAt": "2021-03-30T00:27:43Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I think we actually need to go one step further. My original intent was to say \"applications can (and probably should define some codes\". But with the comments and suggestions in this PR, I think the clearer statement is more like\r\n\r\n> Applications using QUIC are responsible for defining the error codes used to signal connection-level or stream-level errors (see, for example, {{Section 8.1 of QUIC-HTTP}}). Error code values are independent from QUIC or other applications. Values can be shared between the error types.\r\n\r\n",
              "createdAt": "2021-03-30T00:27:42Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzNzUyMzY3",
          "commit": {
            "abbreviatedOid": "cd55a13"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-30T00:32:18Z",
          "updatedAt": "2021-03-30T00:32:19Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Agree, although this did kind of blindside me. I think QUIC transport's term \"application protocol error code space\" really reinforced my incorrect mental model.",
              "createdAt": "2021-03-30T00:32:18Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzNzczNDkw",
          "commit": {
            "abbreviatedOid": "cd55a13"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-30T01:33:54Z",
          "updatedAt": "2021-03-30T01:33:54Z",
          "comments": [
            {
              "originalPosition": 102,
              "body": "Will see what I can do. This text was really the main thing I was looking for in my issue #175 because shutdowns affect streams but QUIC doesn't talk about what termination of streams means for an app. I realise now that a subsection for stream limits and termination is probably useful, and then this part can cross-referencet to that as a \"global reset of all streams\" type thing",
              "createdAt": "2021-03-30T01:33:54Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI0NjUxMDI0",
          "commit": {
            "abbreviatedOid": "310a72d"
          },
          "author": "MikeBishop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-30T19:56:57Z",
          "updatedAt": "2021-03-30T19:56:57Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I'd be okay with that text.",
              "createdAt": "2021-03-30T19:56:57Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNDQxNDI1",
          "commit": {
            "abbreviatedOid": "535329c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T11:47:19Z",
          "updatedAt": "2021-04-12T11:47:20Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "I'd say you \"only\" should use application layer ping if you also need that information for the application layer logic itself. If you do application layer pings that just looks like payload traffic on the transport which means even if QUIC is configured to send keep-alives it will not send any because it never becomes idle. So not sure if we actually need to say anything about application layer pings here at all...?",
              "createdAt": "2021-04-12T11:47:19Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNDQyNjgw",
          "commit": {
            "abbreviatedOid": "535329c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T11:48:56Z",
          "updatedAt": "2021-04-12T11:48:57Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I think I miss some connection here: why should an endpoint ever wait until all streams are exhausted...?",
              "createdAt": "2021-04-12T11:48:56Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNDQyOTMx",
          "commit": {
            "abbreviatedOid": "535329c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T11:49:16Z",
          "updatedAt": "2021-04-12T11:49:16Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Do you mean graceful close at the application layer?",
              "createdAt": "2021-04-12T11:49:16Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNTYxODk4",
          "commit": {
            "abbreviatedOid": "535329c"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T13:51:22Z",
          "updatedAt": "2021-04-12T13:51:22Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "So imagine an HTTP/3 server that advertises that up to 10 bidirectional client streams streams can be created. The client has created 2 streams for requests,and the responses are large payloads. \r\n\r\nThe server gets scheduled for an upgrade and the operator wants to drain the connection gracefully. It is happy to let the large downloads conclude but it wants new requests to get routed to a new machine. Any form of connection closure at this stage risks affecting the in-flight response. Connection closure when all streams are exhausted is a much safer option.\r\n\r\nThe client believes it can create 8 more streams and it is sub optimal to create a new connection while the current one appears to be able to handle what is needed. It could also be bad to open concurrent connections opportunistically in anticipation of a server having to gracefully close. The server could just wait for the client to create those 8 streams and the instantly reject them with STOP_SENDING, RESET_STREAM, or an HTTP response. That's a very chatty process, and might delay the client from being able to fulfill its duties in a timely manner. \r\n\r\nHTTP/3 GOAWAY is a graceful close signal that permits server to tell the client that it won't accept new requests, but it doesn't interrupt active streams. A client that receives GOAWAY could decide to open a new connection in parallel to the active transfers completing.",
              "createdAt": "2021-04-12T13:51:22Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNTYzMjA5",
          "commit": {
            "abbreviatedOid": "535329c"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T13:52:26Z",
          "updatedAt": "2021-04-12T13:52:26Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "ah good spot. I lost the context when moving the text to this section, so let me make it clear again.",
              "createdAt": "2021-04-12T13:52:26Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzODg0MTIy",
          "commit": {
            "abbreviatedOid": "e94db47"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T19:16:56Z",
          "updatedAt": "2021-04-12T19:16:56Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I understand why you need/want GOAWAY at the application.I'm just think that waiting until stream are exhausted is never really an option because as soon as one stream is closed the client can immediately open another one. I think the two options you have is you either wait until the connection is done entirely, or you have an application layer mechanism that indicates that no new streams should be created.",
              "createdAt": "2021-04-12T19:16:56Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzODk3MzE4",
          "commit": {
            "abbreviatedOid": "e94db47"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T19:34:29Z",
          "updatedAt": "2021-04-12T19:34:29Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "The client can only open as many as MAX_STREAMs. So if a server wants to drain a connection without a GOWAY, it can stop granting stream credits (this is what I mean by exhaustion) and eventually the client will run out of things to do. From the other guidance in the spec, a client with nothing to do should eventually give up either via idle timeout or explicit close. \r\n",
              "createdAt": "2021-04-12T19:34:29Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzOTA3MDc3",
          "commit": {
            "abbreviatedOid": "e94db47"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T19:47:34Z",
          "updatedAt": "2021-04-12T19:47:35Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Okay, you are right. I was misremembering how MAX_STREAM works (would maybe make sense to add a sentence). So basically what you are saying is that if the server wants to close the connection but doesn't want to interrupt on-going activities, the only thing it can do is to not issue any new stream credits and wait until the client is done because it easier has nothing to send anymore or reaches the stream limit (if you don't have an graceful close on application level). I think this can be worded simpler than taking about \"exhausting streams\" :-)",
              "createdAt": "2021-04-12T19:47:34Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzOTM4OTI5",
          "commit": {
            "abbreviatedOid": "e94db47"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T20:29:42Z",
          "updatedAt": "2021-04-12T20:29:43Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I updated the text to address your comments,  PTAL",
              "createdAt": "2021-04-12T20:29:43Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzOTQyNDQ5",
          "commit": {
            "abbreviatedOid": "2531cee"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "proposed edits...",
          "createdAt": "2021-04-12T20:34:21Z",
          "updatedAt": "2021-04-12T20:41:48Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nis to not issue any new stream credits and wait for a peer to close the connection,\r\neither because there is no additional data to send or it is forced to close when it\r\nconsumed all of the advertised stream limit. However, the\r\n```\r\nGetting a bit lengthly; it's just a proposal...",
              "createdAt": "2021-04-12T20:34:21Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nsuch a mechanism using the GOWAWAY frame. In HTTP/3,\r\nwhen the GOAWAY frame is received by a client, it\r\n```",
              "createdAt": "2021-04-12T20:37:26Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nstops opening new streams even if the cumulative stream limit would allow.\r\nInstead the client would create a new connection on which to open further\r\nstreams.  Once all streams are closed on the old connection, it can be terminated\r\nsafely by a connection close or after expiration of the idle time-out\r\n(see also {{sec-termination}}).\r\n```",
              "createdAt": "2021-04-12T20:41:07Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            },
            {
              "originalPosition": 109,
              "body": "```suggestion\r\n# Connection Termination {#sec-termination}\r\n```",
              "createdAt": "2021-04-12T20:41:33Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzOTUyNjQ3",
          "commit": {
            "abbreviatedOid": "2531cee"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T20:47:56Z",
          "updatedAt": "2021-04-12T20:47:56Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "how about we put your suggested text about how endpoints might close when the limit is reached, then the sentence here can say \r\n\r\n\"An alternative to immediate close is to stop increasing the stream limit and wait for the peer to consume the remaining streams.\"\r\n\r\n?",
              "createdAt": "2021-04-12T20:47:56Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzOTU1NTYz",
          "commit": {
            "abbreviatedOid": "4cd14de"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T20:51:58Z",
          "updatedAt": "2021-04-12T20:51:58Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Sounds good!",
              "createdAt": "2021-04-12T20:51:58Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzOTgxODk4",
          "commit": {
            "abbreviatedOid": "5536c32"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T21:29:26Z",
          "updatedAt": "2021-04-12T21:29:27Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "That's already what this paragraph says IMO - if there is no useful application data to send, you can use QUIC keepalives or design an application mechanism. The important thing is that applications might have their own idle timeouts above QUIC (for example, time between HTTP requests, time between DATA frames) and its totally fine for applications to have those and design mechanisms that avoid them being triggered.",
              "createdAt": "2021-04-12T21:29:26Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzOTgyODE4",
          "commit": {
            "abbreviatedOid": "5536c32"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T21:30:52Z",
          "updatedAt": "2021-04-12T21:30:53Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nto stop the server to perform scheduled maintenance. Immediate connection close\r\n```",
              "createdAt": "2021-04-12T21:30:52Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzOTg0OTgz",
          "commit": {
            "abbreviatedOid": "5536c32"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T21:34:19Z",
          "updatedAt": "2021-04-12T21:34:19Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "Yes, the tiny different I would be looking for is to say it more like: if there is no useful application data to send, you should use QUIC keepalives or only design an application mechanism if that is needed on the app layer anyway for something else. Or to put if differently: please don't design your own app layer ping just because you can.",
              "createdAt": "2021-04-12T21:34:19Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzOTg4OTg3",
          "commit": {
            "abbreviatedOid": "5536c32"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T21:40:31Z",
          "updatedAt": "2021-04-12T21:40:31Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "okay this reference to the other section is now a bit redundant with the last sentence of the previous paragraph but might not hurt...",
              "createdAt": "2021-04-12T21:40:31Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzOTk4MzYz",
          "commit": {
            "abbreviatedOid": "5536c32"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T21:55:55Z",
          "updatedAt": "2021-04-12T21:55:56Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "I disagree. An application protocol designer probably wants wide interoperability and they could be sorely disappointed to find that QUIC implementations don't all  expose a keep alive mechanism. The best way to mitigate that risk is to pretend transport keepalives don't exist and to always have an application one. Doing it that way, means that all implementations of an application protocol can expect the same behaviour.\r\n\r\nThe text here attempts to tread a fine line by stating what is possible but without recommending any particular course of action.",
              "createdAt": "2021-04-12T21:55:56Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM0MDA0NzA0",
          "commit": {
            "abbreviatedOid": "bdd4e3a"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T22:06:47Z",
          "updatedAt": "2021-04-12T22:06:47Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "You are right on the point that this discussion actually doesn't belong in this document as that question is not QUIC specific. Therefore I would still advocate for removing the second to last sentence here about app layer pings because of course applications can always do that but is also not specific for applications that use QUIC.",
              "createdAt": "2021-04-12T22:06:47Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM0MDIwOTIy",
          "commit": {
            "abbreviatedOid": "bdd4e3a"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T22:38:51Z",
          "updatedAt": "2021-04-12T22:38:51Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "Hmm. So given that this doc is focussed on pointing out caveats for applications, how about we swizzle the text a bit to say \r\n\r\n\"Application data exchanged on streams or in datagrams defers the QUIC idle timeout. Applications that provide their own keep-alive mechanisms will therefore keep a QUIC connection alive. Applications that don't provide their own keep-alive might be able to use transport-layer mechanism (see {{Section 10.1.2 of QUIC}}, and {{resumption-v-keepalive}}). However, QUIC implementation interfaces for controlling such transport behaviour can vary, affecting the robustness of such designs.\r\n",
              "createdAt": "2021-04-12T22:38:51Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM0MDIzMzQy",
          "commit": {
            "abbreviatedOid": "bdd4e3a"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T22:44:27Z",
          "updatedAt": "2021-04-12T22:44:28Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "WFM. Thanks!",
              "createdAt": "2021-04-12T22:44:27Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NTQzNzc3",
          "commit": {
            "abbreviatedOid": "83dcfcc"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-14T12:12:09Z",
          "updatedAt": "2021-04-14T12:12:10Z",
          "comments": [
            {
              "originalPosition": 136,
              "body": "```suggestion\r\ntherefore keep a QUIC connection alive. Applications that do not provide their\r\nown keep-alive can use transport-layer mechanisms (see {{Section\r\n```",
              "createdAt": "2021-04-14T12:12:10Z",
              "updatedAt": "2021-04-14T12:13:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 299,
      "id": "MDExOlB1bGxSZXF1ZXN0NTk5NDI1ODA5",
      "title": "Try to make flow control consuming and processing crisper",
      "url": "https://github.com/quicwg/ops-drafts/pull/299",
      "state": "MERGED",
      "author": "LPardue",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "-applicability",
        "editorial"
      ],
      "body": "Fixes #193.\r\n\r\nThis mainly wiggles the existing text around and tries to fully qualify transport vs application to help explain the ways an implementation might do things, which is independent of how an application protocol might be designed (for example H3 doesn't require incremental processing but most people come to a realizatopm that it is the best way to do things).",
      "createdAt": "2021-03-24T06:36:17Z",
      "updatedAt": "2021-04-12T12:41:01Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e453f61d6ad072e12a6e1cc6f6c4c62e654e7d8b",
      "headRepository": "LPardue/ops-drafts",
      "headRefName": "193-flow-controlz",
      "headRefOid": "31e75aac1d1febecc4c0ad67fc657b78dc1c10d2",
      "closedAt": "2021-04-12T12:41:01Z",
      "mergedAt": "2021-04-12T12:41:01Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "90a0bf8319bdb3f9d2f3553d7e8ccb105c9af705"
      },
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The new text is good and clear, but it doesn't really explain that the when credit is released at the receiver, could we say a little more: it takes 1/2 RTT for cerdit to reach the sender, that causes new data to be released, for a large RTT, this means that credit has to be sufficient to avoid blocking or to be sent promptly, otherwise transfers will stall for periods of an RTT. (I know TCP does this stuff for the app and grows the window, but QUIC I suspect needs something to happen to release the credit). I know people closer to the Apps can write this sentence better than me; from my perspective I just see the effects when an app blocks or release credit in big chunks... over a large path RTT and the network performance suffers.",
          "createdAt": "2021-03-25T15:21:29Z",
          "updatedAt": "2021-03-25T15:21:29Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "Thanks Gorry. I think I agree. How about I tweak \"Timely updates can improve performance\" paragraph to say \"Timing of updates can affect performance\". I can add a mention that the extension of credits on the data recever side is enacted by emitting MAX_DATA/MAX_STREAM_DATA frames, which take at least a 1/2 RTT to reach the data sender side.\r\n\r\nI think the useful additional applicability statement to be made based on the above is that the data consumer read rate may be disjoint from the delivery rate and responsiveness of signalling channel back. For a highly asymmetric link, the download rate can be application-limited well below the theoretical bandwidth simply because an application is spending too much share of the time reading packets and not giving enough time to emit QUIC packets. \r\n\r\nDoes that sound ok, or am I missing your ask?",
          "createdAt": "2021-03-30T00:05:00Z",
          "updatedAt": "2021-03-30T00:05:00Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is definitely heading in the direction I was hoping, it helps avoid people developing on a LAN and then discovering the effects on other paths later. Please add something.",
          "createdAt": "2021-03-30T07:21:24Z",
          "updatedAt": "2021-03-30T07:21:24Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "body": "I've reworked the paragraph with my attempt to address @gorryfair's comment. I've introduced the terms uplink and downlink, which I'm not totally happy with. If someone has a better suggestion I'm all ears.\r\n",
          "createdAt": "2021-04-12T03:40:17Z",
          "updatedAt": "2021-04-12T03:40:17Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMzM5OTg0",
          "commit": {
            "abbreviatedOid": "7bad69e"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-25T00:46:53Z",
          "updatedAt": "2021-03-25T00:48:15Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Reorder these first two sentences:\r\n\r\n```suggestion\r\nTimely updates of transport flow control credit can improve performance.\r\nApplications that use QUIC often have a data consumer that reads data from\r\ntransport buffers. A common flow control implementation technique is for a QUIC\r\n```",
              "createdAt": "2021-03-25T00:46:53Z",
              "updatedAt": "2021-04-12T12:14:02Z"
            },
            {
              "originalPosition": 31,
              "body": "Incomplete sentence.",
              "createdAt": "2021-03-25T00:47:10Z",
              "updatedAt": "2021-04-12T12:14:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNTQzODY3",
          "commit": {
            "abbreviatedOid": "e4f96d0"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "This PR is fine, only that there is an incomplete sentence...",
          "createdAt": "2021-04-09T15:34:04Z",
          "updatedAt": "2021-04-09T15:34:04Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNDM0MzA3",
          "commit": {
            "abbreviatedOid": "01477cd"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T11:37:55Z",
          "updatedAt": "2021-04-12T11:37:55Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nis affected by the latency of the back channel from the receiver to the data sender.\r\nIf credit is not extended in a timely manner, the\r\n```\r\nIs this any better?",
              "createdAt": "2021-04-12T11:37:55Z",
              "updatedAt": "2021-04-12T12:14:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNDYxMzYx",
          "commit": {
            "abbreviatedOid": "a13e260"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T12:11:20Z",
          "updatedAt": "2021-04-12T12:11:21Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nsending application can be blocked, effectively throttling the sender.\r\n```",
              "createdAt": "2021-04-12T12:11:21Z",
              "updatedAt": "2021-04-12T12:14:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNDYzMTc4",
          "commit": {
            "abbreviatedOid": "883583b"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-12T12:13:27Z",
          "updatedAt": "2021-04-12T12:13:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 300,
      "id": "MDExOlB1bGxSZXF1ZXN0NTk5NjgzMTMx",
      "title": "Rewrite Stateful Treatment section",
      "url": "https://github.com/quicwg/ops-drafts/pull/300",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "check-on-list"
      ],
      "body": "Fixes #183. Fixes #184. Fixes #204\r\n\r\nThis PR replaces #222 (while retaining the semantics of all of its changes); #222 no longer merges due to major changes to the NAT and Connection ID text.",
      "createdAt": "2021-03-24T13:18:48Z",
      "updatedAt": "2021-04-14T12:11:28Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "247d49b116e60d7747696815a6753e669099f579",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "lets-do-222-again",
      "headRefOid": "4c9f8d5ad8e0773de8c9c142d1d545a695117bef",
      "closedAt": "2021-04-14T12:11:23Z",
      "mergedAt": "2021-04-14T12:11:22Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "e34b32cb405e311f837e1cd985eed3b78c941a05"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "fixes #204 as well",
          "createdAt": "2021-03-24T13:30:35Z",
          "updatedAt": "2021-03-24T13:30:35Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIxOTMwNzc0",
          "commit": {
            "abbreviatedOid": "36119e4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-26T09:28:27Z",
          "updatedAt": "2021-03-26T09:28:28Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2021-03-26T09:28:27Z",
              "updatedAt": "2021-04-09T15:44:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIxOTMwOTcz",
          "commit": {
            "abbreviatedOid": "36119e4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-26T09:28:39Z",
          "updatedAt": "2021-03-26T09:28:39Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2021-03-26T09:28:39Z",
              "updatedAt": "2021-04-09T15:44:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIxOTMxMDg2",
          "commit": {
            "abbreviatedOid": "36119e4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-26T09:28:47Z",
          "updatedAt": "2021-03-26T09:28:48Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2021-03-26T09:28:47Z",
              "updatedAt": "2021-04-09T15:44:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIxOTMxNzk5",
          "commit": {
            "abbreviatedOid": "36119e4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-26T09:29:34Z",
          "updatedAt": "2021-03-26T09:29:34Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nFurthermore, not all endpoints use routing architectures where connections\r\nwill survive a port or address change. So even when the client revives the\r\n```",
              "createdAt": "2021-03-26T09:29:34Z",
              "updatedAt": "2021-04-09T15:44:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNzgzMDcy",
          "commit": {
            "abbreviatedOid": "88ac4cd"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Some suggestions, but overall quite good.",
          "createdAt": "2021-03-28T21:05:56Z",
          "updatedAt": "2021-03-28T21:11:25Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nEven though QUIC has explicitly been designed tolerate NAT rebindings, decreasing the\r\nNAT timeout is not recommended, as it may negatively impact application performance\r\nor incentivize endpoints to send very frequent keep-alive packets.  Instead it is\r\n```",
              "createdAt": "2021-03-28T21:05:56Z",
              "updatedAt": "2021-04-09T15:44:27Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nconfirmation by both ends of a valid bidirectional transmission.\r\n```",
              "createdAt": "2021-03-28T21:09:17Z",
              "updatedAt": "2021-04-09T15:44:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzMjg2NTQ0",
          "commit": {
            "abbreviatedOid": "88ac4cd"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-29T14:21:28Z",
          "updatedAt": "2021-03-29T14:29:04Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "This deletion appears to be accidental?",
              "createdAt": "2021-03-29T14:21:28Z",
              "updatedAt": "2021-04-09T15:44:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzMzI2NzUw",
          "commit": {
            "abbreviatedOid": "88ac4cd"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-29T14:57:15Z",
          "updatedAt": "2021-03-29T14:57:16Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "```suggestion\r\nconnection ID in the same direction between client and server and sharing one\r\nendpoint address (IP address and port) with the known flow.\r\n```",
              "createdAt": "2021-03-29T14:57:16Z",
              "updatedAt": "2021-04-09T15:44:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MjI2MzQ2",
          "commit": {
            "abbreviatedOid": "6f6edb7"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-31T12:26:30Z",
          "updatedAt": "2021-03-31T12:26:31Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nwould lead to unnecessary long delays in an otherwise working connection.\r\n\r\n```",
              "createdAt": "2021-03-31T12:26:30Z",
              "updatedAt": "2021-04-09T15:44:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MjI3NTY1",
          "commit": {
            "abbreviatedOid": "88acf76"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-31T12:27:54Z",
          "updatedAt": "2021-03-31T12:27:54Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\ntimer of at least two minutes for QUIC traffic.\r\n\r\n```",
              "createdAt": "2021-03-31T12:27:54Z",
              "updatedAt": "2021-04-09T15:44:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNTUzMjU2",
          "commit": {
            "abbreviatedOid": "bc65640"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-09T15:44:19Z",
          "updatedAt": "2021-04-09T15:44:20Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nEven though QUIC has explicitly been designed tolerate NAT rebindings,\r\ndecreasing the NAT timeout is not recommended, as it may negatively impact\r\napplication performance or incentivize endpoints to send very frequent\r\nkeep-alive packets. Instead it is recommended, even when lower timers are\r\nused for other UDP traffic, to use a timer of at least two minutes for QUIC\r\ntraffic.\r\n```",
              "createdAt": "2021-04-09T15:44:19Z",
              "updatedAt": "2021-04-09T15:44:27Z"
            }
          ]
        }
      ]
    },
    {
      "number": 302,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAwMDQzMzQw",
      "title": "More ALPN discussion",
      "url": "https://github.com/quicwg/ops-drafts/pull/302",
      "state": "MERGED",
      "author": "MikeBishop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "First stab; fixes #292.",
      "createdAt": "2021-03-24T20:19:59Z",
      "updatedAt": "2021-04-01T13:57:52Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "247d49b116e60d7747696815a6753e669099f579",
      "headRepository": "MikeBishop/ops-drafts",
      "headRefName": "applicability/alpn",
      "headRefOid": "2fa64c4db2f98d18d80675c2c22789628cb9c61d",
      "closedAt": "2021-03-31T13:12:33Z",
      "mergedAt": "2021-03-31T13:12:33Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "17ee3d4f28060a5e6c446d22ce4486a51946c3af"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwODQ4MjU4",
          "commit": {
            "abbreviatedOid": "2fa64c4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-25T08:43:46Z",
          "updatedAt": "2021-03-25T08:43:46Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNjk0Njg3",
          "commit": {
            "abbreviatedOid": "2fa64c4"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-27T19:05:54Z",
          "updatedAt": "2021-03-27T19:05:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 303,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAwNTU1ODEx",
      "title": "add reference to draft-ietf-httpbis-priority instead H2",
      "url": "https://github.com/quicwg/ops-drafts/pull/303",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #264",
      "createdAt": "2021-03-25T08:57:50Z",
      "updatedAt": "2021-03-31T13:13:46Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "247d49b116e60d7747696815a6753e669099f579",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-13",
      "headRefOid": "150fddc32198128208354d0ee160573291504711",
      "closedAt": "2021-03-31T13:13:43Z",
      "mergedAt": "2021-03-31T13:13:43Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "35bfd8cf47e73db2d45729dd53cfcf6107a06caf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNjk0NjM1",
          "commit": {
            "abbreviatedOid": "150fddc"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-27T19:05:07Z",
          "updatedAt": "2021-03-27T19:05:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 304,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAwNTU5NjE0",
      "title": "add reference to draft-ietf-quic-version-negotiation",
      "url": "https://github.com/quicwg/ops-drafts/pull/304",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #265",
      "createdAt": "2021-03-25T09:04:00Z",
      "updatedAt": "2021-03-31T13:14:16Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "247d49b116e60d7747696815a6753e669099f579",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-14",
      "headRefOid": "a95ec0a5edd21fe1379c8724268316a5cd287733",
      "closedAt": "2021-03-31T13:14:12Z",
      "mergedAt": "2021-03-31T13:14:11Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "ab17b5d02ac03ba57d7b1e1ac51161e624866d9d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNjk0NTk5",
          "commit": {
            "abbreviatedOid": "a95ec0a"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-27T19:04:30Z",
          "updatedAt": "2021-03-27T19:04:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 305,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAwNTg1MTI4",
      "title": "Update on UDP policing section",
      "url": "https://github.com/quicwg/ops-drafts/pull/305",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "check-on-list"
      ],
      "body": "fixes #284 and fixes #296",
      "createdAt": "2021-03-25T09:41:34Z",
      "updatedAt": "2021-04-14T12:49:40Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "247d49b116e60d7747696815a6753e669099f579",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-15",
      "headRefOid": "05a14747454e3cf0a751f22492eec1cd3d8cf235",
      "closedAt": "2021-04-14T12:49:35Z",
      "mergedAt": "2021-04-14T12:49:34Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "b12006fba4c956100b7fd076f4e3ac94d32ed19e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwOTAzNTYy",
          "commit": {
            "abbreviatedOid": "25e4166"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-25T09:42:18Z",
          "updatedAt": "2021-03-25T09:42:18Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nFurther, if UDP traffic is throttle, it is recommended to rather block\r\n```",
              "createdAt": "2021-03-25T09:42:18Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNjkzOTUz",
          "commit": {
            "abbreviatedOid": "d4998ae"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "This is a tricky one.  I think it could use on-list discussion?",
          "createdAt": "2021-03-27T18:54:43Z",
          "updatedAt": "2021-03-27T19:04:06Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nthese ports, UDP flood attacks may also use the same ports. One possible\r\n```",
              "createdAt": "2021-03-27T18:54:43Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nFurther, if UDP traffic is throttle, it is recommended to block individual\r\nQUIC flows entirely rather than dropping packets randomly. When the handshake is\r\nblocked, QUIC-capable applications may failover to TCP\r\n```",
              "createdAt": "2021-03-27T18:58:56Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            },
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nsevere packet loss (see also {{sec-filtering}}). Per-flow blocking can be\r\n```\r\n\r\nI think this is blocking, not throttling?",
              "createdAt": "2021-03-27T18:59:43Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            },
            {
              "originalPosition": 40,
              "body": "If we're going to advise this, I think we should be clear that addresses may change for QUIC connections, and when they do, this will result in post-handshake blackholing.",
              "createdAt": "2021-03-27T19:03:13Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzMTg4MTYw",
          "commit": {
            "abbreviatedOid": "d4998ae"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-29T12:47:43Z",
          "updatedAt": "2021-03-29T12:47:43Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "hm, it's blocking some flows to throttle the aggregate UDP traffic... ",
              "createdAt": "2021-03-29T12:47:43Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzMTg5ODA4",
          "commit": {
            "abbreviatedOid": "d4998ae"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-29T12:49:26Z",
          "updatedAt": "2021-03-29T12:49:27Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "It could but that is a general problem on the Internet today. If the address changes it is not guaranteed that the traffic is still routed correctly...",
              "createdAt": "2021-03-29T12:49:27Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzMzU1NDIz",
          "commit": {
            "abbreviatedOid": "c27b357"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-29T15:22:23Z",
          "updatedAt": "2021-03-29T15:22:23Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "True, but now we have a potentially common case where a NAT rebinds and there's a chance the flow is suddenly blackholed.",
              "createdAt": "2021-03-29T15:22:23Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MjMyMTAx",
          "commit": {
            "abbreviatedOid": "c27b357"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-31T12:33:07Z",
          "updatedAt": "2021-03-31T12:33:07Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nsevere packet loss (see also {{sec-filtering}}). Therefore UDP throttling\r\nshould be rather realised by per-flow policing, e.g, based on the hash\r\nof the UDP datagram's source and destination\r\n```",
              "createdAt": "2021-03-31T12:33:07Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MjM1Nzgz",
          "commit": {
            "abbreviatedOid": "c27b357"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-31T12:37:07Z",
          "updatedAt": "2021-03-31T12:37:07Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nWhile QUIC endpoints are often able to survive address changes, e.g. by NAT rebindings,\r\nblocking a portion of the traffic based on 5-tuple hashing increases the risk of\r\nblackholing an active connection when the address changes.\r\n\r\n```",
              "createdAt": "2021-03-31T12:37:07Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MjM2NzUw",
          "commit": {
            "abbreviatedOid": "c27b357"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-31T12:38:12Z",
          "updatedAt": "2021-03-31T12:38:12Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "Does the additional sentence below address this point reasonably?",
              "createdAt": "2021-03-31T12:38:12Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1Mjc4MjUz",
          "commit": {
            "abbreviatedOid": "c27b357"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-31T13:19:18Z",
          "updatedAt": "2021-03-31T13:19:19Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nFurther, if UDP traffic is throttled, it is recommended to block individual\r\n```",
              "createdAt": "2021-03-31T13:19:18Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1ODI3Njg1",
          "commit": {
            "abbreviatedOid": "c27b357"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-01T01:00:31Z",
          "updatedAt": "2021-04-01T01:00:32Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "I think so.  I still think it's worth a wider discussion, but the trade-offs are clearer now.",
              "createdAt": "2021-04-01T01:00:31Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1ODc3NDQ5",
          "commit": {
            "abbreviatedOid": "c27b357"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Generally speaking, this is OK.  I have a few suggestions however.",
          "createdAt": "2021-04-01T03:42:17Z",
          "updatedAt": "2021-04-01T03:47:33Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nHowever, blocking a\r\n```\r\n\r\nWell-known ports has nothing to do with it.",
              "createdAt": "2021-04-01T03:42:17Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            },
            {
              "originalPosition": 39,
              "body": "This bit about hash space is unnecessarily narrow.  The overall point is sound: block a subset of flows, not a subset of packets.  Talking about hashing is a distraction.",
              "createdAt": "2021-04-01T03:44:58Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            },
            {
              "originalPosition": 41,
              "body": "> QUIC connections can be resilient to address changes, such as those caused by NAT rebinding.  However, blocking a portion of flows as identified by address tuples means that some active flows will fail when addresses change.\r\n\r\n\"blackholing\" or black hole is not a useful term to use here.  I would rather you avoid it.",
              "createdAt": "2021-04-01T03:47:06Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNDQ3NjIw",
          "commit": {
            "abbreviatedOid": "c27b357"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-09T14:01:41Z",
          "updatedAt": "2021-04-09T14:01:42Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Do you have a better term?",
              "createdAt": "2021-04-09T14:01:41Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNDQ4NjQ1",
          "commit": {
            "abbreviatedOid": "e91b509"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-09T14:02:41Z",
          "updatedAt": "2021-04-09T14:02:41Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "I disagree. This is about guidance to network function. The more specific we can be, the more likely people do the right thing.",
              "createdAt": "2021-04-09T14:02:41Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNDUwNzc5",
          "commit": {
            "abbreviatedOid": "e91b509"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-09T14:04:45Z",
          "updatedAt": "2021-04-09T14:04:46Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nincrease over time, using such a limit is not recommended but if done,\r\nlimits might need to be adapted dynamically.\r\n```",
              "createdAt": "2021-04-09T14:04:46Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNDUxMTY1",
          "commit": {
            "abbreviatedOid": "e91b509"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-09T14:05:07Z",
          "updatedAt": "2021-04-09T14:05:08Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nFurther, if UDP traffic is desired to be throttled, it is recommended to block individual\r\n```",
              "createdAt": "2021-04-09T14:05:08Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNDgyNDc1",
          "commit": {
            "abbreviatedOid": "e91b509"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-09T14:34:34Z",
          "updatedAt": "2021-04-09T14:34:35Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nWhile QUIC endpoints are often able to survive address changes, e.g. by NAT\r\nrebindings, blocking a portion of the traffic based on 5-tuple hashing increases\r\nthe risk of black-holing an active connection when the address changes.\r\n```",
              "createdAt": "2021-04-09T14:34:34Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNjE2Nzgy",
          "commit": {
            "abbreviatedOid": "8cc5a27"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-09T16:54:55Z",
          "updatedAt": "2021-04-09T16:54:56Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Glad we are of the same mind (that a UDP cap is not ideal, but sometimes it may be necessary and if so here's how to do it).\r\nMy only comment on this sentence is to ask whether \"adopted\" should be \"adapted\". I would say that adoption means the process of starting to apply something, whereas adapted means changing it as you go. It's still possible to say you can adopt something in a dynamic fashion, but \"adapted dynamically\" is probably clearer.",
              "createdAt": "2021-04-09T16:54:56Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNjE3MDEy",
          "commit": {
            "abbreviatedOid": "8cc5a27"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-09T16:55:12Z",
          "updatedAt": "2021-04-09T16:55:13Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Looks good.",
              "createdAt": "2021-04-09T16:55:13Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NTcxMTU4",
          "commit": {
            "abbreviatedOid": "4147979"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-14T12:42:32Z",
          "updatedAt": "2021-04-14T12:47:15Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "I think you're both right. We need an example of how to do efficient per-flow policing here, but it could be Even More Clear that it's an example.",
              "createdAt": "2021-04-14T12:42:32Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            },
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nsevere packet loss (see also {{sec-filtering}}). Therefore UDP throttling\r\nshould be realized by per-flow policing as opposed to per-packet\r\npolicing. Note that this per-flow policing should be stateless to avoid\r\nproblems with stateful treatment of QUIC flows (see {{sec-stateful}}),\r\nfor example blocking a portion of the space of values of a hash function\r\nover the addresses and ports in the UDP datagram.\r\n```",
              "createdAt": "2021-04-14T12:46:42Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NTc2MzM2",
          "commit": {
            "abbreviatedOid": "d061edc"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-14T12:47:53Z",
          "updatedAt": "2021-04-14T12:47:53Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nFurther, if UDP traffic is desired to be throttled, it is recommended to\r\nblock individual\r\n```",
              "createdAt": "2021-04-14T12:47:53Z",
              "updatedAt": "2021-04-14T12:48:15Z"
            }
          ]
        }
      ]
    },
    {
      "number": 306,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAwNTkyNzkw",
      "title": "Make recommendation to not CID for NAT stronger",
      "url": "https://github.com/quicwg/ops-drafts/pull/306",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #293",
      "createdAt": "2021-03-25T09:52:53Z",
      "updatedAt": "2021-04-19T08:35:12Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "247d49b116e60d7747696815a6753e669099f579",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-16",
      "headRefOid": "84af0b9924b67f212cf299fce59810c699bc23c0",
      "closedAt": "2021-03-31T13:17:21Z",
      "mergedAt": "2021-03-31T13:17:21Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "4aeb291a164f20ba56be3f8e92e79f681ad6af86"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwOTQ1NTAw",
          "commit": {
            "abbreviatedOid": "aac674c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-25T10:26:01Z",
          "updatedAt": "2021-03-25T10:26:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nwhat length it has. However, connection IDs may be renegotiated during\r\n```",
              "createdAt": "2021-03-25T10:26:01Z",
              "updatedAt": "2021-03-31T13:15:58Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNjkzNjM0",
          "commit": {
            "abbreviatedOid": "4526a3f"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-27T18:50:04Z",
          "updatedAt": "2021-03-27T18:50:38Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "```suggestion\r\nIf a NAT hits an operational limit, it is recommended to drop the\r\n```",
              "createdAt": "2021-03-27T18:50:04Z",
              "updatedAt": "2021-03-31T13:15:58Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MjM5MjE4",
          "commit": {
            "abbreviatedOid": "4526a3f"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-31T12:40:55Z",
          "updatedAt": "2021-03-31T12:40:55Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "This is addressed in another PR.",
              "createdAt": "2021-03-31T12:40:55Z",
              "updatedAt": "2021-03-31T13:15:58Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1Mjc0MDIx",
          "commit": {
            "abbreviatedOid": "4526a3f"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-31T13:15:31Z",
          "updatedAt": "2021-03-31T13:15:46Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nmultiplex multiple connections on the same IP address/port pair is not a\r\n```",
              "createdAt": "2021-03-31T13:15:31Z",
              "updatedAt": "2021-03-31T13:15:58Z"
            }
          ]
        }
      ]
    },
    {
      "number": 307,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAwNjE2MDM5",
      "title": "Additional text on problem with 4-tuple for stateful devices",
      "url": "https://github.com/quicwg/ops-drafts/pull/307",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #295",
      "createdAt": "2021-03-25T10:25:32Z",
      "updatedAt": "2021-03-31T13:17:11Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "247d49b116e60d7747696815a6753e669099f579",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-17",
      "headRefOid": "7b0750542713a1d5f1b67c48c1bcb8bbf31c7915",
      "closedAt": "2021-03-31T13:17:08Z",
      "mergedAt": "2021-03-31T13:17:08Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "e51f82e685f0a78ab1c581b583bfe1e7a6d80ed3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIxNDgxNTE1",
          "commit": {
            "abbreviatedOid": "db094b9"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-25T19:00:36Z",
          "updatedAt": "2021-03-25T19:00:37Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nchanges, stateful devices lose their state and break connectivity if state\r\n```",
              "createdAt": "2021-03-25T19:00:36Z",
              "updatedAt": "2021-03-31T12:51:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIxNDgxNzcz",
          "commit": {
            "abbreviatedOid": "db094b9"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-25T19:00:55Z",
          "updatedAt": "2021-03-25T19:00:56Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nis required for forwarding, while the endpoints would otherwise survive such a\r\n```",
              "createdAt": "2021-03-25T19:00:55Z",
              "updatedAt": "2021-03-31T12:51:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIxNDgyMjcx",
          "commit": {
            "abbreviatedOid": "db094b9"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-25T19:01:33Z",
          "updatedAt": "2021-03-25T19:01:33Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNjkyOTQz",
          "commit": {
            "abbreviatedOid": "70ea10c"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LG, some editorial comments.",
          "createdAt": "2021-03-27T18:40:16Z",
          "updatedAt": "2021-03-27T18:49:06Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\ntimeout-based delays before this problem is detected by the endpoints and\r\n```",
              "createdAt": "2021-03-27T18:40:16Z",
              "updatedAt": "2021-03-31T12:51:05Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nand unrecoverable loss of state in the middle of a connection. Specially, the\r\n```",
              "createdAt": "2021-03-27T18:40:59Z",
              "updatedAt": "2021-03-31T12:51:05Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\n```\r\n\r\nI'd drop this, since I think the next sentence is clearer.",
              "createdAt": "2021-03-27T18:43:42Z",
              "updatedAt": "2021-03-31T12:51:05Z"
            },
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nnetwork devices are not able to map QUIC connections after a 4-tuple\r\nchange. As such, when the 4-tuple\r\n```",
              "createdAt": "2021-03-27T18:46:04Z",
              "updatedAt": "2021-03-31T12:51:05Z"
            },
            {
              "originalPosition": 34,
              "body": "This last sentence is hard to read, but I unfortunately don't have a good suggestion.",
              "createdAt": "2021-03-27T18:48:46Z",
              "updatedAt": "2021-03-31T12:51:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MjQ0NjA0",
          "commit": {
            "abbreviatedOid": "70ea10c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-31T12:46:47Z",
          "updatedAt": "2021-03-31T12:46:47Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nat the same time when the address/port changes to avoid linkability. As new\r\nconnection IDs belonging to the same connection are not known to on-path\r\ndevices,\r\n```",
              "createdAt": "2021-03-31T12:46:47Z",
              "updatedAt": "2021-03-31T12:51:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MjQ4NTg4",
          "commit": {
            "abbreviatedOid": "08efe98"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-31T12:50:47Z",
          "updatedAt": "2021-03-31T12:50:48Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\ndevices, network devices are not able to map QUIC connections\r\nafter a 4-tuple change. As such, when the 4-tuple\r\n```",
              "createdAt": "2021-03-31T12:50:47Z",
              "updatedAt": "2021-03-31T12:51:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1Mjc1NzMx",
          "commit": {
            "abbreviatedOid": "7b07505"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-31T13:16:58Z",
          "updatedAt": "2021-03-31T13:16:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 308,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAxNzEyOTAy",
      "title": "Reference cleanup",
      "url": "https://github.com/quicwg/ops-drafts/pull/308",
      "state": "MERGED",
      "author": "MikeBishop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "Some section refs weren't linked to the sections; some objects were defined multiple ways; one reference wasn't actually cited in the text.",
      "createdAt": "2021-03-26T15:30:34Z",
      "updatedAt": "2021-03-31T13:14:51Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "247d49b116e60d7747696815a6753e669099f579",
      "headRepository": "MikeBishop/ops-drafts",
      "headRefName": "section-refs",
      "headRefOid": "0bb3d193cc1fbc62c95f8dfacabebcbccb04f0c5",
      "closedAt": "2021-03-31T13:14:51Z",
      "mergedAt": "2021-03-31T13:14:51Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "27cfd9e09f3840f1bcdec6c9a288fad7c3c2434b"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks a lot!",
          "createdAt": "2021-03-31T12:52:24Z",
          "updatedAt": "2021-03-31T12:52:24Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 309,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAyMzA3NTA3",
      "title": "Remove details on using CID to associate flows",
      "url": "https://github.com/quicwg/ops-drafts/pull/309",
      "state": "MERGED",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "Currently I find this section worded in a way which could cause the reader to believe using CID would typically work.",
      "createdAt": "2021-03-28T20:49:27Z",
      "updatedAt": "2021-04-20T18:35:53Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "66ca52410ce7c1a0146b4a472c74e1a19ca1fc8f",
      "headRepository": "ianswett/ops-drafts",
      "headRefName": "patch-1",
      "headRefOid": "ea59b24a2a07c78b8b1ecec18f417c5590ffa758",
      "closedAt": "2021-04-20T18:35:53Z",
      "mergedAt": "2021-04-20T18:35:53Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "fca9cf1197354e2e0bc4b178d3dfd22ebf342e66"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "While we say in multiple places that it is not recommended to to use the connection ID, it is still true that you can use it to associate a new 5-tuple to an existing connection. This is what this text describes and that's inline the with the goal of section 2 which basically only describes what possible with the wire image and what's not. Therefore I wouldn't want to remove this text here.\r\n\r\nNote that there can be stateful functions like spin-bit based monitoring that would benefit from map connections with the same connection ID but don't break anything otherwise. \r\n\r\nHowever, I guess we could add a warning already here that it is usually not recommended to use the connection ID as it might change. I think that's what the next part already says but not directly as a warning or recommendation (given that was not the goal of this section).\r\n\r\n",
          "createdAt": "2021-03-31T13:00:59Z",
          "updatedAt": "2021-03-31T13:00:59Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I added another paragraph to clarify what is possible, PTAL",
          "createdAt": "2021-04-03T14:52:25Z",
          "updatedAt": "2021-04-03T14:52:25Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1ODc2NDQ1",
          "commit": {
            "abbreviatedOid": "cc85607"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "I think that it is good to remove that text.  It is true that in some narrow cases the same connection ID on two paths means that the connection moved from one path to the other.  However, this is not a guarantee and to suggest otherwise is not very helpful.\r\n\r\nI support removing the text.",
          "createdAt": "2021-04-01T03:39:16Z",
          "updatedAt": "2021-04-01T03:39:16Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNDY1MDYw",
          "commit": {
            "abbreviatedOid": "6c4fbb6"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T12:15:41Z",
          "updatedAt": "2021-04-12T12:15:41Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nendpoints changes address or port.  This change can be due to NAT rebinding or\r\n```",
              "createdAt": "2021-04-12T12:15:41Z",
              "updatedAt": "2021-04-20T09:33:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNDY4OTk5",
          "commit": {
            "abbreviatedOid": "5d67da0"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T12:20:19Z",
          "updatedAt": "2021-04-12T12:20:19Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\non-path device, such as a load-balancer, to associate two flows when one of the\r\n```",
              "createdAt": "2021-04-12T12:20:19Z",
              "updatedAt": "2021-04-20T09:33:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNDc3ODg0",
          "commit": {
            "abbreviatedOid": "cf156db"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T12:30:20Z",
          "updatedAt": "2021-04-12T12:30:20Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nThe connection ID must change upon intentional address change by an endpoint,\r\nso it is only possible for a passive observer to link unintended changes of\r\naddress using the connection ID.\r\n\r\nIn the case of the unintentional address change on a single\r\nendpoint (as is the case with NAT rebinding), an on-path\r\nobserver can in most cases associate the flow on the new\r\naddress with the flow on the old address, using the\r\nconnection ID.\r\n```",
              "createdAt": "2021-04-12T12:30:20Z",
              "updatedAt": "2021-04-20T09:33:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNDgzOTIw",
          "commit": {
            "abbreviatedOid": "cf156db"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T12:36:53Z",
          "updatedAt": "2021-04-12T12:36:54Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nA network function that uses the connection ID to associate flows must\r\nbe robust to the failure of this technique. Since the connection ID may\r\nchange multiple times during the lifetime of a connection, and \r\nconnection ID negotiation is encrypted, packets with the\r\nsame five-tuple but different connection IDs might or might not belong to\r\nthe same connection. Likewise, packets with the same connection ID but\r\ndifferent five-tuples might not belong to the same connection, either.\r\n```",
              "createdAt": "2021-04-12T12:36:54Z",
              "updatedAt": "2021-04-20T09:33:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNDg1MDA2",
          "commit": {
            "abbreviatedOid": "cf156db"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T12:38:08Z",
          "updatedAt": "2021-04-12T12:38:08Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "@ianswett editing by editors led to this change (covering unintentional address change and the fact that observation techniques are brittle); wdyt?",
              "createdAt": "2021-04-12T12:38:08Z",
              "updatedAt": "2021-04-20T09:33:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM5MDIwOTkx",
          "commit": {
            "abbreviatedOid": "cf156db"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I'm going to accept both changes and then make some follow-up changes.",
          "createdAt": "2021-04-19T15:40:16Z",
          "updatedAt": "2021-04-19T16:01:47Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "This seems a bit redundant to the above paragraph, but I agree it's true, so if you'd like to add this I'm ok with it.",
              "createdAt": "2021-04-19T15:40:16Z",
              "updatedAt": "2021-04-20T09:33:51Z"
            },
            {
              "originalPosition": 28,
              "body": "I'd prefer this paragraph without the first sentence, since that's reintroducing text suggesting a middlebox might do this.  If we are going to keep it, I think it needs to be reworded slightly.\r\n\r\nThe last sentence is a nice addition, though.",
              "createdAt": "2021-04-19T16:00:54Z",
              "updatedAt": "2021-04-20T09:33:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM5MDY4NTMy",
          "commit": {
            "abbreviatedOid": "4362a72"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "PTAL.",
          "createdAt": "2021-04-19T16:23:41Z",
          "updatedAt": "2021-04-19T16:24:28Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "I personally wouldn't add this paragraph, but including it and letting you decide.",
              "createdAt": "2021-04-19T16:23:41Z",
              "updatedAt": "2021-04-20T09:33:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM5MjM1MzIz",
          "commit": {
            "abbreviatedOid": "4362a72"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-19T19:30:28Z",
          "updatedAt": "2021-04-19T19:30:29Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nConnection ID negotiation is encrypted and the connection ID must change upon\r\nintentional address change by an endpoint. Still, in the case of the unintentional\r\naddress change on a single endpoint,\r\n```\r\nI prefer to remove the previous half sentence and make one paragraph out of these two sentences.",
              "createdAt": "2021-04-19T19:30:28Z",
              "updatedAt": "2021-04-20T09:33:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM5MjM2Njk0",
          "commit": {
            "abbreviatedOid": "4362a72"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-19T19:32:19Z",
          "updatedAt": "2021-04-19T19:34:44Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nand connection ID negotiation is encrypted, so it is not possible for a\r\npassive observer to link intended changes of address using the connection ID.\r\n\r\nWhen one endpoint unintentionally changes its address, as is the case with NAT\r\nrebinding, an on-path observer may be able to use the connection ID to\r\nassociate the flow on the new address with the flow on the old address.\r\n```",
              "createdAt": "2021-04-19T19:32:19Z",
              "updatedAt": "2021-04-20T09:33:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM5NzI2NTU2",
          "commit": {
            "abbreviatedOid": "4362a72"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-20T09:33:47Z",
          "updatedAt": "2021-04-20T09:33:47Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "That works! Will commit this suggestion and withdraw mine. Text is better and much clearer now! Thanks!",
              "createdAt": "2021-04-20T09:33:47Z",
              "updatedAt": "2021-04-20T09:33:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM5NzI3MzMz",
          "commit": {
            "abbreviatedOid": "ea59b24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This is ready to merge now!",
          "createdAt": "2021-04-20T09:34:32Z",
          "updatedAt": "2021-04-20T09:34:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 310,
      "id": "MDExOlB1bGxSZXF1ZXN0NjEyNDk0NzI2",
      "title": "Conn ID and load balancers",
      "url": "https://github.com/quicwg/ops-drafts/pull/310",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "fixes #243",
      "createdAt": "2021-04-09T14:19:07Z",
      "updatedAt": "2021-04-19T04:14:53Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "271cfacfa012f990163b5257101090c374604a71",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-13",
      "headRefOid": "c1082cacbd8679fbd25d600c67723a8c8decc37e",
      "closedAt": "2021-04-14T12:38:47Z",
      "mergedAt": "2021-04-14T12:38:47Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "ad65a562f54dfaa9ccc55d4eb872e19bcb337a56"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNDgwODI3",
          "commit": {
            "abbreviatedOid": "031a0a4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-09T14:33:02Z",
          "updatedAt": "2021-04-09T14:33:03Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nencoding the server mapping in a connection ID in order to share this\r\n```",
              "createdAt": "2021-04-09T14:33:02Z",
              "updatedAt": "2021-04-14T12:18:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNjI5OTc1",
          "commit": {
            "abbreviatedOid": "74642ce"
          },
          "author": "chris-box",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-09T17:11:59Z",
          "updatedAt": "2021-04-09T17:12:00Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Suggested tweaks to address the advice to network operators who are not also one of the endpoints, which I think is the intended scope here.\r\n```suggestion\r\nmappings should only be exposed to selected entities. Uncontrolled exposure\r\nwould allow linkage of multiple IP addresses to the same host if the server\r\nalso supports migration which opens an attack vector on specific servers or\r\npools. The best way to obscure an encoding is to appear random to any other\r\nobservers, which is most rigorously achieved with encryption. As a result\r\nany attempt to infer information from specific parts of a connection ID is\r\nunlikely to be useful.\r\n```",
              "createdAt": "2021-04-09T17:11:59Z",
              "updatedAt": "2021-04-14T12:18:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4NDQ4NDE5",
          "commit": {
            "abbreviatedOid": "c1082ca"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "This is fine, but it presumes a lot about the outcome of things that aren't completely resolved in QUIC-LB.  I think that I would like to see more of this left to QUIC-LB to deal with, especially if we are planning to publish this before QUIC-LB (which seems likely).  That might mean being a lot more aggressive about cutting text here.",
          "createdAt": "2021-04-19T04:14:53Z",
          "updatedAt": "2021-04-19T04:14:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 311,
      "id": "MDExOlB1bGxSZXF1ZXN0NjEyNDk5MjA3",
      "title": "Editorial edit on fallback",
      "url": "https://github.com/quicwg/ops-drafts/pull/311",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "fixes #258",
      "createdAt": "2021-04-09T14:25:36Z",
      "updatedAt": "2021-04-19T08:35:14Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "271cfacfa012f990163b5257101090c374604a71",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-14",
      "headRefOid": "e8b1e2d0aa7cbe499658d964beabcb52574cfa9a",
      "closedAt": "2021-04-12T12:41:11Z",
      "mergedAt": "2021-04-12T12:41:11Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "98eafae277b5f7a48f35ccb2a443069792c39a59"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 312,
      "id": "MDExOlB1bGxSZXF1ZXN0NjEzNjg3NDE5",
      "title": "Initial endpoint DDoS cooperation text",
      "url": "https://github.com/quicwg/ops-drafts/pull/312",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "check-on-list"
      ],
      "body": "fixes #240. thanks @gorryfair for the text.",
      "createdAt": "2021-04-12T14:37:36Z",
      "updatedAt": "2021-04-19T04:11:59Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "98eafae277b5f7a48f35ccb2a443069792c39a59",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "240-ddos-cooperation",
      "headRefOid": "e8d5096d72ae81457a7b03b31389bcc5828fe423",
      "closedAt": "2021-04-14T12:34:09Z",
      "mergedAt": "2021-04-14T12:34:09Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "2254cf2130b4e8f524e2ca2c21887d08dff6d030"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNjIyMzU1",
          "commit": {
            "abbreviatedOid": "4a261f1"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T14:41:37Z",
          "updatedAt": "2021-04-12T14:41:37Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nby causing spurious edge detection and therefore inaccurate (i.e., lower) RTT\r\n```",
              "createdAt": "2021-04-12T14:41:37Z",
              "updatedAt": "2021-04-14T12:33:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNjQ4MjQ0",
          "commit": {
            "abbreviatedOid": "dabdbaf"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T15:02:33Z",
          "updatedAt": "2021-04-12T15:02:33Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "```suggestion\r\ntraffic from new attack traffic.\r\n```",
              "createdAt": "2021-04-12T15:02:33Z",
              "updatedAt": "2021-04-14T12:33:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNjUwNTI1",
          "commit": {
            "abbreviatedOid": "dabdbaf"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T15:04:27Z",
          "updatedAt": "2021-04-12T15:04:27Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "I don't quite understand this sentence. For one, why \"when an encrypted transport is used\"? This document is purely about an encrypted transport, right? And then \"these security functions\" is also unclear to me.",
              "createdAt": "2021-04-12T15:04:27Z",
              "updatedAt": "2021-04-14T12:33:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNjUzMDM1",
          "commit": {
            "abbreviatedOid": "dabdbaf"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T15:06:43Z",
          "updatedAt": "2021-04-12T15:06:43Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Is this referring to just explicit connection migration or do you include NAT rebinding as well? Either way, I think it should be explicitly called out. I think, ideally, NAT rebinding should continue to work, but I tend to agree full, explicit connection migration likely isn't completely necessary while under attack.",
              "createdAt": "2021-04-12T15:06:43Z",
              "updatedAt": "2021-04-14T12:33:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzNjYzMjI0",
          "commit": {
            "abbreviatedOid": "dabdbaf"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-12T15:15:43Z",
          "updatedAt": "2021-04-12T15:15:43Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "On the first: I think this is true for any encrypted transport, but yes it does apply to QUIC.  \r\nOn the functions: I thought this was: DOS;DDOS;Malware detection; NIDS; etc",
              "createdAt": "2021-04-12T15:15:43Z",
              "updatedAt": "2021-04-14T12:33:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NTUwOTk1",
          "commit": {
            "abbreviatedOid": "f82b953"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-14T12:20:28Z",
          "updatedAt": "2021-04-14T12:20:28Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nCurrent practices in detection and mitigation of DDoS\r\nattacks generally involve classification of incoming traffic (as\r\n```",
              "createdAt": "2021-04-14T12:20:28Z",
              "updatedAt": "2021-04-14T12:33:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NTUxNTA0",
          "commit": {
            "abbreviatedOid": "f82b953"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-14T12:21:04Z",
          "updatedAt": "2021-04-14T12:21:05Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\naddress changes without the client's intent or knowledge, DDoS defense systems\r\n```",
              "createdAt": "2021-04-14T12:21:05Z",
              "updatedAt": "2021-04-14T12:33:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NTUxOTUy",
          "commit": {
            "abbreviatedOid": "f82b953"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-14T12:21:35Z",
          "updatedAt": "2021-04-14T12:21:35Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nIt is also possible for\r\n```",
              "createdAt": "2021-04-14T12:21:35Z",
              "updatedAt": "2021-04-14T12:33:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NTUyMzg3",
          "commit": {
            "abbreviatedOid": "f82b953"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-14T12:22:06Z",
          "updatedAt": "2021-04-14T12:22:06Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\nendpoints to directly support security functions such as DoS\r\nclassification and mitigation.\r\n```",
              "createdAt": "2021-04-14T12:22:06Z",
              "updatedAt": "2021-04-14T12:33:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NTUzNzI3",
          "commit": {
            "abbreviatedOid": "f82b953"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-14T12:23:44Z",
          "updatedAt": "2021-04-14T12:23:45Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "```suggestion\r\nEndpoints can cooperate with an in-network device directly by e.g.\r\nsharing information about connection IDs.\r\n```",
              "createdAt": "2021-04-14T12:23:44Z",
              "updatedAt": "2021-04-14T12:33:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NTU5Mzk3",
          "commit": {
            "abbreviatedOid": "f82b953"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-14T12:29:52Z",
          "updatedAt": "2021-04-14T12:29:53Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "```suggestion\r\nduring a DDoS attack. However, for unintentional mitigations, as is usually the\r\ncase for NAT rebindings, the connection ID can be used to track\r\nconnections (see {{sec-flow-association}}). If the connection\r\nmigration is not visible to the network\r\n```",
              "createdAt": "2021-04-14T12:29:52Z",
              "updatedAt": "2021-04-14T12:33:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4NDQ3MTg5",
          "commit": {
            "abbreviatedOid": "e8d5096"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I don't like where this was taken.  As @mirjak said, it is not responsive to my comments about cooperation.  It still firmly assumes that DoS mitigation is being performed without cooperation from endpoints.  That might be unavoidable for good reasons, but we should be clearer about the consequences of that AND we should recommend that DoS mitigation be performed with cooperation from endpoints.",
          "createdAt": "2021-04-19T04:10:14Z",
          "updatedAt": "2021-04-19T04:11:59Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "Resumption might be fast, but still costs a lot more to handle than keeping a connection alive.  This won't produce a good outcome in the case of DoS.  I don't think that this is good advice at all.",
              "createdAt": "2021-04-19T04:10:15Z",
              "updatedAt": "2021-04-19T04:11:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 313,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE1MDA3MzUz",
      "title": "Rename datagrams in the handshake for clarity.",
      "url": "https://github.com/quicwg/ops-drafts/pull/313",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial",
        "ready-to-merge"
      ],
      "body": "Fixes #276.",
      "createdAt": "2021-04-14T07:42:12Z",
      "updatedAt": "2021-04-19T08:35:11Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "98eafae277b5f7a48f35ccb2a443069792c39a59",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "276-handshake-naming",
      "headRefOid": "edee038934119169a4d2f090267c0747d9fadc75",
      "closedAt": "2021-04-14T12:06:32Z",
      "mergedAt": "2021-04-14T12:06:32Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "70993ce628db7e4ab902af9610156714736999c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NDQ1MzA3",
          "commit": {
            "abbreviatedOid": "edee038"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-14T10:09:30Z",
          "updatedAt": "2021-04-14T10:09:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 314,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE1MDEyMDgw",
      "title": "More explicit stream ordering guidance.",
      "url": "https://github.com/quicwg/ops-drafts/pull/314",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "Fixes #286.",
      "createdAt": "2021-04-14T07:49:05Z",
      "updatedAt": "2021-04-19T08:03:47Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "98eafae277b5f7a48f35ccb2a443069792c39a59",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "286-not-ordered-for-real",
      "headRefOid": "8a86cfb38e35a760dd92e22cfab7732cfd46dfed",
      "closedAt": "2021-04-19T08:03:45Z",
      "mergedAt": "2021-04-19T08:03:44Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "58618fe12402f289c5a35fc1b208d1a2387b344e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NDQ0NDQw",
          "commit": {
            "abbreviatedOid": "7f0a877"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-14T10:08:33Z",
          "updatedAt": "2021-04-14T10:08:33Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NTI1OTYw",
          "commit": {
            "abbreviatedOid": "7f0a877"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-14T11:50:49Z",
          "updatedAt": "2021-04-14T11:50:49Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "would it be more consistent with the preceeding sentence to say that there is no guarantee of reception ordering across streams?\r\n\r\nI think the transport caveat for applications using QUIC is that they might write N bytes to stream 0, and N bytes to stream 4 (in order) and expect that the recipient would receive them in that order.\r\n\r\nTalking about transmission order is still a useful point but it is slightlly different. A QUIC implementation might allow ordered writes (stream 0 then stream 4, as above) but it might not provide any guarantee of transmission order. Perhaps you can add another sentence to mention transmission with a forward ref to the prioritization section?",
              "createdAt": "2021-04-14T11:50:49Z",
              "updatedAt": "2021-04-14T12:09:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM1NTM5NDA3",
          "commit": {
            "abbreviatedOid": "7f0a877"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-14T12:07:05Z",
          "updatedAt": "2021-04-14T12:07:06Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Yeah. Reception order is better.\r\n\r\n```suggestion\r\nbe received in order, that data should be sent on the same stream. There is\r\nno guarantee of reception ordering across streams.\r\n```",
              "createdAt": "2021-04-14T12:07:05Z",
              "updatedAt": "2021-04-14T12:09:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4NDQ2MDc5",
          "commit": {
            "abbreviatedOid": "8a86cfb"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-19T04:06:06Z",
          "updatedAt": "2021-04-19T04:06:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 315,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE2OTUzNzg2",
      "title": "Follow up edit on conn ID from previous editorial change",
      "url": "https://github.com/quicwg/ops-drafts/pull/315",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "",
      "createdAt": "2021-04-16T16:16:48Z",
      "updatedAt": "2021-04-19T08:08:18Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8b66f4d00fc38cdf2138af7e35e1c2b8bee44736",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-13",
      "headRefOid": "81d4e1911caca0e83e60080ecf3be94d9d1b8ecf",
      "closedAt": "2021-04-19T08:08:15Z",
      "mergedAt": "2021-04-19T08:08:15Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "154b05b91d4267997066dabdcdb9cbd2deebaca0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4NTcxOTY3",
          "commit": {
            "abbreviatedOid": "9b2193a"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-19T08:04:36Z",
          "updatedAt": "2021-04-19T08:04:37Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\npackets using information independent of the five-tuple. This\r\nallows rebinding of a connection after one of one endpoint experienced\r\nan address change - usually the client. Further it can be used by\r\nin-network devices to ensure that related 5-tuple flows are appropriately\r\n```",
              "createdAt": "2021-04-19T08:04:36Z",
              "updatedAt": "2021-04-19T08:04:42Z"
            }
          ]
        }
      ]
    },
    {
      "number": 316,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE2OTU4Nzc2",
      "title": "proposed changes to section headings",
      "url": "https://github.com/quicwg/ops-drafts/pull/316",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "",
      "createdAt": "2021-04-16T16:20:22Z",
      "updatedAt": "2021-04-19T08:23:49Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8b66f4d00fc38cdf2138af7e35e1c2b8bee44736",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-15",
      "headRefOid": "c2d4f499191385d837e4cc481e0c5c36d09643dd",
      "closedAt": "2021-04-19T08:23:47Z",
      "mergedAt": "2021-04-19T08:23:47Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "9567ffcc0572e7ce9d0ca1a20155205a334fd1d6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4NTc0ODIx",
          "commit": {
            "abbreviatedOid": "a92a2dc"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-19T08:07:47Z",
          "updatedAt": "2021-04-19T08:07:47Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n### First Packet Identification for Garbage Rejection {#sec-garbage}\r\n```",
              "createdAt": "2021-04-19T08:07:47Z",
              "updatedAt": "2021-04-19T08:07:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 317,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE2OTY5Mjgz",
      "title": "On time-outs again: this sentence was misplaced...",
      "url": "https://github.com/quicwg/ops-drafts/pull/317",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "",
      "createdAt": "2021-04-16T16:34:19Z",
      "updatedAt": "2021-04-19T08:09:23Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8b66f4d00fc38cdf2138af7e35e1c2b8bee44736",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-17",
      "headRefOid": "2241a39226d97fcdc30f58c908cead3498567f13",
      "closedAt": "2021-04-19T08:09:21Z",
      "mergedAt": "2021-04-19T08:09:21Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "61ce26f8ab2c789aa7450e904a5627f0cd67bd4b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 318,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE2OTcwODU2",
      "title": "Remove redundant NAT/CID paragraph",
      "url": "https://github.com/quicwg/ops-drafts/pull/318",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "NAT section",
        "editorial"
      ],
      "body": "This paragraph is redundant with the previous paragraph, however, not sure I removed the right one now...",
      "createdAt": "2021-04-16T16:37:25Z",
      "updatedAt": "2021-04-19T08:11:21Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8b66f4d00fc38cdf2138af7e35e1c2b8bee44736",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-18",
      "headRefOid": "93c7db39a88a40697b4447e789b2ca3f4656e640",
      "closedAt": "2021-04-19T08:11:18Z",
      "mergedAt": "2021-04-19T08:11:18Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "8c121e026d311e8e84ea501c6ad4220992a451e2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 319,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE2OTczOTE0",
      "title": "Move sentence about address rewriting",
      "url": "https://github.com/quicwg/ops-drafts/pull/319",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "this did not flow nicely... or we just remove that sentence.",
      "createdAt": "2021-04-16T16:43:14Z",
      "updatedAt": "2021-04-19T08:21:39Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8b66f4d00fc38cdf2138af7e35e1c2b8bee44736",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-19",
      "headRefOid": "e9d84db8a4acebabfeb2d55d36e55bfdd1225fd7",
      "closedAt": "2021-04-19T08:21:36Z",
      "mergedAt": "2021-04-19T08:21:36Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "1a417c6ffdf9830aa55d8aa3dee0bad11aeb8c65"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM3OTg5MzQ0",
          "commit": {
            "abbreviatedOid": "6d8bf4e"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-16T18:34:45Z",
          "updatedAt": "2021-04-16T18:34:46Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nto simplify existing operations can open QUIC up to various attacks as it\r\n```",
              "createdAt": "2021-04-16T18:34:45Z",
              "updatedAt": "2021-04-19T08:13:32Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4NTgwMDA2",
          "commit": {
            "abbreviatedOid": "486d09d"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-19T08:13:26Z",
          "updatedAt": "2021-04-19T08:13:27Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nTherefore, the use of address rewriting to ensure routing stability\r\ncan open QUIC up to various attacks, as it\r\nconceals client address changes, and as such masks important signals that\r\ndrive security mechanisms.\r\n\r\n```",
              "createdAt": "2021-04-19T08:13:26Z",
              "updatedAt": "2021-04-19T08:13:32Z"
            }
          ]
        }
      ]
    },
    {
      "number": 320,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE2OTg1NTY2",
      "title": "follow up on DDoS section changes",
      "url": "https://github.com/quicwg/ops-drafts/pull/320",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "We recently added this sentence but the text two paragraphs up already says this. Here is my proposed change, however, maybe we can shorten this paragraph even further.",
      "createdAt": "2021-04-16T17:04:11Z",
      "updatedAt": "2021-04-19T08:26:18Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "201995dbb2bc78bdcfc753cbd7bf6031cce4764f",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-20",
      "headRefOid": "6cbe769bfa840edd1e0a3fb4466d7c3a54c8e231",
      "closedAt": "2021-04-19T08:26:15Z",
      "mergedAt": "2021-04-19T08:26:15Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "58ad70e4052ecbdee539e8540c62ae5f17585ebd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4NTg2MDIx",
          "commit": {
            "abbreviatedOid": "c94fabd"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-19T08:20:01Z",
          "updatedAt": "2021-04-19T08:20:03Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nduring a DDoS attack. While unintended migration without a connection ID\r\nchange can be more easily supported, it might be acceptable to not\r\nsupport migrations of active QUIC connections that are not visible to\r\nthe network functions performing the DDoS detection. \r\nAs soon as the connection blocking is detected by the client,\r\nthe client may be able to rely on the fast resumption mechanism\r\n```",
              "createdAt": "2021-04-19T08:20:01Z",
              "updatedAt": "2021-04-19T08:23:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 321,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE3NzgwMzA0",
      "title": "Addition to filtering section to apply also for other than NAT",
      "url": "https://github.com/quicwg/ops-drafts/pull/321",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-19T08:29:32Z",
      "updatedAt": "2021-04-19T08:34:23Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "58ad70e4052ecbdee539e8540c62ae5f17585ebd",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-13",
      "headRefOid": "3758e87866670ad38afa72362ed365d1da6d3c35",
      "closedAt": "2021-04-19T08:34:17Z",
      "mergedAt": "2021-04-19T08:34:17Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "519dc8ff010f7f18a512d2c66196ec4afe93fca6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4NTk4MDE2",
          "commit": {
            "abbreviatedOid": "43763a9"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-19T08:32:17Z",
          "updatedAt": "2021-04-19T08:32:18Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n{{?RFC4787}} describes possible packet filtering behaviors that relate to NATs\r\nbut is often also used is other scenarios where packet filtering is desired.\r\n```",
              "createdAt": "2021-04-19T08:32:17Z",
              "updatedAt": "2021-04-19T08:32:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 322,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE5ODg5Nzgz",
      "title": "Clean up the abstract a bit",
      "url": "https://github.com/quicwg/ops-drafts/pull/322",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "Read this for the first time in a while and the document has drifted slightly.",
      "createdAt": "2021-04-21T06:23:14Z",
      "updatedAt": "2021-04-21T12:09:02Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "fca9cf1197354e2e0bc4b178d3dfd22ebf342e66",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "britram-abstract",
      "headRefOid": "864e480d577a50a96450c0b31232ae249a0ad8ac",
      "closedAt": "2021-04-21T12:08:58Z",
      "mergedAt": "2021-04-21T12:08:58Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "3d51aa443b39cda36e4281f6d79f8e7e1c126521"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwNzI2NTky",
          "commit": {
            "abbreviatedOid": "e99b5b6"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-21T07:45:25Z",
          "updatedAt": "2021-04-21T07:45:25Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\noperators who rely on the use of transport-aware network functions and the\r\nimplementors of those functions.\r\n```\r\n\r\n\"e.g.\" in an abstract seems wrong to me.  I would say that using \"for example\" here is fraught because of the sheer diversity of transport-aware network functions.  Security, troubleshooting, capacity planning, load balancing, flow management, accounting, and more would be closer to a representative list, but I fear even that wouldn't be enough.",
              "createdAt": "2021-04-21T07:45:25Z",
              "updatedAt": "2021-04-21T12:07:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwNzkyMzY0",
          "commit": {
            "abbreviatedOid": "e99b5b6"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-21T08:55:02Z",
          "updatedAt": "2021-04-21T08:55:43Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Not sure it is clear what is meant by \"service operators\"",
              "createdAt": "2021-04-21T08:55:02Z",
              "updatedAt": "2021-04-21T12:07:57Z"
            },
            {
              "originalPosition": 10,
              "body": "I don't think the addition of \"as well as the implementors of those functions\" is needed...",
              "createdAt": "2021-04-21T08:55:33Z",
              "updatedAt": "2021-04-21T12:07:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwNzk0Nzk0",
          "commit": {
            "abbreviatedOid": "e99b5b6"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-21T08:57:22Z",
          "updatedAt": "2021-04-21T08:57:22Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Agreed, reluctantly.",
              "createdAt": "2021-04-21T08:57:22Z",
              "updatedAt": "2021-04-21T12:07:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwNzk2MDcw",
          "commit": {
            "abbreviatedOid": "e011f1f"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-21T08:58:38Z",
          "updatedAt": "2021-04-21T08:58:38Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I wanted to call out specifically that vendors in the operations space (not just operators themselves) should pay attention to this. However, if that's implied, we can cut it.",
              "createdAt": "2021-04-21T08:58:38Z",
              "updatedAt": "2021-04-21T12:07:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwODQ1OTMx",
          "commit": {
            "abbreviatedOid": "e011f1f"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-21T09:36:10Z",
          "updatedAt": "2021-04-21T09:36:10Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "so maybe \"network operators and network equipment vendors\"...? However, not sure we really need to call this out separately...",
              "createdAt": "2021-04-21T09:36:10Z",
              "updatedAt": "2021-04-21T12:07:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwODU1MTUy",
          "commit": {
            "abbreviatedOid": "e011f1f"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-21T09:39:50Z",
          "updatedAt": "2021-04-21T09:39:51Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I think we can cut this but I would have preferred to keep the examples.I don't see any problems with having e.g. in the abstract.",
              "createdAt": "2021-04-21T09:39:50Z",
              "updatedAt": "2021-04-21T12:07:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwOTg1MzI5",
          "commit": {
            "abbreviatedOid": "e011f1f"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-21T12:06:53Z",
          "updatedAt": "2021-04-21T12:06:54Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\non the implications of QUIC's design and wire image on network operations\r\ninvolving QUIC traffic. Its intended audience is network operators and\r\nequipment vendors who rely on the use of transport-aware network\r\nfunctions and the implementors of those functions.\r\n```",
              "createdAt": "2021-04-21T12:06:53Z",
              "updatedAt": "2021-04-21T12:07:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwOTg2MTIy",
          "commit": {
            "abbreviatedOid": "789df63"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-21T12:07:51Z",
          "updatedAt": "2021-04-21T12:07:51Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\non the implications of QUIC's design and wire image on network operations\r\ninvolving QUIC traffic. Its intended audience is network operators and\r\nequipment vendors who rely on the use of transport-aware network\r\nfunctions.\r\n```",
              "createdAt": "2021-04-21T12:07:51Z",
              "updatedAt": "2021-04-21T12:07:57Z"
            }
          ]
        }
      ]
    },
    {
      "number": 323,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE5OTE1MjAx",
      "title": "some deduplication in the introduction",
      "url": "https://github.com/quicwg/ops-drafts/pull/323",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "",
      "createdAt": "2021-04-21T07:11:37Z",
      "updatedAt": "2021-04-21T08:52:44Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "fca9cf1197354e2e0bc4b178d3dfd22ebf342e66",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "britram-intro",
      "headRefOid": "9b99d90cea96414a33975b33ff692b7d63b7b7af",
      "closedAt": "2021-04-21T08:52:42Z",
      "mergedAt": "2021-04-21T08:52:41Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "9d5289335c5a1eca7d1d7fd4ba3d4d393ed5889c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwNzIzMDIz",
          "commit": {
            "abbreviatedOid": "c942f97"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-21T07:41:21Z",
          "updatedAt": "2021-04-21T07:41:42Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "These first two sentences are pure duplication of the previous paragraph.  Mistake?\r\n\r\nMaybe you can just drop the previous paragraph (I think that I prefer this one).",
              "createdAt": "2021-04-21T07:41:22Z",
              "updatedAt": "2021-04-21T08:20:10Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwNzU3NTAz",
          "commit": {
            "abbreviatedOid": "c942f97"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-21T08:19:22Z",
          "updatedAt": "2021-04-21T08:19:23Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "ah, oops, that's a leftover from the editing process...",
              "createdAt": "2021-04-21T08:19:23Z",
              "updatedAt": "2021-04-21T08:20:10Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwNzU3NjY0",
          "commit": {
            "abbreviatedOid": "c942f97"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-21T08:19:33Z",
          "updatedAt": "2021-04-21T08:19:33Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-04-21T08:19:33Z",
              "updatedAt": "2021-04-21T08:20:10Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQwNzkwMDEx",
          "commit": {
            "abbreviatedOid": "9b99d90"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-21T08:52:37Z",
          "updatedAt": "2021-04-21T08:52:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 324,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE5OTgwODI0",
      "title": "Minor appendix reformat",
      "url": "https://github.com/quicwg/ops-drafts/pull/324",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "",
      "createdAt": "2021-04-21T08:49:10Z",
      "updatedAt": "2021-04-21T08:50:41Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "a96e33e0830b5890cabb5b8768f190d6b09622e6",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "britram-appendix",
      "headRefOid": "6ab04c8b0d61d58b7704a7de99c9eeb01d33ab10",
      "closedAt": "2021-04-21T08:50:38Z",
      "mergedAt": "2021-04-21T08:50:38Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "683674da3cad1c073d022898e5f1f256aeb29b6e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 326,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTAwNzA4",
      "title": "Don't say safe and idempotent",
      "url": "https://github.com/quicwg/ops-drafts/pull/326",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-05-06T05:08:28Z",
      "updatedAt": "2021-05-19T12:55:51Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "not-idempotent",
      "headRefOid": "ac7d8239655b3f113b02bac26a2c964069653bb6",
      "closedAt": "2021-05-19T12:55:50Z",
      "mergedAt": "2021-05-19T12:55:50Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "bd6854e9a846db104e35acaf74f41a2b11b5ccb7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 327,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTIzNTcx",
      "title": "The mention of a 5-tuple here doesn't help",
      "url": "https://github.com/quicwg/ops-drafts/pull/327",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "It is sort of redundant (because it says connection) and maybe sort of\r\nmisleading (QUIC connections only use a single 5-tuple at a time, so it\r\nis maybe correct, but also maybe not).",
      "createdAt": "2021-05-06T05:58:49Z",
      "updatedAt": "2021-05-19T12:57:07Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "5-tuple-irrelevant",
      "headRefOid": "ef619c506c674a486a665c9ac3c983261f1e67ac",
      "closedAt": "2021-05-19T12:57:07Z",
      "mergedAt": "2021-05-19T12:57:07Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "739b250d32ef99e547e853ccc711d234183e5f89"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 328,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTIzNjQ1",
      "title": "It is stream ID",
      "url": "https://github.com/quicwg/ops-drafts/pull/328",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "editorial",
        "ready-to-merge"
      ],
      "body": "This is the editorial convention we adopted for connection ID and what\r\nthe RFC editor correctly inferred also.",
      "createdAt": "2021-05-06T05:58:57Z",
      "updatedAt": "2021-05-19T12:20:07Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "lc-stream-id",
      "headRefOid": "ff8e3239c0e1f72c0971174702f86cc8a000830a",
      "closedAt": "2021-05-19T12:20:07Z",
      "mergedAt": "2021-05-19T12:20:06Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "8bc914373f9267559e984c10c2d662faf865b57b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 331,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTMwMjk0",
      "title": "Cite AltSvc when mentioning it",
      "url": "https://github.com/quicwg/ops-drafts/pull/331",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "",
      "createdAt": "2021-05-06T06:12:19Z",
      "updatedAt": "2021-05-19T12:23:38Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "cite-altsvc",
      "headRefOid": "f688189a3f8a2e173c07e4be24dc81615e0f89b4",
      "closedAt": "2021-05-19T12:23:38Z",
      "mergedAt": "2021-05-19T12:23:38Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "f1671240bb433288d44d676fc4c174c25a864f8d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 332,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTMyMTgw",
      "title": "Technically...",
      "url": "https://github.com/quicwg/ops-drafts/pull/332",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "You can associate packets with connections without a connection ID.  So\r\nrather than say something that is factually incorrect, let's just leave\r\nthe next paragraph to establish the right impression (that a connection\r\nID is highly recommended).  This text works without talking about\r\nzero-length connection IDs.",
      "createdAt": "2021-05-06T06:15:57Z",
      "updatedAt": "2021-05-19T12:57:39Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "zero-length-cid",
      "headRefOid": "401b448fef69b7fec0977c5eee17c1301d329bba",
      "closedAt": "2021-05-19T12:57:39Z",
      "mergedAt": "2021-05-19T12:57:39Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "eba6983ac3ad1f2394f6a46cd94119d1e6be8d8f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 333,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTM0Mzg4",
      "title": "Shorter text for failover text",
      "url": "https://github.com/quicwg/ops-drafts/pull/333",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The original was factually incorrect as a new path can be used before validating it.",
      "createdAt": "2021-05-06T06:20:03Z",
      "updatedAt": "2021-05-19T12:58:55Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "not-only-when-validated",
      "headRefOid": "86338aa3402d4530771a5eb6c0d7c53c0570bd30",
      "closedAt": "2021-05-19T12:58:55Z",
      "mergedAt": "2021-05-19T12:58:55Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "ab87898411ee1213f62dc9c351100d5ec0007305"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 334,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTM1Nzc4",
      "title": "Deciding to use a new path",
      "url": "https://github.com/quicwg/ops-drafts/pull/334",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The text here mentioned the decision to use a new path twice.  Also,\r\nprobing packets almost always include padding frames now: we require\r\nthat the datagram is full-sized when probing so that we can probe for\r\nMTU, and probing is almost certainly done with short header packets,\r\nwhere padding has to be inside the packet.",
      "createdAt": "2021-05-06T06:22:37Z",
      "updatedAt": "2021-05-19T13:00:37Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "decisions-decisions",
      "headRefOid": "2fdc5da4c952dcb8bfafdc795f8006e08ba65870",
      "closedAt": "2021-05-19T13:00:37Z",
      "mergedAt": "2021-05-19T13:00:37Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "3b16ade3400a7809d7700e4206cbf1664fa73510"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 335,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTQwMDcw",
      "title": "Server Retry editorial",
      "url": "https://github.com/quicwg/ops-drafts/pull/335",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "editorial",
        "ready-to-merge"
      ],
      "body": "No real changes here, just noting that \"Server Retry\" isn't really a thing.  Retry is, and servers use it, that's all.",
      "createdAt": "2021-05-06T06:30:03Z",
      "updatedAt": "2021-05-19T12:20:25Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "server-retry",
      "headRefOid": "5a5466756e648a4166575b48fef086094de919c2",
      "closedAt": "2021-05-19T12:20:25Z",
      "mergedAt": "2021-05-19T12:20:25Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "65af8ad626b6495e906856a315fd4e1a51c6169d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 336,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTUzNzg1",
      "title": "same 5-tuple, same connection",
      "url": "https://github.com/quicwg/ops-drafts/pull/336",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Probably, but not certain\r\n\r\nEspecially if you got it wrong regarding the connection ID.",
      "createdAt": "2021-05-06T06:52:18Z",
      "updatedAt": "2021-05-19T13:01:57Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3b16ade3400a7809d7700e4206cbf1664fa73510",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "likely-the-same",
      "headRefOid": "b444d30dc73988325e255609a955d30a6e8def62",
      "closedAt": "2021-05-19T13:01:57Z",
      "mergedAt": "2021-05-19T13:01:57Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "2b377eac1c962316cd1932d92a7794777db69433"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If there is no connection is how would an endpoint identify connection on the same 5-tuple then (for QUICv1)?",
          "createdAt": "2021-05-06T08:57:53Z",
          "updatedAt": "2021-05-06T08:57:53Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "It is possible to run multiple connections on the same tuple with trial decryption.",
          "createdAt": "2021-05-07T00:07:47Z",
          "updatedAt": "2021-05-07T00:07:47Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYwNDg2Nzk1",
          "commit": {
            "abbreviatedOid": "cd7b07b"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-05-17T00:47:50Z",
          "updatedAt": "2021-05-17T00:47:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 337,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTU1MjI5",
      "title": "Initial packets are padded, not just Client Initial",
      "url": "https://github.com/quicwg/ops-drafts/pull/337",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "",
      "createdAt": "2021-05-06T06:54:49Z",
      "updatedAt": "2021-05-19T12:22:57Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "padded-packets",
      "headRefOid": "f924aaeec865c2d4b04b478ed410731817ff1468",
      "closedAt": "2021-05-19T12:22:56Z",
      "mergedAt": "2021-05-19T12:22:56Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "b4b4257f275155626a8ca445656c89f9a5b88c54"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 338,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTYwNTQ2",
      "title": "Handshake packets that are sent before cryptographic context is estab\u2026",
      "url": "https://github.com/quicwg/ops-drafts/pull/338",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "\u2026lished\r\n\r\nAre called Initial packets.",
      "createdAt": "2021-05-06T07:03:49Z",
      "updatedAt": "2021-05-19T12:23:21Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "handshake-before-is-initial",
      "headRefOid": "d835687fedf87b6c77e28a5dbc9a11e125495dd7",
      "closedAt": "2021-05-19T12:23:21Z",
      "mergedAt": "2021-05-19T12:23:21Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "3b827912510a486eea4accd8aa3c4795f872ecd6"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 341,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTY1NDIy",
      "title": "Port 443 is more of a guideline",
      "url": "https://github.com/quicwg/ops-drafts/pull/341",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "No client currently attempts to use UDP port 443 for HTTP/3 without\r\nfirst having been told to do so, most often by AltSvc or HTTPS records.\r\nTechnically we can also use the URL to decide to use QUIC, but that\r\ndoesn't currently happen.  With HTTPS records, that might never be\r\nnecessary.\r\n\r\nCloses #340.",
      "createdAt": "2021-05-06T07:11:54Z",
      "updatedAt": "2021-05-19T12:24:00Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "port-convention",
      "headRefOid": "41fd664f3018879877c43bf05b882736eb2bf2f8",
      "closedAt": "2021-05-19T12:23:59Z",
      "mergedAt": "2021-05-19T12:23:59Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "5ee84161883eb0351c1be2076de5540495e2482d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 343,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTczMTI4",
      "title": "This phrasing might be clearer",
      "url": "https://github.com/quicwg/ops-drafts/pull/343",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "editorial",
        "ready-to-merge"
      ],
      "body": "As x to y might be read to be inclusive, rather than exclusive of the\r\nend value.",
      "createdAt": "2021-05-06T07:23:48Z",
      "updatedAt": "2021-05-19T12:20:50Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "two-to-six-or-five",
      "headRefOid": "c6a84cb2ec14b20b0b1f74679a1dc48001b25a8a",
      "closedAt": "2021-05-19T12:20:50Z",
      "mergedAt": "2021-05-19T12:20:49Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "115bfc294d5339a576ae0ded2781d58d9624c566"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 345,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTc5ODQ2",
      "title": "This phrasing seems more natural",
      "url": "https://github.com/quicwg/ops-drafts/pull/345",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "editorial",
        "ready-to-merge"
      ],
      "body": "",
      "createdAt": "2021-05-06T07:34:05Z",
      "updatedAt": "2021-05-19T12:22:27Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "spin-phrasing",
      "headRefOid": "e927b3c59cbf12a9fa6eb448b52dea2d24368ff3",
      "closedAt": "2021-05-19T12:22:27Z",
      "mergedAt": "2021-05-19T12:22:27Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "dbaf259a458ca15eac4066258c3d6bb2c228225e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTI2MjUw",
          "commit": {
            "abbreviatedOid": "f713a30"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T12:21:28Z",
          "updatedAt": "2021-05-19T12:21:28Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nround-trip time (RTT) any time that both endpoints are sending packets\r\n```",
              "createdAt": "2021-05-19T12:21:28Z",
              "updatedAt": "2021-05-19T12:21:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 347,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTgyMTEz",
      "title": "Strike discussion of lower and higher timeouts",
      "url": "https://github.com/quicwg/ops-drafts/pull/347",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes #346.",
      "createdAt": "2021-05-06T07:37:30Z",
      "updatedAt": "2021-05-19T12:54:15Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "2-minutes",
      "headRefOid": "19565ea6f2b5e96870fba7a810ffc5da869cb02a",
      "closedAt": "2021-05-19T12:54:15Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "merging #350 instead",
          "createdAt": "2021-05-19T12:54:14Z",
          "updatedAt": "2021-05-19T12:54:14Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 348,
      "id": "MDExOlB1bGxSZXF1ZXN0NjMxMTg0Mzg2",
      "title": "rewriting conclusion is repetitive",
      "url": "https://github.com/quicwg/ops-drafts/pull/348",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "This is already set clearly enough in the previous two paragraphs.",
      "createdAt": "2021-05-06T07:40:46Z",
      "updatedAt": "2021-05-26T11:44:58Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "redundant-dont",
      "headRefOid": "643b52c10ae2eb01c8e6d9dd21e08504d4819379",
      "closedAt": "2021-05-26T11:44:58Z",
      "mergedAt": "2021-05-26T11:44:58Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "7f9ee84e6de0d22c7fef5947ad72fbb55330fa77"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzNjUxNDgy",
          "commit": {
            "abbreviatedOid": "643b52c"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-05-19T20:53:11Z",
          "updatedAt": "2021-05-19T20:53:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 349,
      "id": "MDExOlB1bGxSZXF1ZXN0NjM3MDQ1Mjk4",
      "title": "not distinguishable by passive observer",
      "url": "https://github.com/quicwg/ops-drafts/pull/349",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #339",
      "createdAt": "2021-05-10T07:22:16Z",
      "updatedAt": "2021-05-19T12:35:07Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-1",
      "headRefOid": "9cf1699a12cffe39e08c46564484d6201743aef6",
      "closedAt": "2021-05-19T12:35:07Z",
      "mergedAt": "2021-05-19T12:35:07Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "81a5bf3c983d0fe37ca1dd30523c98965d9fecbf"
      },
      "comments": [
        {
          "author": "SpencerDawkins",
          "authorAssociation": "NONE",
          "body": "@mirjak, thank you for your help with this. ",
          "createdAt": "2021-05-11T00:39:22Z",
          "updatedAt": "2021-05-11T00:39:22Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 350,
      "id": "MDExOlB1bGxSZXF1ZXN0NjM3NDkxODU1",
      "title": "Suggest NAT STATE update to draft-ietf-quic-manageability.md",
      "url": "https://github.com/quicwg/ops-drafts/pull/350",
      "state": "MERGED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is an attempt to clearly say what the problem is with NAT state timeout and what is a recommended approach.",
      "createdAt": "2021-05-10T12:04:47Z",
      "updatedAt": "2021-05-19T12:56:02Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "f7d0ccdeefb72729977658002e20d76bdd530d22",
      "headRepository": "gorryfair/ops-drafts",
      "headRefName": "patch-2",
      "headRefOid": "d76c8557ae00a63d71d5fa0958df057e78f666d9",
      "closedAt": "2021-05-19T12:56:02Z",
      "mergedAt": "2021-05-19T12:56:01Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "82470713a1c7aee446c177d332fa8ad05fc49b15"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU1NjAwNzAy",
          "commit": {
            "abbreviatedOid": "e771ae8"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-10T12:46:05Z",
          "updatedAt": "2021-05-10T12:46:07Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nThe recommendation is therefore that, even when lower state timeouts are\r\nused for other UDP traffic, a state timeout of at least two minutes \r\nought to be used for QUIC traffic.\r\n```",
              "createdAt": "2021-05-10T12:46:06Z",
              "updatedAt": "2021-05-10T12:46:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU2MTMwMDgw",
          "commit": {
            "abbreviatedOid": "e771ae8"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "This is better.  With Mirja's suggestion.",
          "createdAt": "2021-05-10T22:19:50Z",
          "updatedAt": "2021-05-10T22:19:50Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTYxNjk2",
          "commit": {
            "abbreviatedOid": "0fd7787"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T12:52:59Z",
          "updatedAt": "2021-05-19T12:52:59Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nIn contrast, {{?RFC5382}} recommends a state timeout of more than 2\r\nhours for TCP, given that TCP is a connection-oriented protocol with well-\r\ndefined closure semantics.\r\n```",
              "createdAt": "2021-05-19T12:52:59Z",
              "updatedAt": "2021-05-19T12:52:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTYxODM4",
          "commit": {
            "abbreviatedOid": "0fd7787"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T12:53:08Z",
          "updatedAt": "2021-05-19T12:53:09Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n{{?RFC4787}} requires a network state timeout that is not less than 2 minutes\r\nfor most UDP traffic.  However, in practice, a QUIC endpoint can experience\r\nlower timeouts, in the range of 30 to 60 seconds.\r\n```",
              "createdAt": "2021-05-19T12:53:08Z",
              "updatedAt": "2021-05-19T12:53:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTYyMTcz",
          "commit": {
            "abbreviatedOid": "0fd7787"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T12:53:27Z",
          "updatedAt": "2021-05-19T12:53:28Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nkeep-alive packets.\r\n\r\nThe recommendation is therefore that, even when lower state timeouts are\r\nused for other UDP traffic, a state timeout of at least two minutes\r\nought to be used for QUIC traffic.\r\n```",
              "createdAt": "2021-05-19T12:53:27Z",
              "updatedAt": "2021-05-19T12:53:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTY0MjU0",
          "commit": {
            "abbreviatedOid": "d76c855"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Looks good",
          "createdAt": "2021-05-19T12:55:24Z",
          "updatedAt": "2021-05-19T12:55:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 353,
      "id": "MDExOlB1bGxSZXF1ZXN0NjM3NzkzNDQ0",
      "title": "Ian's Editorial Part 1",
      "url": "https://github.com/quicwg/ops-drafts/pull/353",
      "state": "MERGED",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This goes to the end of \"Server Name Indication\"\r\n\r\nSome changes are attempts at clarifications, but I could have incorrectly clarified something, so feel free to reject changes.",
      "createdAt": "2021-05-10T14:57:27Z",
      "updatedAt": "2021-05-19T12:35:42Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "16e8f46db0aaf7cd994a72c2ac4c4ae696d7e755",
      "headRepository": "ianswett/ops-drafts",
      "headRefName": "patch-2",
      "headRefOid": "f4a9476d33652369811790655a9c7942726f3e27",
      "closedAt": "2021-05-19T12:35:42Z",
      "mergedAt": "2021-05-19T12:35:42Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "f7d0ccdeefb72729977658002e20d76bdd530d22"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 355,
      "id": "MDExOlB1bGxSZXF1ZXN0NjM4NDM2NTk3",
      "title": "Ian's editorial suggestions 2",
      "url": "https://github.com/quicwg/ops-drafts/pull/355",
      "state": "MERGED",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "",
      "createdAt": "2021-05-10T20:58:19Z",
      "updatedAt": "2021-05-19T12:32:07Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "df197370dc4529711c5b9526076361a7d8338eff",
      "headRepository": "ianswett/ops-drafts",
      "headRefName": "patch-3",
      "headRefOid": "f54607ce1b239aac6c936cb711cd4c6355036e22",
      "closedAt": "2021-05-19T12:32:07Z",
      "mergedAt": "2021-05-19T12:32:07Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "16e8f46db0aaf7cd994a72c2ac4c4ae696d7e755"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTM3MzYw",
          "commit": {
            "abbreviatedOid": "7a17613"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T12:31:46Z",
          "updatedAt": "2021-05-19T12:31:46Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nQUIC flows entirely rather than dropping packets indiscriminately.\r\n```",
              "createdAt": "2021-05-19T12:31:46Z",
              "updatedAt": "2021-05-19T12:31:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 356,
      "id": "MDExOlB1bGxSZXF1ZXN0NjM4NTk5Nzg0",
      "title": "Fix typo",
      "url": "https://github.com/quicwg/ops-drafts/pull/356",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-05-10T22:41:27Z",
      "updatedAt": "2021-05-17T11:38:16Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "patch-3",
      "headRefOid": "6597d19ee8eb17d9e322adb725cc5b6f71e8d65d",
      "closedAt": "2021-05-17T11:38:16Z",
      "mergedAt": "2021-05-17T11:38:16Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "a3a436ef0228147a11dd80d3b3933d2c490a8e1f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 359,
      "id": "MDExOlB1bGxSZXF1ZXN0NjM4NjQ1Nzg1",
      "title": "typo",
      "url": "https://github.com/quicwg/ops-drafts/pull/359",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-05-10T23:08:31Z",
      "updatedAt": "2021-05-17T11:37:59Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "patch-4",
      "headRefOid": "fedcc4e6276085484bf145adf929e45e10b3bea7",
      "closedAt": "2021-05-17T11:37:59Z",
      "mergedAt": "2021-05-17T11:37:59Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "4dd3d0a89e522127d1d1f6acade7691cd9a06584"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 361,
      "id": "MDExOlB1bGxSZXF1ZXN0NjQwNzY5OTQ0",
      "title": "Editorial nits, WGLC2, Manageability",
      "url": "https://github.com/quicwg/ops-drafts/pull/361",
      "state": "MERGED",
      "author": "MikeBishop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "editorial",
        "ready-to-merge"
      ],
      "body": "",
      "createdAt": "2021-05-11T14:57:32Z",
      "updatedAt": "2021-05-19T12:28:52Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "31fc9db56f7fd625ae93024574a3b0d84158e608",
      "headRepository": "MikeBishop/ops-drafts",
      "headRefName": "mbishop_wglc2_manageability",
      "headRefOid": "3027a6af823de2d4682ac5556de54279fde069da",
      "closedAt": "2021-05-19T12:28:51Z",
      "mergedAt": "2021-05-19T12:28:51Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "df197370dc4529711c5b9526076361a7d8338eff"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTI5OTAx",
          "commit": {
            "abbreviatedOid": "a70ba64"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T12:25:19Z",
          "updatedAt": "2021-05-19T12:25:20Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nMultiple QUIC packets may be coalesced into a single UDP datagram,\r\nwith a datagram\r\n```",
              "createdAt": "2021-05-19T12:25:19Z",
              "updatedAt": "2021-05-19T12:25:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTMwMTI4",
          "commit": {
            "abbreviatedOid": "a70ba64"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T12:25:34Z",
          "updatedAt": "2021-05-19T12:25:34Z",
          "comments": [
            {
              "originalPosition": 122,
              "body": "```suggestion\r\nthe Version Negotiation packet, the connection IDs of the client's\r\nInitial packet\r\n```",
              "createdAt": "2021-05-19T12:25:34Z",
              "updatedAt": "2021-05-19T12:25:34Z"
            }
          ]
        }
      ]
    },
    {
      "number": 370,
      "id": "MDExOlB1bGxSZXF1ZXN0NjQ1MTE3NzE0",
      "title": "PMTUD polish.",
      "url": "https://github.com/quicwg/ops-drafts/pull/370",
      "state": "MERGED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Address #366; Clarify what RFC8201 specifies; Consistently using \"network segment\"; Moved the IP cache discussion to end of section and adds #325.",
      "createdAt": "2021-05-15T10:13:17Z",
      "updatedAt": "2021-05-19T13:15:17Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "2b377eac1c962316cd1932d92a7794777db69433",
      "headRepository": "gorryfair/ops-drafts",
      "headRefName": "patch-3",
      "headRefOid": "715108359ad4dd7d5c1251688f2cbd43267923af",
      "closedAt": "2021-05-19T13:15:17Z",
      "mergedAt": "2021-05-19T13:15:17Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "e7e40a6bb1b2925f32d577c16f7777d88fd9873e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTgyMDI3",
          "commit": {
            "abbreviatedOid": "5602ca7"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T13:11:51Z",
          "updatedAt": "2021-05-19T13:11:52Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nSome network segments support 1500-byte packets,\r\nbut can only do so by fragmenting at a\r\nlower layer before traversing a network segment with a smaller MTU,\r\nand then reassembling within the network segment.\r\n```",
              "createdAt": "2021-05-19T13:11:51Z",
              "updatedAt": "2021-05-19T13:11:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTgyMzcx",
          "commit": {
            "abbreviatedOid": "5602ca7"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T13:12:07Z",
          "updatedAt": "2021-05-19T13:12:08Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nbecause fragmention occurs below the IP layer.\r\nHowever, this process can add to compute\r\n```",
              "createdAt": "2021-05-19T13:12:07Z",
              "updatedAt": "2021-05-19T13:12:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTgyODI0",
          "commit": {
            "abbreviatedOid": "5602ca7"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T13:12:29Z",
          "updatedAt": "2021-05-19T13:12:29Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nThis mechanism encourages senders to approach the maximum packet size, which\r\ncould then cause fragmentation within a network segment of which\r\nthey may not be aware.\r\n```",
              "createdAt": "2021-05-19T13:12:29Z",
              "updatedAt": "2021-05-19T13:12:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTgzMTUx",
          "commit": {
            "abbreviatedOid": "5602ca7"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T13:12:44Z",
          "updatedAt": "2021-05-19T13:12:45Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nA network cannot know in advance which discovery method is used by a QUIC\r\nendpoint, so it should send a PTB message in addition to dropping an\r\n```",
              "createdAt": "2021-05-19T13:12:44Z",
              "updatedAt": "2021-05-19T13:12:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTg0MzE0",
          "commit": {
            "abbreviatedOid": "5602ca7"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T13:13:42Z",
          "updatedAt": "2021-05-19T13:13:44Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "```suggestion\r\nvalidation requirements of {{Section 14.2.1 of QUIC-TRANSPORT}}, otherwise\r\nit will be ignored for PMTU discovery. This provides a signal to the\r\nendpoint to prevent the packet size from growing too large, which can\r\nentirely avoid network segment fragmentation for that flow.\r\n\r\nEndpoints can cache PMTU information, in the IP-layer cache. This short-term\r\nconsistency between the PMTU for flows can help avoid an endpoint using a\r\nPMTU that is inefficient. The IP cache can also influence the PMTU value of\r\nother IP flows that use the same path {{?RFC8201}}{{?RFC8899}},\r\nincluding IP packets carrying\r\nprotocols other than QUIC. The representation of an IP path is\r\nimplementation-specific {{?RFC8201}}.\r\n```",
              "createdAt": "2021-05-19T13:13:42Z",
              "updatedAt": "2021-05-19T13:13:44Z"
            }
          ]
        }
      ]
    },
    {
      "number": 371,
      "id": "MDExOlB1bGxSZXF1ZXN0NjQ1MTE4MTYz",
      "title": "Fix ACK detection NiT",
      "url": "https://github.com/quicwg/ops-drafts/pull/371",
      "state": "MERGED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "Fix #363; Add ref to RFC3449 rather than explain how this works.",
      "createdAt": "2021-05-15T10:16:55Z",
      "updatedAt": "2021-05-19T12:24:29Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "gorryfair/ops-drafts",
      "headRefName": "patch-4",
      "headRefOid": "3d89820921329ce17c0ed42dd56b65fc5baea426",
      "closedAt": "2021-05-19T12:24:29Z",
      "mergedAt": "2021-05-19T12:24:28Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "38f68e475aa488ee2e7036f35e5dfdd3427db7d0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYwODYyOTQ1",
          "commit": {
            "abbreviatedOid": "3d89820"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-05-17T11:36:58Z",
          "updatedAt": "2021-05-17T11:36:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 372,
      "id": "MDExOlB1bGxSZXF1ZXN0NjQ1MTE5MjQ5",
      "title": "Update draft-ietf-quic-manageability.md",
      "url": "https://github.com/quicwg/ops-drafts/pull/372",
      "state": "MERGED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "NiT Fix 365 - The randomness described was a result of indiscriminate drops.",
      "createdAt": "2021-05-15T10:25:47Z",
      "updatedAt": "2021-05-19T12:26:18Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "b224e6846621e3f039e8b186b97fff00ee6b692b",
      "headRepository": "gorryfair/ops-drafts",
      "headRefName": "patch-6",
      "headRefOid": "e68f3572f990dc1ad652a736e11c5918378e6f89",
      "closedAt": "2021-05-19T12:26:18Z",
      "mergedAt": "2021-05-19T12:26:18Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "31fc9db56f7fd625ae93024574a3b0d84158e608"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTI2NTI5",
          "commit": {
            "abbreviatedOid": "a92a503"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T12:21:44Z",
          "updatedAt": "2021-05-19T12:21:45Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nHowever, blocking a random fraction of QUIC packets across 4-tuples will\r\n```",
              "createdAt": "2021-05-19T12:21:44Z",
              "updatedAt": "2021-05-19T12:21:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTI2NzY1",
          "commit": {
            "abbreviatedOid": "a92a503"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T12:22:01Z",
          "updatedAt": "2021-05-19T12:22:01Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nQUIC flows entirely rather than dropping packets indiscriminately.\r\n```",
              "createdAt": "2021-05-19T12:22:01Z",
              "updatedAt": "2021-05-19T12:22:01Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYzMTI3MDQw",
          "commit": {
            "abbreviatedOid": "cccf436"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-19T12:22:17Z",
          "updatedAt": "2021-05-19T12:22:18Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nallow many QUIC handshakes to complete, preventing a TCP failover,\r\n```",
              "createdAt": "2021-05-19T12:22:17Z",
              "updatedAt": "2021-05-19T12:22:18Z"
            }
          ]
        }
      ]
    },
    {
      "number": 373,
      "id": "MDExOlB1bGxSZXF1ZXN0NjQ3NzAyODcx",
      "title": "Editorial edits based on issues",
      "url": "https://github.com/quicwg/ops-drafts/pull/373",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #329, fixes #368, fixes #367",
      "createdAt": "2021-05-19T14:03:57Z",
      "updatedAt": "2021-05-26T11:46:50Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e7e40a6bb1b2925f32d577c16f7777d88fd9873e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-2",
      "headRefOid": "b57c246164bd7ff7768e47c6038df4d6d32c11a3",
      "closedAt": "2021-05-26T11:46:50Z",
      "mergedAt": "2021-05-26T11:46:50Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "f9a13b5df7de16cbac789d507fe26c86c3ea4e18"
      },
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "From PR #378: I'd also like to see something like :\r\n/In this section, we discuss those aspects of the QUIC transport protocol that/This section discusses those aspects of the QUIC transport protocol that/\r\n/Here, we are concerned primarily with the unencrypted part of QUIC's wire image\r\n {{WIRE-IMAGE}}, which we define as the information available in the packet/This section is concerned primarily with the unencrypted part of QUIC's wire image\r\n {{WIRE-IMAGE}}, defined as the information available in the packet/\r\n\r\nand\r\n/least four datagrams we'll call \"Client Initial\",/least four datagrams, labelled \"Client Initial\",/\r\n\r\nand\r\n/ 0-RTT data may also be\r\n seen in the Client Initial datagram, as shown in /When the client uses 0-RTT connection resumption, the Client Initial datagram can also carry 0-RTT data, as shown in/\r\nand\r\n/typically around 10 packets/typically to  around 10 packets/\r\nand\r\n/of a connection after one of one endpoint/of a connection after an endpoint/\r\n\r\nI'd prefer more like:\r\n/Though the guidance there holds, a particularly unwise behavior admits a\r\n handful of UDP packets and then makes a decision as to whether or not to filter\r\n later packets in the same connection. \r\n QUIC applications are encouraged to fail over to TCP if early packets do/\r\n... and I'll close PR #378.",
          "createdAt": "2021-05-26T09:57:24Z",
          "updatedAt": "2021-05-26T09:57:24Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY0NDMyNTg1",
          "commit": {
            "abbreviatedOid": "357be22"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-05-20T14:07:59Z",
          "updatedAt": "2021-05-20T14:22:14Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "I prefer either \"by\" as you had it before or drop \"as\" entirely.",
              "createdAt": "2021-05-20T14:07:59Z",
              "updatedAt": "2021-05-20T14:22:14Z"
            },
            {
              "originalPosition": 41,
              "body": "I don't think this is client-only in general, even if it is for HTTP/3.\r\n\r\n```suggestion\r\non the peer and an unpredictable closing period might not fit application or\r\n```",
              "createdAt": "2021-05-20T14:09:26Z",
              "updatedAt": "2021-05-20T14:22:14Z"
            },
            {
              "originalPosition": 74,
              "body": "```suggestion\r\nmanageability of QUIC see also {{?I-D.ietf-quic-manageability}}.\r\n```",
              "createdAt": "2021-05-20T14:22:06Z",
              "updatedAt": "2021-05-20T14:22:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY0NDc1Njk2",
          "commit": {
            "abbreviatedOid": "357be22"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-20T14:41:55Z",
          "updatedAt": "2021-05-20T14:41:55Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nbe beneficial in most cases, filling in gaps and freeing up the flow\r\n```",
              "createdAt": "2021-05-20T14:41:55Z",
              "updatedAt": "2021-05-20T14:41:55Z"
            }
          ]
        }
      ]
    },
    {
      "number": 374,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUzMzYzMjgz",
      "title": "Nits and smaller editorial changes based on issues",
      "url": "https://github.com/quicwg/ops-drafts/pull/374",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "fixes #354 #342 #362 #364 ",
      "createdAt": "2021-05-26T08:01:34Z",
      "updatedAt": "2021-06-02T12:05:45Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e7e40a6bb1b2925f32d577c16f7777d88fd9873e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-3",
      "headRefOid": "48151e63c99401f5a358ca9294d9e8d4b7d9f52b",
      "closedAt": "2021-06-02T12:05:45Z",
      "mergedAt": "2021-06-02T12:05:45Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "860c08625e7f8f9af0b2c38eac42dacb85ee3fb7"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "#362 still has two open points (\"is RFC8701 the right reference for greasing\" and \"should we refer draft-ietf-tsvwg-transport-encrypt\"). However we might just open two new issue for those if needed...",
          "createdAt": "2021-05-26T08:06:59Z",
          "updatedAt": "2021-05-26T08:06:59Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Comments from @gorryfair (but were posted on the wrong PR):\r\n\r\nFrom PR #378: I'd also like to see something like :\r\n/In this section, we discuss those aspects of the QUIC transport protocol that/This section discusses those aspects of the QUIC transport protocol that/\r\n/Here, we are concerned primarily with the unencrypted part of QUIC's wire image\r\n{{WIRE-IMAGE}}, which we define as the information available in the packet/This section is concerned primarily with the unencrypted part of QUIC's wire image\r\n{{WIRE-IMAGE}}, defined as the information available in the packet/\r\n\r\nand\r\n/least four datagrams we'll call \"Client Initial\",/least four datagrams, labelled \"Client Initial\",/\r\n\r\nand\r\n/ 0-RTT data may also be\r\nseen in the Client Initial datagram, as shown in /When the client uses 0-RTT connection resumption, the Client Initial datagram can also carry 0-RTT data, as shown in/\r\nand\r\n/typically around 10 packets/typically to around 10 packets/\r\nand\r\n/of a connection after one of one endpoint/of a connection after an endpoint/\r\n\r\nI'd prefer more like:\r\n/Though the guidance there holds, a particularly unwise behavior admits a\r\nhandful of UDP packets and then makes a decision as to whether or not to filter\r\nlater packets in the same connection.\r\nQUIC applications are encouraged to fail over to TCP if early packets do/\r\n... and I'll close PR #378. ",
          "createdAt": "2021-05-26T11:47:20Z",
          "updatedAt": "2021-05-26T11:47:20Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Added Gorry's additional comments. This should be ready to go!",
          "createdAt": "2021-05-26T12:33:08Z",
          "updatedAt": "2021-05-26T12:33:08Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4OTU3ODA3",
          "commit": {
            "abbreviatedOid": "275db15"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-26T12:32:31Z",
          "updatedAt": "2021-05-26T12:32:32Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nQUIC is a versioned protocol, the wire image of the header format can also\r\nchange from version to version. However, the field that identifies the QUIC\r\nversion in some packets, and the format of the Version Negotiation Packet,\r\nare both inspectable and invariant\r\n{{?QUIC-INVARIANTS=I-D.ietf-quic-invariants}}.\r\n```",
              "createdAt": "2021-05-26T12:32:32Z",
              "updatedAt": "2021-05-26T12:32:32Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY5MDIyOTE4",
          "commit": {
            "abbreviatedOid": "dd9e489"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-26T13:31:18Z",
          "updatedAt": "2021-05-26T13:31:19Z",
          "comments": [
            {
              "originalPosition": 228,
              "body": "```suggestion\r\ndowngrade attacks. Therefore, a network node should not attempt to impact\r\nversion selection, as version downgrade may result in connection failure.\r\n```",
              "createdAt": "2021-05-26T13:31:18Z",
              "updatedAt": "2021-05-26T13:31:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 375,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUzMzg1NDI1",
      "title": "More explanation about the APLN token \"h3\"",
      "url": "https://github.com/quicwg/ops-drafts/pull/375",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "fixes #360",
      "createdAt": "2021-05-26T08:16:26Z",
      "updatedAt": "2021-06-30T11:04:16Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e7e40a6bb1b2925f32d577c16f7777d88fd9873e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-4",
      "headRefOid": "c9f85e86aa8cdf036eafecd474ef4683459d6e2b",
      "closedAt": "2021-06-30T11:04:12Z",
      "mergedAt": "2021-06-30T11:04:12Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "d1b24ea796abec7782541642cd4bad4e0fb59cba"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Okay I made another pass on the text based on @martinthomson comments, however, it didn't get any short but maybe it's slight more clear now. Please re-review!\r\n\r\n(Also I moved some paragraphs around to improve the text flow; so the PR now looks bigger than it is. So we also need to update the section title now, which is \"Port Selection and Application Endpoint Discovery\"?)",
          "createdAt": "2021-06-02T16:27:18Z",
          "updatedAt": "2021-06-02T16:27:18Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4NzM5NTc4",
          "commit": {
            "abbreviatedOid": "a3290fd"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-26T08:30:06Z",
          "updatedAt": "2021-05-26T08:30:07Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nHTTP/3 endpoint on a certain UDP port by using the \"h3\" ALPN token.\r\n```",
              "createdAt": "2021-05-26T08:30:06Z",
              "updatedAt": "2021-05-26T08:30:07Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4ODA2MDE4",
          "commit": {
            "abbreviatedOid": "8ffe837"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-26T09:37:36Z",
          "updatedAt": "2021-05-26T09:37:38Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nstack in use but solves the versioning problem at the cost of future\r\nflexibility. Application protocol mappings written for QUIC version 1 or\r\nother QUIC versions may be able to benefit from version negotiation\r\nmechanisms that did not exist during the development of HTTP/3.\r\nCoupling QUIC version to ALPN tokens is one approach but not the\r\nonly approach.\r\n```",
              "createdAt": "2021-05-26T09:37:37Z",
              "updatedAt": "2021-05-26T09:38:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY5NjQ2NDQ1",
          "commit": {
            "abbreviatedOid": "b5342f4"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "We could say a lot or a little about this.  This is a lot.\r\n\r\nSaying much less would be my preference.  The more we say, the worse it becomes when viewed from the future.\r\n\r\nI would stick to the central facts:\r\n\r\n* QUIC version 1 did not define a complete version negotiation system.\r\n* HTTP/3 is defined as using only QUIC version 1.\r\n* No single approach has been selected for managing the use of different QUIC versions, either in HTTP/3 or in general.\r\n* This could change as the version negotiation scheme is developed and new protocol versions (at both application and transport layers) are defined.\r\n\r\nThe trick here is in deciding what to tell people who are building new application protocols.  The only answer I have there is \"watch what HTTP does\".  That isn't necessarily what you want to write down though, but if you think that you need advice, then maybe that's OK:\r\n\r\n> Application protocols that use QUIC need to consider how the protocol will manage different QUIC versions.  Decisions for those protocols might be informed by choices made by other protocols, like HTTP/3.",
          "createdAt": "2021-05-27T00:32:49Z",
          "updatedAt": "2021-05-27T00:32:49Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0NDUwMjgz",
          "commit": {
            "abbreviatedOid": "87020b0"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2021-06-02T16:45:40Z",
          "updatedAt": "2021-06-02T16:45:45Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "I propose that you simply delete this paragraph.\r\n\r\nFirst, I disagree that there is \"ambiguity of the used version.\" The version field is quite explicit; the only thing QUIC is missing is downgrade detection.\r\n\r\nMore broadly, I don't think we have a consensus on how ALPN will work with QUIC versions, so it is not possible to say anything useful here, unless we're going to have that conversation before this ships.\r\n\r\nThe rest of the new text is great.",
              "createdAt": "2021-06-02T16:45:40Z",
              "updatedAt": "2021-06-02T16:45:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0NDcwNTkw",
          "commit": {
            "abbreviatedOid": "87020b0"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-02T17:07:24Z",
          "updatedAt": "2021-06-02T17:07:24Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "This is all of the new text (I just move the other paragraphs around to make things fit). If we don't want this new part, I would like to keep this sentence from the old text instead because I think that's the important bit of information:\r\n\r\n`Note that HTTP/3's ALPN token (\"h3\") identifies not only the version of the application protocol, but also the version of QUIC itself`\r\n\r\nWe can remove the part about ambiguity... \r\n",
              "createdAt": "2021-06-02T17:07:24Z",
              "updatedAt": "2021-06-02T17:07:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0NDc0NzM5",
          "commit": {
            "abbreviatedOid": "87020b0"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-02T17:12:09Z",
          "updatedAt": "2021-06-02T17:12:10Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Well this is the part that I disagree with. I would like QUICv2 to also use the h3 token, and don't see why that's incompatible with the text in base-drafts.",
              "createdAt": "2021-06-02T17:12:09Z",
              "updatedAt": "2021-06-02T17:12:10Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0NzgzMTM1",
          "commit": {
            "abbreviatedOid": "87020b0"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I can make it shorter.\r\n\r\nMaybe not as short as @martinduke would have it, but still shorter :)",
          "createdAt": "2021-06-03T00:38:04Z",
          "updatedAt": "2021-06-03T00:46:29Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nALPN permits the\r\n```",
              "createdAt": "2021-06-03T00:38:04Z",
              "updatedAt": "2021-06-03T00:46:29Z"
            },
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nare required to register an ALPN token for use in the TLS handshake.\r\n```\r\n\r\nALPN - or something like it - is mandatory in QUIC.  But when TLS is used - and this is about QUIC v1 where TLS is used - that effectively means ALPN is mandatory.",
              "createdAt": "2021-06-03T00:40:59Z",
              "updatedAt": "2021-06-03T00:46:29Z"
            },
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nALPN token (\"h3\") to only apply to that version. \r\nSo far no single approach has been selected for\r\n```\r\nThe ambiguity exists as long as there is even the potential for another QUIC version.  Safer not to say anything.",
              "createdAt": "2021-06-03T00:41:57Z",
              "updatedAt": "2021-06-03T00:46:29Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nApplication protocols that use QUIC need to\r\n```\r\n\r\nI don't see there being any value in talking about this coupling further.",
              "createdAt": "2021-06-03T00:43:03Z",
              "updatedAt": "2021-06-03T00:46:30Z"
            },
            {
              "originalPosition": 51,
              "body": "I think that there is value in the statement; that it is currently true is useful information, but the text doesn't say that it is necessarily going to stay that way.\r\n\r\nIf the objection is to the implication, would it be more acceptable if it said \"HTTP/3 requires QUIC version 1 and defines the ALPN token (\"h3\") to only apply to that version.  This decision could be revised when new QUIC versions are defined.\"",
              "createdAt": "2021-06-03T00:46:03Z",
              "updatedAt": "2021-06-03T00:46:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0OTE4ODk3",
          "commit": {
            "abbreviatedOid": "87020b0"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-03T06:31:01Z",
          "updatedAt": "2021-06-03T06:31:05Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "While I think we have a lot of basic decisions still to make about ALPN and versioning, the warning at the end of your proposed text does make it clear that this is all in flux. I can live with it.",
              "createdAt": "2021-06-03T06:31:01Z",
              "updatedAt": "2021-06-03T06:31:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njk1ODY5NTc0",
          "commit": {
            "abbreviatedOid": "27beb1b"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-30T08:56:47Z",
          "updatedAt": "2021-06-30T08:56:47Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nALPN token (\"h3\") to only apply to that version.\r\n```",
              "createdAt": "2021-06-30T08:56:47Z",
              "updatedAt": "2021-06-30T08:56:47Z"
            }
          ]
        }
      ]
    },
    {
      "number": 376,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUzNDMzOTI3",
      "title": "note that DCID change after client initial",
      "url": "https://github.com/quicwg/ops-drafts/pull/376",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "this addresses a comment from @martinduke in issue #344",
      "createdAt": "2021-05-26T08:47:47Z",
      "updatedAt": "2021-06-02T12:18:11Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e7e40a6bb1b2925f32d577c16f7777d88fd9873e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-5",
      "headRefOid": "931e755ab64ba1bc4059d54e1c8361b911e332a5",
      "closedAt": "2021-06-02T12:18:11Z",
      "mergedAt": "2021-06-02T12:18:11Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "7f9f55f744861bce9e876b04e0784246e011708d"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In the interests of timely completion of the document, will go ahead and merge this; please open an issue if this doesn't work for you @martinduke :)",
          "createdAt": "2021-06-02T12:18:06Z",
          "updatedAt": "2021-06-02T12:18:06Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 377,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUzNDUyNzI5",
      "title": "Remove appendix A (gQUIC versions)",
      "url": "https://github.com/quicwg/ops-drafts/pull/377",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #357 fixes #351",
      "createdAt": "2021-05-26T08:59:56Z",
      "updatedAt": "2021-05-26T11:52:38Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e7e40a6bb1b2925f32d577c16f7777d88fd9873e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-6",
      "headRefOid": "43c2c41c727fe1ecade296798a236e82b52a5afb",
      "closedAt": "2021-05-26T11:52:38Z",
      "mergedAt": "2021-05-26T11:52:37Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "aac2317e1ecaf123e321c58e972ba93024c7aa83"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 378,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUzNDk0ODY0",
      "title": "Fixed as per#362 issue",
      "url": "https://github.com/quicwg/ops-drafts/pull/378",
      "state": "CLOSED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-05-26T09:30:53Z",
      "updatedAt": "2021-05-26T09:58:17Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e7e40a6bb1b2925f32d577c16f7777d88fd9873e",
      "headRepository": "gorryfair/ops-drafts",
      "headRefName": "patch-7",
      "headRefOid": "ba6afc377383bedfe81a8bafc09a8bb156da3b90",
      "closedAt": "2021-05-26T09:58:17Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I fixed this already in #373 ",
          "createdAt": "2021-05-26T09:33:01Z",
          "updatedAt": "2021-05-26T09:33:01Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The only thing I didn't fix was adding a reference to draft-ietf-tsvwg-transport-encrypt. However, you also didn't add one in your PR, did you @gorryfair ?",
          "createdAt": "2021-05-26T09:47:26Z",
          "updatedAt": "2021-05-26T09:47:26Z"
        },
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing this, and including key differences as a comment on #373 ",
          "createdAt": "2021-05-26T09:58:17Z",
          "updatedAt": "2021-05-26T09:58:17Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4ODI0OTMx",
          "commit": {
            "abbreviatedOid": "1184966"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-26T09:57:53Z",
          "updatedAt": "2021-05-26T09:57:54Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "```suggestion\r\nallows rebinding of a connection after one of the endpoints experienced\r\n```",
              "createdAt": "2021-05-26T09:57:54Z",
              "updatedAt": "2021-05-26T09:57:54Z"
            }
          ]
        }
      ]
    },
    {
      "number": 379,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUzNTE1Nzc5",
      "title": "More aspects of setting DSCPs",
      "url": "https://github.com/quicwg/ops-drafts/pull/379",
      "state": "MERGED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "",
      "createdAt": "2021-05-26T09:48:21Z",
      "updatedAt": "2021-06-02T12:16:48Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e7e40a6bb1b2925f32d577c16f7777d88fd9873e",
      "headRepository": "gorryfair/ops-drafts",
      "headRefName": "patch-8",
      "headRefOid": "0568e75b27e4a4cc8ff291018aec16cd4a41404d",
      "closedAt": "2021-06-02T12:16:48Z",
      "mergedAt": "2021-06-02T12:16:48Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "249a2ba717d1f6b7888a6ac244e54b22eb484eb5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4ODI4MDYy",
          "commit": {
            "abbreviatedOid": "d12ca5d"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-26T10:01:21Z",
          "updatedAt": "2021-05-26T10:01:22Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nIf a packet enters a network segment that does not support the DSCP value,\r\nthis could result in the connection not receiving the network treatment\r\nit expects. The DSCP value in this packet could also be remarked as the\r\npacket travels along the network path, changing the requested treatment.\r\n\r\nWhen multiplexing multiple flows over a QUIC connection, the selected\r\nDSCP value should be the one associated with the highest priority requested\r\nfor all multiplexed flows.\r\n\r\n```",
              "createdAt": "2021-05-26T10:01:21Z",
              "updatedAt": "2021-05-26T10:01:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4ODI4MzU5",
          "commit": {
            "abbreviatedOid": "d12ca5d"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-26T10:01:40Z",
          "updatedAt": "2021-05-26T10:01:41Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\n{{packetnumber}}). However, the recovery mechanism used by a flow cannot be\r\n```",
              "createdAt": "2021-05-26T10:01:41Z",
              "updatedAt": "2021-05-26T10:01:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4ODI4Nzg4",
          "commit": {
            "abbreviatedOid": "ebcc983"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-26T10:02:08Z",
          "updatedAt": "2021-05-26T10:02:09Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\ntreatment.\r\n```",
              "createdAt": "2021-05-26T10:02:08Z",
              "updatedAt": "2021-05-26T10:02:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4OTIyOTI5",
          "commit": {
            "abbreviatedOid": "a836988"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2021-05-26T11:54:50Z",
          "updatedAt": "2021-05-26T11:54:55Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "This text would be a better fit for the applicability draft, no?",
              "createdAt": "2021-05-26T11:54:50Z",
              "updatedAt": "2021-05-26T11:54:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4OTQ5MTMx",
          "commit": {
            "abbreviatedOid": "a836988"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-26T12:23:34Z",
          "updatedAt": "2021-05-26T12:23:34Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "OK - I see we need two PRs. I'll edit this one as NiTs for manageability, and start another for applicability!",
              "createdAt": "2021-05-26T12:23:34Z",
              "updatedAt": "2021-05-26T12:23:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcxMTE0OTg4",
          "commit": {
            "abbreviatedOid": "0568e75"
          },
          "author": "gloinul",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "I think the recommendation of using a single DSCP value per QUIC connection transport path at any time in the connections life time could be clearer. I also think that adding a reference to RFC 7657 could help to provide background why that is necessary without having to expand this text. ",
          "createdAt": "2021-05-28T09:33:22Z",
          "updatedAt": "2021-05-28T09:36:33Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "I would suggest making it clear that this is per transport flow, i.e. and not streams or their datagram equivalent that is called datagram flows. So maybe it would be clearer to state this in relation ship to a QUIC connection? ",
              "createdAt": "2021-05-28T09:33:22Z",
              "updatedAt": "2021-05-28T09:36:33Z"
            },
            {
              "originalPosition": 5,
              "body": "I wonder if a reference to RFC7657 would make sense also here. ",
              "createdAt": "2021-05-28T09:35:00Z",
              "updatedAt": "2021-05-28T09:36:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcxMTkyMDU3",
          "commit": {
            "abbreviatedOid": "0568e75"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-28T11:13:16Z",
          "updatedAt": "2021-05-28T11:13:17Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "Actually connection\"lifetime\" is too prescriptive... if you really want/need a sender can change the DSCP within a connection, but this really needs to be infrequent to prevent significant disruption to the CC, replay-protection, etc. I'd rather not drill there. I elsewhere added a ref to an RFC that says all this.",
              "createdAt": "2021-05-28T11:13:16Z",
              "updatedAt": "2021-05-28T11:13:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcxMTk0NDQz",
          "commit": {
            "abbreviatedOid": "0568e75"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-28T11:16:40Z",
          "updatedAt": "2021-05-28T11:16:40Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "/flow/ is used rather a lot in this spec. I think it might be clear, or require a change-all to /network flow/ to avoid potential misreading with QUIC datagram flows? Thoughts?",
              "createdAt": "2021-05-28T11:16:40Z",
              "updatedAt": "2021-05-28T11:16:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcxMjAwMDk4",
          "commit": {
            "abbreviatedOid": "0568e75"
          },
          "author": "gloinul",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-28T11:24:42Z",
          "updatedAt": "2021-05-28T11:24:43Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "To be clear I didn't mean the full life time of the QUIC connection, I do mean use the same DSCP over a consecutive set of packets and one should really not switch back and forth. So I think we are in agreement. \r\n\r\nConsidering that the QUIC spec do have recommendations for path changes, one way to deal with this that requires little text is to basically to treat any change of DSCP as a path when it comes to CC and recovery and basically execute Section 9.4 of RFC 9000. However, I do realize that likely should be speced better as you also have to consider what the validation is for a DSCP change and if there is a risk to use DSCP changes for DoS attacks keeping down the rate. So you are likely correct that keeping this simple and only be clearer on that changes should be very infrequent. ",
              "createdAt": "2021-05-28T11:24:43Z",
              "updatedAt": "2021-05-28T11:24:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0MTE0OTY0",
          "commit": {
            "abbreviatedOid": "0568e75"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-02T12:11:55Z",
          "updatedAt": "2021-06-02T12:11:55Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "@gorryfair could you come to a conclusion here so we can merge? thanks!",
              "createdAt": "2021-06-02T12:11:55Z",
              "updatedAt": "2021-06-02T12:11:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0MTE1MTYy",
          "commit": {
            "abbreviatedOid": "0568e75"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-02T12:12:05Z",
          "updatedAt": "2021-06-02T12:12:05Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "PRs cheerfully accepted :)",
              "createdAt": "2021-06-02T12:12:05Z",
              "updatedAt": "2021-06-02T12:12:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0MTE3MDY2",
          "commit": {
            "abbreviatedOid": "0568e75"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-02T12:14:05Z",
          "updatedAt": "2021-06-02T12:14:05Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Actually, scratch that; I think the reference belongs in Applicability (PR #383).",
              "createdAt": "2021-06-02T12:14:05Z",
              "updatedAt": "2021-06-02T12:14:06Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0MTE5MzE2",
          "commit": {
            "abbreviatedOid": "0568e75"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-02T12:16:25Z",
          "updatedAt": "2021-06-02T12:16:25Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "Actually, the resolution to this discussion also looks like it probably belongs in the Applicability draft (PR #383); will merge this and you can continue the discussion over there :)",
              "createdAt": "2021-06-02T12:16:25Z",
              "updatedAt": "2021-06-02T12:16:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 380,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUzNjY1NTc1",
      "title": "Note DCID must be extracted from Client Initial",
      "url": "https://github.com/quicwg/ops-drafts/pull/380",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "Addresses #344",
      "createdAt": "2021-05-26T12:00:50Z",
      "updatedAt": "2021-06-02T12:08:43Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "aac2317e1ecaf123e321c58e972ba93024c7aa83",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "344-client-initial-has-dcid",
      "headRefOid": "46fb207ef37d893cef0fa1605d6e60745a3d5f12",
      "closedAt": "2021-06-02T12:08:42Z",
      "mergedAt": "2021-06-02T12:08:42Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "cee41b4765e762a2a48f96742296f167c460dc9b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY5MDIxODgx",
          "commit": {
            "abbreviatedOid": "6cd5931"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-26T13:30:23Z",
          "updatedAt": "2021-05-26T13:30:23Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nextracted from the Client Initial to calculate the Initial secret using the\r\n```",
              "createdAt": "2021-05-26T13:30:23Z",
              "updatedAt": "2021-05-26T13:30:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY5MTE4MDkx",
          "commit": {
            "abbreviatedOid": "f5de3bf"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-05-26T14:45:24Z",
          "updatedAt": "2021-05-26T14:45:24Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY5NjQ3ODMz",
          "commit": {
            "abbreviatedOid": "f5de3bf"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Much better.  My comment here is mostly a nit.  I think that you are implicitly talking about the first packet from the client, so maybe you can avoid using the \"Client Initial\" thing here (if you are using the abstract concept you introduced), \"client Initial\" (that is, Initial packets sent by a client), or anything that might be confusing.",
          "createdAt": "2021-05-27T00:36:57Z",
          "updatedAt": "2021-05-27T00:38:34Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nextracted from the packet. The Initial secret is calculated using the\r\n```\r\n\r\n\"Client Initial\" is not really a thing in this context (you don't really want to reuse that context here, I think).  As you are talking about packets in the abstract, I think that this is right.  The next paragraph covers the important gotcha.",
              "createdAt": "2021-05-27T00:36:57Z",
              "updatedAt": "2021-05-27T00:38:35Z"
            }
          ]
        }
      ]
    },
    {
      "number": 383,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUzNjk1ODMx",
      "title": "Proposed DSCP text for Applications usage",
      "url": "https://github.com/quicwg/ops-drafts/pull/383",
      "state": "MERGED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "check-on-list"
      ],
      "body": "Separates  #379 for manageability and this PR for applicability",
      "createdAt": "2021-05-26T12:27:45Z",
      "updatedAt": "2021-06-30T11:10:06Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d1b24ea796abec7782541642cd4bad4e0fb59cba",
      "headRepository": "gorryfair/ops-drafts",
      "headRefName": "patch-9",
      "headRefOid": "89408d9ce9dd6df0764a2134e990fd643f87b3be",
      "closedAt": "2021-06-30T11:10:06Z",
      "mergedAt": "2021-06-30T11:10:06Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "1d59c1407442d5dc3c7472ca19a81139cdb0e1b8"
      },
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "NONE",
          "body": "I actually find this sentence weak: \r\n\r\n\"Therefore it is not recommended to use different DiffServ Code Points (DSCPs) {{?RFC2475}} for ...\r\n\r\nConsidering that QUIC v1 as defined has a single congestion controller and recovery handler and don't treat different DSCP values as separate transport flows I would think that this should be stronger formulated. \r\n\r\nHowever, I could see that one could provide a bit more context to this DSCP and single QUIC connections vs multiple QUIC streams discussion by referencing Section 5.1 of https://datatracker.ietf.org/doc/rfc7657/ and be explicit about the point that QUIC v1 is similar to SCTP in regards to the issues raised. ",
          "createdAt": "2021-05-28T09:36:51Z",
          "updatedAt": "2021-05-28T09:36:51Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY5MDE5NTg3",
          "commit": {
            "abbreviatedOid": "0c133fc"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-26T13:28:36Z",
          "updatedAt": "2021-05-26T13:28:37Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\npackets belonging to the same connection. When multiplexing multiple flows\r\nover a single QUIC connection, the selected DSCP value should be the one\r\nassociated with the highest priority requested for all multiplexed flows.\r\nIf differential network treatment,\r\n```",
              "createdAt": "2021-05-26T13:28:36Z",
              "updatedAt": "2021-05-26T13:28:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcxMjAzMDYz",
          "commit": {
            "abbreviatedOid": "29f2289"
          },
          "author": "gloinul",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "I think the new text do work. ",
          "createdAt": "2021-05-28T11:29:05Z",
          "updatedAt": "2021-05-28T11:29:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 384,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUzNzI4NzU2",
      "title": "nits from Lars",
      "url": "https://github.com/quicwg/ops-drafts/pull/384",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #382",
      "createdAt": "2021-05-26T12:56:15Z",
      "updatedAt": "2021-06-02T12:17:02Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "aac2317e1ecaf123e321c58e972ba93024c7aa83",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-7",
      "headRefOid": "1aa99e581e25d24755c4d32c4d55eaadfbd2a892",
      "closedAt": "2021-06-02T12:17:02Z",
      "mergedAt": "2021-06-02T12:17:02Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "f5afe7b5cf9b9f8b6d00030e31f0fa730b78c09f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcwNjE5NjEz",
          "commit": {
            "abbreviatedOid": "8c925d5"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-05-27T20:38:52Z",
          "updatedAt": "2021-05-27T20:39:02Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "I found this sentence a bit difficult to read, so a suggestion.\r\n\r\n```suggestion\r\ncarried inside QUIC's encryption boundary, a given packet exposes no information about which\r\nstream(s) are carried within the packet.\r\n```",
              "createdAt": "2021-05-27T20:38:52Z",
              "updatedAt": "2021-05-27T20:39:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0MTA5NzY2",
          "commit": {
            "abbreviatedOid": "1418dcf"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-06-02T12:06:37Z",
          "updatedAt": "2021-06-02T12:06:37Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0MTExMzc4",
          "commit": {
            "abbreviatedOid": "1418dcf"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-02T12:08:15Z",
          "updatedAt": "2021-06-02T12:08:16Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\r\ncarried inside QUIC's encryption boundary, a given packet exposes\r\nno information about which\r\nstream(s) are carried within the packet.\r\nTherefore, stream multiplexing is not intended to be used for differentiating\r\n```",
              "createdAt": "2021-06-02T12:08:15Z",
              "updatedAt": "2021-06-02T12:08:16Z"
            }
          ]
        }
      ]
    },
    {
      "number": 385,
      "id": "MDExOlB1bGxSZXF1ZXN0NjU0OTAyOTIx",
      "title": "PR to refer to network-layer management/analysis",
      "url": "https://github.com/quicwg/ops-drafts/pull/385",
      "state": "MERGED",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Refers to quicwg#362. \r\nThis also addresses /extremely limited/ ECN visibility (limited for sure, but we don't need to say \"extremely\").\r\nFixed multiple definitions of RTT\r\nRefered to metrics, etc for encrypted traffic wrt network-layer measurement via a REF.",
      "createdAt": "2021-05-27T12:36:03Z",
      "updatedAt": "2021-06-02T12:19:38Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "aac2317e1ecaf123e321c58e972ba93024c7aa83",
      "headRepository": "gorryfair/ops-drafts",
      "headRefName": "patch-10",
      "headRefOid": "e3dacfb24a33b012f17840257d442c77844cb964",
      "closedAt": "2021-06-02T12:19:38Z",
      "mergedAt": "2021-06-02T12:19:37Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "8e3ee39feb4cbd3a4d221dd0a77f660e0bbcf360"
      },
      "comments": [
        {
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for the suggestions from Ian and Mirjay, they were of course incorporated.",
          "createdAt": "2021-05-28T07:54:32Z",
          "updatedAt": "2021-05-28T07:54:32Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcwMTU1NzMy",
          "commit": {
            "abbreviatedOid": "00d7112"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-27T13:05:15Z",
          "updatedAt": "2021-05-27T13:05:16Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nand analysis tools can be consistently used by multiple transport protocols,\r\nhowever, these techniques are often limited to measurements within one or\r\nmultiple cooperating domains.\r\n```\r\nProposing this change as it otherwise sounds that we don't need any in-band e2e measurement support which I don't think is true or intended. However, let me know if what I wrote is actually correct...?",
              "createdAt": "2021-05-27T13:05:15Z",
              "updatedAt": "2021-05-27T13:05:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcwNjE1NzQw",
          "commit": {
            "abbreviatedOid": "00d7112"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-27T20:33:49Z",
          "updatedAt": "2021-05-27T20:34:32Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nUsing network-layer approaches also has the advantage that common observation\r\n```",
              "createdAt": "2021-05-27T20:33:49Z",
              "updatedAt": "2021-05-27T20:34:32Z"
            },
            {
              "originalPosition": 33,
              "body": "I think this is a reasonable addition, but I'd prefer a separate sentence starting with \"However, \"",
              "createdAt": "2021-05-27T20:34:27Z",
              "updatedAt": "2021-05-27T20:34:32Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0MTIyNDE5",
          "commit": {
            "abbreviatedOid": "e3dacfb"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-06-02T12:19:24Z",
          "updatedAt": "2021-06-02T12:19:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 386,
      "id": "MDExOlB1bGxSZXF1ZXN0NjYwMjI2NjY2",
      "title": "More text on ACK rate in the applicability draft",
      "url": "https://github.com/quicwg/ops-drafts/pull/386",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #330 ",
      "createdAt": "2021-06-02T16:41:18Z",
      "updatedAt": "2021-06-30T11:09:04Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8e3ee39feb4cbd3a4d221dd0a77f660e0bbcf360",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-8",
      "headRefOid": "2ac301ea8c18a655c1c76bcb802059eafda8a8de",
      "closedAt": "2021-06-30T11:09:01Z",
      "mergedAt": "2021-06-30T11:09:01Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "6e511695e62d6cc15fa7460e4b7574b61f15b834"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0NDQ4NTQ4",
          "commit": {
            "abbreviatedOid": "d8a08a8"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-02T16:43:48Z",
          "updatedAt": "2021-06-02T16:43:48Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\npacket containing an ACK frame for each two packets received.\r\n```",
              "createdAt": "2021-06-02T16:43:48Z",
              "updatedAt": "2021-06-02T16:43:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0NDY0MDk2",
          "commit": {
            "abbreviatedOid": "fce878f"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-02T17:00:09Z",
          "updatedAt": "2021-06-02T17:06:27Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nimpact the amount of ACK traffic sent. Reducing the rate at which\r\nacknowledgments are generated in constrained situations can preserve resources\r\nand improve overall performance, for both network processing as well as\r\napplication-relevant metrics.\r\n```",
              "createdAt": "2021-06-02T17:00:09Z",
              "updatedAt": "2021-06-02T17:06:27Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nthese resources are constrained.  \"ACK-only\" packets are not reliably\r\ndetectable in QUIC, so network ACK thinning done for TCP is not suitable\r\nfor QUIC traffic. Instead QUIC endpoint need to control the ACK rate\r\n```",
              "createdAt": "2021-06-02T17:05:49Z",
              "updatedAt": "2021-06-02T17:06:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0NTExMDg4",
          "commit": {
            "abbreviatedOid": "36fcd33"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-02T17:49:37Z",
          "updatedAt": "2021-06-02T17:49:37Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nfor QUIC traffic. Instead QUIC endpoints need to control the ACK rate\r\nappropriately and some implenentations may even provide an interface to\r\n```",
              "createdAt": "2021-06-02T17:49:37Z",
              "updatedAt": "2021-06-02T17:49:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0NTExMzM3",
          "commit": {
            "abbreviatedOid": "36fcd33"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-06-02T17:49:53Z",
          "updatedAt": "2021-06-02T17:49:53Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0Nzg5MjU2",
          "commit": {
            "abbreviatedOid": "36fcd33"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "This seems like it is in the right direction.  I don't like how much text it adds though.",
          "createdAt": "2021-06-03T00:56:13Z",
          "updatedAt": "2021-06-03T00:56:30Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I can't suggest over the diff in the way I'd like, but here is my take on this:\r\n\r\n```md\r\n# Acknowledgment Efficiency\r\n\r\nQUIC version 1 without extensions uses an acknowledgment strategy based on TCP.\r\nThat is, every other packet is acknowledged.  However, generating and processing\r\nQUIC acknowledgments can consume significant resources, both in terms of link\r\nutilization and processing time.  Some applications might be able to improve\r\noverall performance by using alternative strategies that reduce the rate of\r\nacknowledgments.\r\n```\r\n\r\nThis drops the \"thinning\" text (that's for the other doc).\r\n\r\nThere is a lot more to unpack here, but the transport doc already talks about this topic in more precise terms.",
              "createdAt": "2021-06-03T00:56:13Z",
              "updatedAt": "2021-06-03T00:56:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc1MDA5MTUx",
          "commit": {
            "abbreviatedOid": "36fcd33"
          },
          "author": "gorryfair",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "For me, I think we are now so close ... I'd kind of like to see two paras, since these are two concepts, and it would be great to see both paras in the same section.",
          "createdAt": "2021-06-03T08:22:40Z",
          "updatedAt": "2021-06-03T08:27:09Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "/instead QUIC endpoint need/instead a QUIC endpoint needs/",
              "createdAt": "2021-06-03T08:22:40Z",
              "updatedAt": "2021-06-03T08:27:09Z"
            },
            {
              "originalPosition": 15,
              "body": "/some implementation may even provide an interface to impact/implementations provide an interface that can reduce/ ??? ... although I like MT's comment also which avoids this.",
              "createdAt": "2021-06-03T08:22:44Z",
              "updatedAt": "2021-06-03T08:27:09Z"
            },
            {
              "originalPosition": 19,
              "body": "That looks good, OK also to me. ",
              "createdAt": "2021-06-03T08:25:32Z",
              "updatedAt": "2021-06-03T08:27:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 387,
      "id": "MDExOlB1bGxSZXF1ZXN0NjYwNDA1MjAx",
      "title": "Clarify \"The QUIC Handshake\"",
      "url": "https://github.com/quicwg/ops-drafts/pull/387",
      "state": "MERGED",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As noted in #352 the \"The QUIC Handshake\" is written in a way that could cause readers to assume things such as there's only one datagram containing a Client Initial.\r\n\r\nThis PR changes the naming from 'Client/Server Initial/Finished datagram' to 'Client/Server Initial/Finished flight' and makes related changes to make it read correctly.  The diagrams have not been fully updated yet.",
      "createdAt": "2021-06-02T21:28:44Z",
      "updatedAt": "2021-06-14T07:28:35Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8e3ee39feb4cbd3a4d221dd0a77f660e0bbcf360",
      "headRepository": "ianswett/ops-drafts",
      "headRefName": "patch-4",
      "headRefOid": "61175b19ef482643ee1208708d25f84d09b35e0d",
      "closedAt": "2021-06-14T07:28:35Z",
      "mergedAt": "2021-06-14T07:28:35Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "a6f16670c287e89f9cd7e6ffb4cf0a2d00b38dd6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0Nzg5NzEz",
          "commit": {
            "abbreviatedOid": "cbafa9c"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "This is a good improvement.\r\n\r\nDon't pay too much attention to my nitpicking.  I love finding ways in which the descriptions of QUIC can be wrong.  This draft necessarily simplifies, which means it is highly prone to inaccuracies of the sort I point out here.  I don't think that these are fatal problems; feel free to ignore them.  Or, feel free to apply weasel words like \"might\" or \"often\" as necessary.  I might be inclined to contest those though; see the last comment: our stack could generate the datagram I describe up to 60% of the time.",
          "createdAt": "2021-06-03T00:57:39Z",
          "updatedAt": "2021-06-03T01:06:48Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nso packets within a flight might not be sent close in time, though the sequence\r\n```",
              "createdAt": "2021-06-03T00:57:39Z",
              "updatedAt": "2021-06-03T01:06:48Z"
            },
            {
              "originalPosition": 43,
              "body": "I see that you are talking about \"flight\" elsewhere, so...\r\n\r\n```suggestion\r\nThe Client Completion flight contains at least one Handshake packet and\r\n```",
              "createdAt": "2021-06-03T00:58:14Z",
              "updatedAt": "2021-06-03T01:06:48Z"
            },
            {
              "originalPosition": 65,
              "body": "Missing a word?\r\n\r\n```suggestion\r\nInitial, Handshake, and 1-RTT packets belong to different cryptographic and transport\r\ncontexts. The Client Completion {{fig-init-complete}} and the\r\n```",
              "createdAt": "2021-06-03T00:59:28Z",
              "updatedAt": "2021-06-03T01:06:48Z"
            },
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nServer Completion {{fig-hs-complete}} flights conclude the Initial and Handshake\r\ncontexts, by sending final acknowledgments and CRYPTO frames.\r\n```\r\n\r\nIf you look at this, it's not a great match to reality.  The Initial context concludes at the server when it sends its first Handshake packet.  Is this \"lies to children\" and therefore acceptable?",
              "createdAt": "2021-06-03T01:00:47Z",
              "updatedAt": "2021-06-03T01:06:48Z"
            },
            {
              "originalPosition": 145,
              "body": "Note: This is also \"lies to children\".  If a Handshake packet is coalesced with these (which can happen, depending on how the client works; ours will do this in some circumstances), then the datagram doesn't need to be padded.",
              "createdAt": "2021-06-03T01:03:07Z",
              "updatedAt": "2021-06-03T01:06:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0OTc4MDgx",
          "commit": {
            "abbreviatedOid": "cbafa9c"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks for the suggestions Martin, very helpful.",
          "createdAt": "2021-06-03T07:49:07Z",
          "updatedAt": "2021-06-03T07:57:42Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "Yeah, this was my best effort at rewriting what was there to be clearer and more accurate, but it's still a bit misleading or possibly just not helpful.\r\n\r\nI'm not sure if the intent is to detail when no more packets from an encryption level will be sent, because the keys have been discarded?",
              "createdAt": "2021-06-03T07:49:08Z",
              "updatedAt": "2021-06-03T07:57:42Z"
            },
            {
              "originalPosition": 145,
              "body": "It doesn't?  I'm missing that in: https://www.rfc-editor.org/rfc/rfc9000.html#name-initial-datagram-size\r\n\r\nI agree that in practice, if the client has Handshake keys but hasn't used them(ie: it's sending an Initial ACK before the Handshake packet), then there's no reason to pad the datagram, but I can't find text which makes an exception for that.",
              "createdAt": "2021-06-03T07:57:17Z",
              "updatedAt": "2021-06-03T07:57:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0OTkzNDU3",
          "commit": {
            "abbreviatedOid": "6b4f912"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-03T08:05:59Z",
          "updatedAt": "2021-06-03T08:06:00Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "I'm actually not sure how one determines the handshake is complete from the server completion.  How does one tell the difference between the server sending 0.5RTT and 1RTT containing HANDSHAKE_DONE?",
              "createdAt": "2021-06-03T08:05:59Z",
              "updatedAt": "2021-06-03T08:06:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc1ODIwODEw",
          "commit": {
            "abbreviatedOid": "86282a1"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-04T00:01:03Z",
          "updatedAt": "2021-06-04T00:01:03Z",
          "comments": [
            {
              "originalPosition": 145,
              "body": "You know, I don't think that this is in the spec.  It's not a condition that the spec considers.  So maybe I can take that back.\r\n\r\nIt's what our implementation does though.  There is no point padding if you are sending Handshake, because the Handshake packet will unblock the server anti-amplification limit and you know that the server can process the Handshake packet (the only reason to send Handshake in this case is to acknowledge a Handshake packet).\r\n\r\nSome implementations won't even send Initial in this case because they drop the keys.  We have this extra wrinkle that allows us to acknowledge Initial packets as a final gasp before dropping the keys.  It's a courtesy only and not reliable, but it means that we send Initial + Handshake + 0-RTT all in the same datagram.  AND that datagram won't be padded, even though it contains an Initial.\r\n\r\nSo I'm totally OK with this text remaining.  I certainly don't want to have to explain all of that.",
              "createdAt": "2021-06-04T00:01:03Z",
              "updatedAt": "2021-06-04T00:01:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc1ODIxNTQx",
          "commit": {
            "abbreviatedOid": "6b4f912"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-04T00:03:07Z",
          "updatedAt": "2021-06-04T00:03:07Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "Maybe this is worth a note:\r\n> The Server Completion flight might not be observable as it is indistinguishable from packets the server sends after the Server Initial flight.",
              "createdAt": "2021-06-04T00:03:07Z",
              "updatedAt": "2021-06-04T00:03:07Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc2MzE0NjM3",
          "commit": {
            "abbreviatedOid": "86282a1"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-04T13:57:26Z",
          "updatedAt": "2021-06-04T13:57:27Z",
          "comments": [
            {
              "originalPosition": 145,
              "body": "The 'courtesy ACKs' are actually useful because they provide an extra RTT sample early in the connection, so thanks for your courtesy :)",
              "createdAt": "2021-06-04T13:57:26Z",
              "updatedAt": "2021-06-04T13:57:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc2MzI4Nzk2",
          "commit": {
            "abbreviatedOid": "86282a1"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm, one potential diagram nit.",
          "createdAt": "2021-06-04T14:11:12Z",
          "updatedAt": "2021-06-04T14:31:09Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "does the TLS Client Hello not live within a QUIC frame? this makes it look otherwise in my reading.",
              "createdAt": "2021-06-04T14:11:12Z",
              "updatedAt": "2021-06-04T14:31:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc2NDA4MTQx",
          "commit": {
            "abbreviatedOid": "86282a1"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-04T15:20:55Z",
          "updatedAt": "2021-06-04T15:20:55Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "Thanks, I updated it to be clearer.  I also reverted part of my change and just put \"Example\" instead of the former \"Typical\", because the number of ways a client hello can be sequenced is extraordinarily large.",
              "createdAt": "2021-06-04T15:20:55Z",
              "updatedAt": "2021-06-04T15:20:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc2NzI4NzI5",
          "commit": {
            "abbreviatedOid": "61175b1"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-06-05T00:10:10Z",
          "updatedAt": "2021-06-05T00:10:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 388,
      "id": "MDExOlB1bGxSZXF1ZXN0NjgwNjY0MjU3",
      "title": "SNI parsing proposals by David",
      "url": "https://github.com/quicwg/ops-drafts/pull/388",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #358",
      "createdAt": "2021-06-30T08:56:06Z",
      "updatedAt": "2021-06-30T16:59:47Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "a6f16670c287e89f9cd7e6ffb4cf0a2d00b38dd6",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-9",
      "headRefOid": "30383d4e3a36b49fdd3110aaf0c64d59b9e5d3d9",
      "closedAt": "2021-06-30T11:09:41Z",
      "mergedAt": "2021-06-30T11:09:40Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "f1608c864e596ad7ebd92023b48384978b413bd1"
      },
      "comments": [
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think there are still a few potentially misleading statements left in the text.  I'll send out a PR.",
          "createdAt": "2021-06-30T16:59:47Z",
          "updatedAt": "2021-06-30T16:59:47Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njk1ODcxNDM1",
          "commit": {
            "abbreviatedOid": "9e5eef4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-30T08:58:37Z",
          "updatedAt": "2021-06-30T08:58:37Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\noffsets and lengths is required. Further, the client's Initial packet may\r\ncontain other frames, so the first bytes of each frame need to be checked\r\nto identify the frame type, and if needed skipped over it. Note that the\r\nlength of the frames is dependent on the frame type; see {{Section 18 of\r\nQUIC-TRANSPORT}}. E.g. PADDING frames, each consisting\r\nof a single zero byte, may occur before, after, or\r\n```",
              "createdAt": "2021-06-30T08:58:37Z",
              "updatedAt": "2021-06-30T08:58:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njk1ODcyMDAx",
          "commit": {
            "abbreviatedOid": "33f45d2"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-30T08:59:11Z",
          "updatedAt": "2021-06-30T08:59:11Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-06-30T08:59:11Z",
              "updatedAt": "2021-06-30T08:59:11Z"
            }
          ]
        }
      ]
    },
    {
      "number": 389,
      "id": "MDExOlB1bGxSZXF1ZXN0NjgxMDUzNjQz",
      "title": "Tweaks to the Extracting SNI section",
      "url": "https://github.com/quicwg/ops-drafts/pull/389",
      "state": "MERGED",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "ready-to-merge"
      ],
      "body": "Follow-on to #388",
      "createdAt": "2021-06-30T17:08:07Z",
      "updatedAt": "2021-08-19T08:16:25Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1d59c1407442d5dc3c7472ca19a81139cdb0e1b8",
      "headRepository": "ianswett/ops-drafts",
      "headRefName": "patch-5",
      "headRefOid": "7a44f7672485bfcd01f8b0a63e40e243c9785f9a",
      "closedAt": "2021-08-19T08:16:25Z",
      "mergedAt": "2021-08-19T08:16:25Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "acd8181475dc19890819b85ce9f9645e4dec997b"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks @ianswett! As there are clarifications/editorial, I think we will wait for the AD review and take this PR up with a next revision before or after IETF last call. But I think it's ready to merge!",
          "createdAt": "2021-06-30T17:25:51Z",
          "updatedAt": "2021-06-30T17:25:51Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "You're welcome.  Agreed they're editorial, so merge whenever it makes sense.",
          "createdAt": "2021-06-30T17:27:08Z",
          "updatedAt": "2021-06-30T17:27:08Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 390,
      "id": "MDExOlB1bGxSZXF1ZXN0NjgyNzcxMzAx",
      "title": "Add recent contributors to managability",
      "url": "https://github.com/quicwg/ops-drafts/pull/390",
      "state": "MERGED",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I found 5 people who landed PRs since this list was last updated.\r\n\r\nI added them in an arbitrary order, feel free to suggest changes.",
      "createdAt": "2021-07-02T17:11:17Z",
      "updatedAt": "2021-07-08T19:33:16Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1d59c1407442d5dc3c7472ca19a81139cdb0e1b8",
      "headRepository": "ianswett/ops-drafts",
      "headRefName": "patch-6",
      "headRefOid": "7aeeeda23c1612887a2a29f2c2049be97ec72548",
      "closedAt": "2021-07-02T18:21:48Z",
      "mergedAt": "2021-07-02T18:21:48Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "fcd55f5bfd2e8c1b0a9dfdf0f80101520c9a8866"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Not sure this merge was correct. I don't think we listed everybody with a PR necessarily here rather than in the ACK part below. If it was only nits or editorial changes we didn't list them as contributors. Also if we change someone to contributor we should remove them from the ACK section.",
          "createdAt": "2021-07-05T13:29:15Z",
          "updatedAt": "2021-07-05T13:29:15Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That makes sense MIrja, I'll let you and Brian discuss this and decide what to do if that SG?",
          "createdAt": "2021-07-07T17:48:02Z",
          "updatedAt": "2021-07-07T17:48:02Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, we will fix this (in the sense of making is consistent). It's definitely good to review and double-check we have all the right people in with the next version!",
          "createdAt": "2021-07-08T19:33:15Z",
          "updatedAt": "2021-07-08T19:33:15Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 392,
      "id": "MDExOlB1bGxSZXF1ZXN0NjkyMjcyODgw",
      "title": "Talk about source ports",
      "url": "https://github.com/quicwg/ops-drafts/pull/392",
      "state": "MERGED",
      "author": "mnot",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "as discussed on-list",
      "createdAt": "2021-07-19T05:03:37Z",
      "updatedAt": "2021-08-19T08:23:54Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "fcd55f5bfd2e8c1b0a9dfdf0f80101520c9a8866",
      "headRepository": "mnot/ops-drafts",
      "headRefName": "mnot-src-ports",
      "headRefOid": "53f0f11fb74d6cbb84e4ef6472b43296c14c311b",
      "closedAt": "2021-08-19T08:23:53Z",
      "mergedAt": "2021-08-19T08:23:53Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "121cc38094bb63592a64aa3cdf5059999d819a90"
      },
      "comments": [
        {
          "author": "mnot",
          "authorAssociation": "MEMBER",
          "body": "@martinthomson if we want to reach NAT vendors, maybe that text should be in the manageability doc?",
          "createdAt": "2021-07-20T00:53:04Z",
          "updatedAt": "2021-07-20T00:53:04Z"
        },
        {
          "author": "enygren",
          "authorAssociation": "NONE",
          "body": "Should we recommend that using UDP source ports 12k-64k is preferable where possible and that NATs may need to take care to avoid filtered ports?  This seems like it will be a fragile topic on an ongoing basis as the set of filtered ports will grow over time, but it so far seems less likely for them to be over 12k or even over 32k.\r\n\r\nDigging into a set of UDP ports receiving the most scans against a widely deployed firewall sees some of these on top:\r\n* 137\r\n* 500\r\n* 53\r\n* 123\r\n* 1900\r\n* 161\r\n* 389\r\n* 3702\r\n* 5353\r\n* 1434\r\n* 5683\r\n* 1434\r\n* 5683\r\n* 1484\r\n* 5355\r\n* 11211\r\n* 6881\r\n* 1194\r\n* 111\r\n* ...\r\n\r\nFetch maintains a list of problematic *destination* ports, but it is fairly TCP-specific.  Agreed that we'd preferably have some better way to maintain this list outside of QUIC.\r\n",
          "createdAt": "2021-07-27T19:27:17Z",
          "updatedAt": "2021-07-27T19:28:20Z"
        },
        {
          "author": "mnot",
          "authorAssociation": "MEMBER",
          "body": "@enygren this isn't about commonly-scanned ports; it's about those specifically used for reflection attacks.",
          "createdAt": "2021-07-27T19:28:19Z",
          "updatedAt": "2021-07-27T19:28:19Z"
        },
        {
          "author": "enygren",
          "authorAssociation": "NONE",
          "body": "@mnot Agreed, that is just a datapoint as what matters is what people put filters on in firewalls or routers.  Those used for reflection attacks are top ones to avoid, but ports that are widely scanned also seem worth avoiding.   (In \"scanned\" here I'm not making a distinction between \"scanned\" and \"target of a reflection attack\")",
          "createdAt": "2021-07-27T19:30:37Z",
          "updatedAt": "2021-07-27T19:30:37Z"
        },
        {
          "author": "mnot",
          "authorAssociation": "MEMBER",
          "body": "@enygren the ports you list are destination ports, I assume.",
          "createdAt": "2021-07-27T19:37:15Z",
          "updatedAt": "2021-07-27T19:37:15Z"
        },
        {
          "author": "enygren",
          "authorAssociation": "NONE",
          "body": "Yes, the ones I list are destination ports (which could/will be network-observed source ports for any protocols which reflect).",
          "createdAt": "2021-07-27T19:40:34Z",
          "updatedAt": "2021-07-27T19:40:34Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "As the primary concern is volume of traffic, the narrow formulation from Mark is my preference. If any of the other ports can be shown to be a reflection vector, let us talk about adding them. QUIC is pretty robust in terms of managing junk packets, so making this about volume will keep it focused.",
          "createdAt": "2021-07-27T21:15:47Z",
          "updatedAt": "2021-07-27T21:15:47Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA5MTU2ODI2",
          "commit": {
            "abbreviatedOid": "9a3be15"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "This needs to talk about the possibility that a NAT could rewrite a source port to use one of these values.  Clients cannot control this and so can't guarantee that these ports will be avoided in all cases.  In other words, this is fragile and that needs to be acknowledged.",
          "createdAt": "2021-07-19T05:13:48Z",
          "updatedAt": "2021-07-19T05:13:48Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA5MjY5Mjkw",
          "commit": {
            "abbreviatedOid": "3c3310d"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-19T08:09:15Z",
          "updatedAt": "2021-07-19T08:09:16Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "```suggestion\r\na period of time, downgrading to a non-UDP protocol (see {{fallback}}).\r\n```",
              "createdAt": "2021-07-19T08:09:15Z",
              "updatedAt": "2021-07-19T08:09:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0NDA5NDk1",
          "commit": {
            "abbreviatedOid": "95e5f06"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-06T14:20:28Z",
          "updatedAt": "2021-08-06T14:20:29Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Is this only about rebinding or any port selection of NATs?",
              "createdAt": "2021-08-06T14:20:29Z",
              "updatedAt": "2021-08-06T14:20:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0NzgxNzgw",
          "commit": {
            "abbreviatedOid": "95e5f06"
          },
          "author": "mnot",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-07T02:04:33Z",
          "updatedAt": "2021-08-07T02:04:33Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I th ink it's mostly about rebinding.",
              "createdAt": "2021-08-07T02:04:33Z",
              "updatedAt": "2021-08-07T02:04:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTQ4MjMx",
          "commit": {
            "abbreviatedOid": "95e5f06"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-08T23:42:07Z",
          "updatedAt": "2021-08-08T23:42:08Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I think that it is just \"binding\" rather than \"rebinding\".  I read \"rebinding\" as what happens when flow state is lost and a new port binding is assigned to that flow.  But this is just \"binding\", which is any time a port is bound to a flow.",
              "createdAt": "2021-08-08T23:42:08Z",
              "updatedAt": "2021-08-08T23:42:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTY3MjE0",
          "commit": {
            "abbreviatedOid": "95e5f06"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Looks sensible, some suggestions.",
          "createdAt": "2021-08-09T01:54:58Z",
          "updatedAt": "2021-08-09T02:02:40Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nreflection attacks, often due to server misconfiguration:\r\n```",
              "createdAt": "2021-08-09T01:54:58Z",
              "updatedAt": "2021-08-09T02:02:40Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nServices might block source ports known to be vulnerable to reflection\r\nattacks to avoid the overhead of processing large numbers of packets.\r\nHowever, this practice has negative effects on\r\n```",
              "createdAt": "2021-08-09T01:57:04Z",
              "updatedAt": "2021-08-09T02:02:40Z"
            },
            {
              "originalPosition": 54,
              "body": "```suggestion\r\nthat the list above is not exhaustive; other source ports might be considered\r\n```",
              "createdAt": "2021-08-09T02:00:19Z",
              "updatedAt": "2021-08-09T02:02:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTcxMDE3",
          "commit": {
            "abbreviatedOid": "d3dfb71"
          },
          "author": "mnot",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-09T02:14:58Z",
          "updatedAt": "2021-08-09T02:14:59Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "A quick look around shows a lot more consistent use of 'rebinding' for this case; e.g., [here](https://tools.ietf.org/id/draft-duke-quic-natsupp-00.html)",
              "createdAt": "2021-08-09T02:14:59Z",
              "updatedAt": "2021-08-09T02:14:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTcxMDk2",
          "commit": {
            "abbreviatedOid": "d3dfb71"
          },
          "author": "mnot",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-09T02:15:28Z",
          "updatedAt": "2021-08-09T02:15:28Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "I don't think it's the port that's vulnerable to attacks; it's the underlying protocol.",
              "createdAt": "2021-08-09T02:15:28Z",
              "updatedAt": "2021-08-09T02:15:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNjczMzY5",
          "commit": {
            "abbreviatedOid": "b7b0cad"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-19T07:52:48Z",
          "updatedAt": "2021-08-19T07:52:49Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nServices might block source ports associated with protocols known to be\r\nvulnerable to reflection attacks, to avoid the overhead of processing large\r\nnumbers of packets. However, this practice has negative effects on\r\n```",
              "createdAt": "2021-08-19T07:52:48Z",
              "updatedAt": "2021-08-19T07:52:49Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNjczNzk4",
          "commit": {
            "abbreviatedOid": "b7b0cad"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-19T07:53:15Z",
          "updatedAt": "2021-08-19T07:53:15Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "split the difference between Ian's and Mark's suggestions?",
              "createdAt": "2021-08-19T07:53:15Z",
              "updatedAt": "2021-08-19T07:53:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNjc0OTY1",
          "commit": {
            "abbreviatedOid": "b7b0cad"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-08-19T07:54:34Z",
          "updatedAt": "2021-08-19T07:54:34Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNzAxMjYz",
          "commit": {
            "abbreviatedOid": "2f86212"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-19T08:21:49Z",
          "updatedAt": "2021-08-19T08:21:50Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nbinding to these source ports can result in that traffic being blocked.\r\n```",
              "createdAt": "2021-08-19T08:21:49Z",
              "updatedAt": "2021-08-19T08:21:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNzAxNzM5",
          "commit": {
            "abbreviatedOid": "2f86212"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-19T08:22:21Z",
          "updatedAt": "2021-08-19T08:22:21Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n## UDP Blocking, Throttling, and NAT Binding {#sec-udp-1312}\r\n```",
              "createdAt": "2021-08-19T08:22:21Z",
              "updatedAt": "2021-08-19T08:22:21Z"
            }
          ]
        }
      ]
    },
    {
      "number": 394,
      "id": "MDExOlB1bGxSZXF1ZXN0NzA1NTQyNjg3",
      "title": "migration and address linkability at the server",
      "url": "https://github.com/quicwg/ops-drafts/pull/394",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This would be my proposal of a few small additions based on the discussion on list and at the last meeting (IETF-112) about privacy implications after migration regarding exposure of linkable user IP addresses to the server. The text doesn't give any recommendations but at least mentions it in the relevant sections.",
      "createdAt": "2021-08-06T14:48:12Z",
      "updatedAt": "2021-08-19T08:31:51Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "fcd55f5bfd2e8c1b0a9dfdf0f80101520c9a8866",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-4",
      "headRefOid": "eabc28c52426a4ca129098c43949ac9b1a2cbca3",
      "closedAt": "2021-08-19T08:31:47Z",
      "mergedAt": "2021-08-19T08:31:47Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "420c9251d05366a8015d960088ef828f43da1585"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTY4ODY0",
          "commit": {
            "abbreviatedOid": "2df0933"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-09T02:04:06Z",
          "updatedAt": "2021-08-09T02:04:07Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nis intentionally migrated to new path, a new connection ID is used to minimize\r\n```",
              "createdAt": "2021-08-09T02:04:06Z",
              "updatedAt": "2021-08-09T02:04:07Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTY5MjA2",
          "commit": {
            "abbreviatedOid": "2df0933"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-09T02:05:58Z",
          "updatedAt": "2021-08-09T02:05:59Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nlinkability by network observers. The other QUIC endpoint uses the\r\nconnection ID to link different addresses to the same connection\r\nand entity if a non-zero-length connection ID is provided.\r\n```",
              "createdAt": "2021-08-09T02:05:58Z",
              "updatedAt": "2021-08-09T02:05:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTY5OTI4",
          "commit": {
            "abbreviatedOid": "2df0933"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-09T02:09:38Z",
          "updatedAt": "2021-08-09T02:09:39Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nThe server uses the connection ID to associate packets to a QUIC\r\nconnection and as such can also link different IP addresses to the same\r\nuser. Further, analysis of\r\n```",
              "createdAt": "2021-08-09T02:09:38Z",
              "updatedAt": "2021-08-09T02:09:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTcwMzcz",
          "commit": {
            "abbreviatedOid": "2df0933"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-09T02:11:46Z",
          "updatedAt": "2021-08-09T02:11:46Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "It may also be to the path, so I'd drop 'to the server'.\r\n\r\n```suggestion\r\na linkage between client addresses which should also be\r\n```",
              "createdAt": "2021-08-09T02:11:46Z",
              "updatedAt": "2021-08-09T02:11:46Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0OTcwNDg4",
          "commit": {
            "abbreviatedOid": "2df0933"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I left a few suggestions, but this is heading in a good direction.",
          "createdAt": "2021-08-09T02:12:21Z",
          "updatedAt": "2021-08-09T02:12:21Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI2MzE5MDY0",
          "commit": {
            "abbreviatedOid": "2df0933"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-10T11:30:39Z",
          "updatedAt": "2021-08-10T11:30:39Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "I think I would rather prefer to be explicit about both cases here. \r\n\r\n```suggestion\r\na linkage between client addresses to the server and may expose this linkage\r\nalso to the path if the connection ID cannot be changed or flows can\r\notherwise be correlated. When migration is supported, this needs to be\r\n```",
              "createdAt": "2021-08-10T11:30:39Z",
              "updatedAt": "2021-08-10T11:30:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI2OTA5Mjc4",
          "commit": {
            "abbreviatedOid": "1266cd4"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I'm somewhat negative on some of the earlier changes.  There are valid points here, but they could be made more clearly.",
          "createdAt": "2021-08-10T22:55:27Z",
          "updatedAt": "2021-08-10T23:01:28Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Is this about minimizing linkability or making packets usable by receivers?  Because zero-length connection IDs are as good (or better) when it comes to minimizing linkability.",
              "createdAt": "2021-08-10T22:55:27Z",
              "updatedAt": "2021-08-10T23:01:28Z"
            },
            {
              "originalPosition": 5,
              "body": "Migration of what?\r\n\r\nI think that the key message here is that using a connection ID makes it easier to match packets to connection state if your peer address might change.  This happens if the other side might be behind a NAT (as is common for clients).  It also happens if they migrate (which only clients are permitted to do).\r\n\r\nBringing in a discussion on linkability is a non-sequitur here.",
              "createdAt": "2021-08-10T22:56:47Z",
              "updatedAt": "2021-08-10T23:01:28Z"
            },
            {
              "originalPosition": 21,
              "body": "I don't think that this addition is helpful.  The key point the paragraph previously made was that traffic analysis might reveal links to observers.  Now you are talking about endpoints being able to link.  That's not necessary and distracts (detracts also) from the point that was being made.",
              "createdAt": "2021-08-10T22:58:31Z",
              "updatedAt": "2021-08-10T23:01:28Z"
            },
            {
              "originalPosition": 33,
              "body": "This new point is worth a new paragraph.\r\n\r\n> Using migration reveals to the server that the same client controls multiple addresses.",
              "createdAt": "2021-08-10T23:00:36Z",
              "updatedAt": "2021-08-10T23:01:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3MTQ1ODMw",
          "commit": {
            "abbreviatedOid": "1266cd4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-11T07:32:37Z",
          "updatedAt": "2021-08-11T07:32:37Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "The CID is used to match connection at the receiver. A _new_ CID is used to avoid linkability on path.",
              "createdAt": "2021-08-11T07:32:37Z",
              "updatedAt": "2021-08-11T07:32:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3MTQ4NzYx",
          "commit": {
            "abbreviatedOid": "1266cd4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-11T07:35:59Z",
          "updatedAt": "2021-08-11T07:35:59Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This section is introducing the CID and the fact that the CID changes on intended/active migration to a new path (e.g. in a handover for mobility) should be mentioned here as well from my point of view. ",
              "createdAt": "2021-08-11T07:35:59Z",
              "updatedAt": "2021-08-11T07:36:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3MTQ5MjE3",
          "commit": {
            "abbreviatedOid": "1266cd4"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-11T07:36:29Z",
          "updatedAt": "2021-08-11T07:36:29Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Yes, we might not need this addition here and I can remove it again.",
              "createdAt": "2021-08-11T07:36:29Z",
              "updatedAt": "2021-08-11T07:36:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3Mzc2OTQ4",
          "commit": {
            "abbreviatedOid": "1266cd4"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-11T11:42:04Z",
          "updatedAt": "2021-08-11T11:42:04Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Right. Two concepts that this mixes together.",
              "createdAt": "2021-08-11T11:42:04Z",
              "updatedAt": "2021-08-11T11:42:04Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNzA1MDc5",
          "commit": {
            "abbreviatedOid": "b1951a9"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-19T08:25:43Z",
          "updatedAt": "2021-08-19T08:25:44Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\ndeploying and using QUIC.\r\n\r\nFurther, migration to an new address exposes\r\n```",
              "createdAt": "2021-08-19T08:25:43Z",
              "updatedAt": "2021-08-19T08:25:44Z"
            }
          ]
        }
      ]
    },
    {
      "number": 395,
      "id": "MDExOlB1bGxSZXF1ZXN0NzE1NzI2Nzg0",
      "title": "Fix Contributors/Acknowledgments in line with RFC9000",
      "url": "https://github.com/quicwg/ops-drafts/pull/395",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-08-19T08:40:10Z",
      "updatedAt": "2021-08-19T08:53:44Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "420c9251d05366a8015d960088ef828f43da1585",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "appman-acks",
      "headRefOid": "f1b2f916eb90eb15acbeb3f02d41f1fe96218655",
      "closedAt": "2021-08-19T08:53:44Z",
      "mergedAt": "2021-08-19T08:53:44Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "71c3bfdea7a17e7b2a967cd6506c1ca7b5cd2171"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNzIzMTA2",
          "commit": {
            "abbreviatedOid": "a259d09"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-19T08:43:34Z",
          "updatedAt": "2021-08-19T08:43:35Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n* Chris Box\r\n* Christian Huitema\r\n```",
              "createdAt": "2021-08-19T08:43:34Z",
              "updatedAt": "2021-08-19T08:43:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNzIzMzI3",
          "commit": {
            "abbreviatedOid": "a259d09"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-19T08:43:47Z",
          "updatedAt": "2021-08-19T08:43:48Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n* Christian Huitema\r\n* Gorry Fairhurst\r\n```",
              "createdAt": "2021-08-19T08:43:47Z",
              "updatedAt": "2021-08-19T08:43:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNzI0Mjkw",
          "commit": {
            "abbreviatedOid": "74401d5"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-19T08:44:46Z",
          "updatedAt": "2021-08-19T08:45:24Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n* David Schinazi\r\n* Eric Rescorla\r\n```",
              "createdAt": "2021-08-19T08:44:46Z",
              "updatedAt": "2021-08-19T08:45:24Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n* Jana Iyengar\r\n* Jared Mauch\r\n```",
              "createdAt": "2021-08-19T08:45:08Z",
              "updatedAt": "2021-08-19T08:45:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNzI2NDE5",
          "commit": {
            "abbreviatedOid": "da9de8d"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-19T08:46:52Z",
          "updatedAt": "2021-08-19T08:46:52Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe following people have contributed significant text to and/or\r\n```",
              "createdAt": "2021-08-19T08:46:52Z",
              "updatedAt": "2021-08-19T08:46:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNzI5MjQx",
          "commit": {
            "abbreviatedOid": "a1cb145"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-19T08:49:46Z",
          "updatedAt": "2021-08-19T08:49:46Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-08-19T08:49:46Z",
              "updatedAt": "2021-08-19T08:49:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNzMxODMy",
          "commit": {
            "abbreviatedOid": "16e600c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-19T08:52:18Z",
          "updatedAt": "2021-08-19T08:52:19Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-08-19T08:52:18Z",
              "updatedAt": "2021-08-19T08:52:19Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNzMyMDEw",
          "commit": {
            "abbreviatedOid": "16e600c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-19T08:52:29Z",
          "updatedAt": "2021-08-19T08:52:30Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-08-19T08:52:29Z",
              "updatedAt": "2021-08-19T08:52:30Z"
            }
          ]
        }
      ]
    },
    {
      "number": 396,
      "id": "MDExOlB1bGxSZXF1ZXN0NzI5OTgwNjg5",
      "title": "Adding writeup draft for quic-manageability.",
      "url": "https://github.com/quicwg/ops-drafts/pull/396",
      "state": "MERGED",
      "author": "mjoras",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-09-08T21:03:57Z",
      "updatedAt": "2021-09-09T19:42:28Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "main",
      "baseRefOid": "a2f1261e4dd05366363d9aedffa2abc18cb9688c",
      "headRepository": "mjoras/ops-drafts",
      "headRefName": "main",
      "headRefOid": "3d4f1f250c95a153513bf6a9c57cdd9ce2bce935",
      "closedAt": "2021-09-09T19:42:28Z",
      "mergedAt": "2021-09-09T19:42:28Z",
      "mergedBy": "mjoras",
      "mergeCommit": {
        "oid": "5b520507635ccb417da59486407222d99ccfeaa0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ5NjM1Mjk3",
          "commit": {
            "abbreviatedOid": "2d2687e"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-08T21:29:08Z",
          "updatedAt": "2021-09-08T21:29:08Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "We might want to state that there were two WGLC, with feedback from the first WGLC helping to strengthen consensus overall.",
              "createdAt": "2021-09-08T21:29:08Z",
              "updatedAt": "2021-09-08T21:29:08Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ5NjM1ODU1",
          "commit": {
            "abbreviatedOid": "2d2687e"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-08T21:29:58Z",
          "updatedAt": "2021-09-08T21:29:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 398,
      "id": "PR_kwDOBaRfW84ry_J4",
      "title": "Add applicability writeup.",
      "url": "https://github.com/quicwg/ops-drafts/pull/398",
      "state": "MERGED",
      "author": "mjoras",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-09-15T17:46:48Z",
      "updatedAt": "2021-09-26T15:49:02Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "main",
      "baseRefOid": "5b520507635ccb417da59486407222d99ccfeaa0",
      "headRepository": "mjoras/ops-drafts",
      "headRefName": "applicability-writeup",
      "headRefOid": "0912a9a278e658929904ca56ff8821b6f9e9d43e",
      "closedAt": "2021-09-26T15:49:01Z",
      "mergedAt": "2021-09-26T15:49:01Z",
      "mergedBy": "LPardue",
      "mergeCommit": {
        "oid": "3893028c41567d89a6f416049cff901ce87a5c21"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOBaRfW84thUgv",
          "commit": {
            "abbreviatedOid": "0912a9a"
          },
          "author": "LPardue",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-26T15:48:54Z",
          "updatedAt": "2021-09-26T15:48:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 400,
      "id": "PR_kwDOBaRfW84tbYbt",
      "title": "Update Acknowledgment Efficiency",
      "url": "https://github.com/quicwg/ops-drafts/pull/400",
      "state": "OPEN",
      "author": "gorryfair",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Suggesting a rewording to clarify various issues and correct some mistakes.",
      "createdAt": "2021-10-20T09:24:02Z",
      "updatedAt": "2021-10-20T12:37:38Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "main",
      "baseRefOid": "3893028c41567d89a6f416049cff901ce87a5c21",
      "headRepository": "gorryfair/ops-drafts",
      "headRefName": "patch-11",
      "headRefOid": "17fc14171192d179ca9342332f8d314404d3ea4e",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOBaRfW84uv1aC",
          "commit": {
            "abbreviatedOid": "17fc141"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-20T10:26:07Z",
          "updatedAt": "2021-10-20T10:26:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOBaRfW84uwA1L",
          "commit": {
            "abbreviatedOid": "17fc141"
          },
          "author": "kazuho",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-20T11:13:40Z",
          "updatedAt": "2021-10-20T11:13:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOBaRfW84uwJPb",
          "commit": {
            "abbreviatedOid": "17fc141"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-20T11:50:45Z",
          "updatedAt": "2021-10-20T11:50:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOBaRfW84uwVsV",
          "commit": {
            "abbreviatedOid": "17fc141"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-20T12:37:37Z",
          "updatedAt": "2021-10-20T12:37:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 403,
      "id": "PR_kwDOBaRfW84u84fN",
      "title": "Update draft-ietf-quic-applicability.md",
      "url": "https://github.com/quicwg/ops-drafts/pull/403",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "typo fix and one proposal",
      "createdAt": "2021-11-24T08:42:37Z",
      "updatedAt": "2021-11-24T08:42:37Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "main",
      "baseRefOid": "3893028c41567d89a6f416049cff901ce87a5c21",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "zaheduzzaman-patch-1",
      "headRefOid": "dece1b09034d5a81a177ead7616b6641117e18a5",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 424,
      "id": "PR_kwDOBaRfW84u9ie8",
      "title": "Use of encrypted message for Version negotiation",
      "url": "https://github.com/quicwg/ops-drafts/pull/424",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Currently the document uses \"will\".  This might be a very valid assumption, but still it is an assumption hence I think it is better to use \"May\" instead of \"Will\".",
      "createdAt": "2021-11-24T12:07:59Z",
      "updatedAt": "2021-11-25T14:42:20Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "main",
      "baseRefOid": "3893028c41567d89a6f416049cff901ce87a5c21",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "zaheduzzaman-patch-2",
      "headRefOid": "657995fb45b1bb361c0c36f3029b4fc2f45c1708",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOBaRfW84wmooj",
          "commit": {
            "abbreviatedOid": "d481040"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-24T23:01:05Z",
          "updatedAt": "2021-11-24T23:01:06Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nversions could use later encrypted messages to verify that they were authentic.\r\n```\r\n\r\nWe have evidence that they will though: draft-ietf-quic-version-negotiation, so I'm not sure that this is something that we need to prevaricate on.",
              "createdAt": "2021-11-24T23:01:06Z",
              "updatedAt": "2021-11-24T23:01:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOBaRfW84wpDY2",
          "commit": {
            "abbreviatedOid": "d481040"
          },
          "author": "zaheduzzaman",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-25T14:42:11Z",
          "updatedAt": "2021-11-25T14:42:11Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "that is even better, we can tell it more substantiate way..",
              "createdAt": "2021-11-25T14:42:11Z",
              "updatedAt": "2021-11-25T14:42:11Z"
            }
          ]
        }
      ]
    },
    {
      "number": 425,
      "id": "PR_kwDOBaRfW84u9jIB",
      "title": "Update draft-ietf-quic-manageability.md",
      "url": "https://github.com/quicwg/ops-drafts/pull/425",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "well I don't think transport protocol will be using any of the tools rather those tools can be used to observer multiple protocols",
      "createdAt": "2021-11-24T12:11:10Z",
      "updatedAt": "2021-11-24T12:11:10Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "main",
      "baseRefOid": "3893028c41567d89a6f416049cff901ce87a5c21",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "zaheduzzaman-patch-3",
      "headRefOid": "f5be100942b673dda432053ed06c45e9f665fe1e",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 426,
      "id": "PR_kwDOBaRfW84u9kTq",
      "title": "Update draft-ietf-quic-manageability.md",
      "url": "https://github.com/quicwg/ops-drafts/pull/426",
      "state": "OPEN",
      "author": "zaheduzzaman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "typo and nits",
      "createdAt": "2021-11-24T12:16:48Z",
      "updatedAt": "2021-11-24T12:16:48Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "main",
      "baseRefOid": "3893028c41567d89a6f416049cff901ce87a5c21",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "zaheduzzaman-patch-4",
      "headRefOid": "ef24d59d3438c813107182a3bf5dcf11517527cb",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}